Notebook[{

Cell[CellGroupData[{
Cell["The simulation when the cylinder rolls around on the ground", "Title"],

Cell[CellGroupData[{

Cell["Define equations", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eq", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"m2", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"x0", "''"}], "[", "t", "]"}], "+", 
         RowBox[{"R", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"\[Theta]", "''"}], "[", "t", "]"}], 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{
               RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "2"], 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
        ")"}]}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"f2", "[", "t", "]"}]}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Fn2", "[", "t", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"m2", " ", "R", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{
            RowBox[{"\[Theta]", "''"}], "[", "t", "]"}]}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "2"], 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}], 
      "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"f2", "[", "t", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Fn2", "[", "t", "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{"m2", " ", "g"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"f2", "[", "t", "]"}], "-", 
       RowBox[{"f1", "[", "t", "]"}]}], "\[Equal]", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"x0", "''"}], "[", "t", "]"}], 
        SuperscriptBox["R", "2"]], "i"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"f1", "[", "t", "]"}], "+", 
       RowBox[{
        RowBox[{"f2", "[", "t", "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"Fn2", "[", "t", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], "\[Equal]", 
      RowBox[{"m1", " ", 
       RowBox[{
        RowBox[{"x0", "''"}], "[", "t", "]"}]}]}]}], "\[IndentingNewLine]", 
    "}"}]}], "\[IndentingNewLine]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"m2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["x0", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "+", 
       RowBox[{"R", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Theta]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
      ")"}]}], "\[Equal]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], " ", 
      RowBox[{"f2", "[", "t", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Fn2", "[", "t", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}]}], ",", 
   RowBox[{
    RowBox[{"m2", " ", "R", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "\[Equal]", 
    
    RowBox[{
     RowBox[{
      RowBox[{"-", "g"}], " ", "m2"}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Fn2", "[", "t", "]"}]}], "+", 
     RowBox[{
      RowBox[{"f2", "[", "t", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"f1", "[", "t", "]"}]}], "+", 
     RowBox[{"f2", "[", "t", "]"}]}], "\[Equal]", 
    FractionBox[
     RowBox[{"i", " ", 
      RowBox[{
       SuperscriptBox["x0", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], 
     SuperscriptBox["R", "2"]]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"f1", "[", "t", "]"}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"f2", "[", "t", "]"}]}], "-", 
     RowBox[{
      RowBox[{"Fn2", "[", "t", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], "\[Equal]", 
    RowBox[{"m1", " ", 
     RowBox[{
      SuperscriptBox["x0", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}]}], "}"}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Define initial conditions", "Section"],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"initial", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"x0", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"x0", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", ".2"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], 
   "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"x0", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x0", "\[Prime]",
      MultilineFunction->None], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", "0.2`"}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Theta]", "\[Prime]",
      MultilineFunction->None], "[", "0", "]"}], "\[Equal]", "0"}]}], 
  "}"}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Define parameters", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"params", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"m1", "\[Rule]", "28.94"}], ",", 
    RowBox[{"m2", "\[Rule]", "3"}], ",", 
    RowBox[{"g", "\[Rule]", "9.8"}], ",", 
    RowBox[{"i", "\[Rule]", "2.7425"}], ",", 
    RowBox[{"R", "\[Rule]", ".788"}]}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"m1", "\[Rule]", "28.94`"}], ",", 
   RowBox[{"m2", "\[Rule]", "3"}], ",", 
   RowBox[{"g", "\[Rule]", "9.8`"}], ",", 
   RowBox[{"i", "\[Rule]", "2.7425`"}], ",", 
   RowBox[{"R", "\[Rule]", "0.788`"}]}], "}"}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Control equation", "Section"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"goal", "[", "t_", "]"}], ":=", 
    RowBox[{"Piecewise", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"t", "<", "5"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"0", "+", 
           RowBox[{"5", 
            RowBox[{"(", 
             RowBox[{"t", "-", "5"}], ")"}]}]}], ",", 
          RowBox[{"t", "<", "6"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", 
          RowBox[{"t", "<", "40"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"5", "-", 
           RowBox[{"10", 
            RowBox[{"(", 
             RowBox[{"t", "-", "40"}], ")"}]}]}], ",", 
          RowBox[{"t", "<", "41"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", 
          RowBox[{"t", "<", "80"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "5"}], "+", 
           RowBox[{"5", 
            RowBox[{"(", 
             RowBox[{"t", "-", "80"}], ")"}]}]}], ",", 
          RowBox[{"t", "<", "81"}]}], "}"}]}], "}"}], ",", "0"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"goal2", "[", "t_", "]"}], ":=", "InterpolatingFunction"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"goal", "[", "t", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Time (s)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(x\), \(0\)]\) (m)\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<\!\(\*SubscriptBox[\(x\), \(\(0\)\(\\\ \)\)]\)as a function of \
time\>\""}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ceq", "=", 
  RowBox[{
   RowBox[{"f2", "[", "t", "]"}], "\[Equal]", 
   RowBox[{
    RowBox[{"10", 
     RowBox[{"\[Theta]", "[", "t", "]"}]}], "+", 
    RowBox[{"1.5", 
     RowBox[{
      RowBox[{"\[Theta]", "'"}], "[", "t", "]"}]}], "+", 
    RowBox[{".1", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x0", "[", "t", "]"}], "-", 
       RowBox[{"goal", "[", "t", "]"}]}], ")"}]}], "+", 
    RowBox[{".5", " ", 
     RowBox[{
      RowBox[{"x0", "'"}], "[", "t", "]"}]}]}]}]}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQrdT/d/E8uYN2DFCwnUNTPjdjvj2Mf7Bi3RKNjPVw
/jGDwnS2jP1w/omeSx5f08/D+Setmne+Sb8P55+aeLvwRfp7ON9rL7vfs/T/
cL7h/6SvYh8Q/B6F+HPKNgwOMH5J0q7SkCMIvsuzgiNbrzDC+Y/e3k2s+MoM
5yv83T7nrxkHnC8yL/WDaDWCz2Ev7KK3H8F/35D3Os6dE87fx6JqdSCcC86P
5Zl0vamCB84/y2vGyRIrAOdf8haaca4Gwb/R+U5t5hwE/wnrche9Owj+n7/i
DRHRgnA+k80XPuVqBJ+j6sLct7MQfOFvHbubbiH4Wu9+flsTKQTnG+hcay2v
RPDNsjaJOM1E8J2eZRldv4Hge6i4H1z4A8H3S1IOyJEQhvMj793OZYxA8ONk
dvw5XY7gp0RN6Z42HcHPmlEglbgdwS+45rNS+zqC33Hs14WI+wg+AOr8ijU=

       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBmIQXWHJqr9cQcKBAQxEHJz6XQ8s90fw2b7LvGMxlYHz
U/V/8RryKsD5vpqpH8XcVeD8TVdqS09aaMD51kJa61nqdeD89N+T5i6NMIDz
8489N17vawTnd0Wxqf7NMYHzk49XpxlmmMH5B9klA7MjLeB8Q8GGaS9LrOD8
hM+2On45NnD+wnlHZb732sH5m/usbl8KcoDzS3bZBsz1cYTz959a+qkz2gnO
F+l8f/3nTQQ/091yb2aEM5y/Ld7c+tUcBJ+pwnRn1kMEn8f664lfLxF80X9b
bnR9QvBn3Z/y4NI3BF/uYMkLqd8I/sUIeanXSHwAT99ngQ==
       "]], 
      LineBox[{{40.03188775510204, 4.681122448979593}, {40.06210328098255, 
       4.378967190174521}, {40.09555148532526, 4.044485146747405}, {
       40.16244789401068, 3.375521059893174}, {40.29624071138152, 
       2.0375928861847825`}, {40.32968891572423, 1.7031108427576669`}, {
       40.36313712006694, 1.3686287993306223`}, {40.43003352875236, 
       0.6996647124763911}, {40.56382634612321, -0.6382634612320714}, {
       40.59727455046592, -0.9727455046591871}, {
       40.63072275480863, -1.3072275480863027`}, {
       40.697619163494046`, -1.976191634940463}, {
       40.831411980864885`, -3.3141198086488544`}, {
       40.864251183276394`, -3.642511832763944}, {
       40.8970903856879, -3.9709038568790334`}, {
       40.92992958809941, -4.299295880994123}, {
       40.962768790510914`, -4.627687905109141}, {
       40.96811224489796, -4.681122448979593}}], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQrb/8wVORFhcHBjAQOXCOYaL1jXYE/5fhYT+eHgR/
1bfu2XfmIPiRu0NerFmL4O9wedboex7BFztXLv3uA4J/5cEsP30TVzh/4ue9
jQXlCL7NecmaN18Q/GerSssyitzg/CNuk2Y0NbnD+Yz+tx71N3jA+QyO2xgX
VHrC+R3i330vtXvB+QVRyYe+N3vD+Q8bTVLsp/rA+SKTZ97qXOgL5y8T0Ko8
PtsPzj9YJO+qvtofzp+nsEDGNiQAzt9b84sh4wKCr+jN/kc5PBDO33Jes/vm
FQS/59g/A4XYIDh/cvHLrIQ7CH6NqBy/UmQwnD9p/sSc03MQ/JWarKdKHiD4
ft++9EW+QPC/HHoSbPcBwXdfGbPN4AuCP6v/ioTyDwT/SJOAl8wvBP9tqU+1
6B8EP2MNf+/Xvwg+AGs0pHI=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQA2IQPSP4QxGXU4gDAxS8nvVthqQrgi/SZ3RKyB3Bt2vM
+83tieCnl6zSYfVG8HdFKfV/90Pwn/jGHfgQgODzOs76+DIIwU9QFwq5E4bg
s31hlDwYh+D/2DCj70kCkvty9Vk4khH8C89j3vulI/izbm8/eicfwdc7nFv0
owHBD5t087T+YgR/ucHGunnPEXzNpFV+f3ND4fzbnjs3hb5G8C8trtK1Lw5D
uG9zoI3SJwT//46irW154XC+t4Gba81XBP94rH5mdnEEnC+UnLF7bimCH5ex
kPdCOYL/rUh4k0kNgq/S8f3X3xYEv2HT/p4J0xB8K/aADVt3IvhtPJ1ML3Yj
+BcFD4VI7UPwM2RMftYdQvCnG0o4eZxG8L9EP7h86w6C75AoqcZ7H8HvTguq
sH+I4CsVHpFZ8hTBD2xbkZr7DsGf0/1w+/wPCP6LCVJclz4h+Wd2zzqz7wj+
mQVHGTJ/Ivjiy/4Fzf6N4CetNl969i+Cv25Dwff//xF8AK8erRw=
       "]], 
      LineBox[{{5.031887755102041, 0.15943877551020336`}, {5.084312032780538, 
       0.42156016390269}, {5.115358167912872, 0.5767908395643584}, {
       5.146404303045205, 0.7320215152260268}, {5.208496573309872, 
       1.042482866549359}, {5.332681113839206, 1.663405569196028}, {
       5.581050194897874, 2.9052509744893706`}, {5.612096330030207, 
       3.0604816501510346`}, {5.643142465162541, 3.215712325812703}, {
       5.705234735427208, 3.5261736771360397`}, {5.736280870559542, 
       3.681404352797708}, {5.767327005691875, 3.8366350284593764`}, {
       5.829419275956543, 4.147096379782713}, {5.860465411088876, 
       4.3023270554443815`}, {5.89151154622121, 4.45755773110605}, {
       5.922557681353544, 4.612788406767718}, {5.953603816485876, 
       4.768019082429382}, {5.968112244897959, 4.840561224489797}}], 
      LineBox[{{80.03188775510205, -4.840561224489761}, {
       80.12381808847167, -4.380909557641672}, {
       80.24715605746877, -3.7642197126561427`}, {
       80.49383199546298, -2.5308400226850836`}, {
       80.52466648771227, -2.3766675614386656`}, {
       80.55550097996154, -2.2224951001923188`}, {
       80.61716996446009, -1.914150177699554}, {
       80.7405079334572, -1.2974603327140244`}, {
       80.77134242570648, -1.1432878714676065`}, {
       80.80217691795575, -0.9891154102212596}, {
       80.8638459024543, -0.6807704877284948}, {
       80.89468039470357, -0.5265980264821479}, {
       80.92551488695284, -0.37242556523580106`}, {
       80.95634937920212, -0.21825310398938313`}, {
       80.96811224489795, -0.15943877551023888`}}]}, {}}, {{}, {}, {}}}, {}, \
{}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Time (s)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(x\\), \\(0\\)]\\) (m)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"\\!\\(\\*SubscriptBox[\\(x\\), \\(\\(0\\)\\(\\\\ \\)\\)]\\)as a \
function of time\"", TraditionalForm],
  PlotRange->{{0, 100}, {-5., 5.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f2", "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"0.1`", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        TagBox[GridBox[{
           {"\[Piecewise]", GridBox[{
              {"0", 
               RowBox[{"t", "<", "5"}]},
              {
               RowBox[{"5", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "5"}], "+", "t"}], ")"}]}], 
               RowBox[{"t", "<", "6"}]},
              {"5", 
               RowBox[{"t", "<", "40"}]},
              {
               RowBox[{"5", "-", 
                RowBox[{"10", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "40"}], "+", "t"}], ")"}]}]}], 
               RowBox[{"t", "<", "41"}]},
              {
               RowBox[{"-", "5"}], 
               RowBox[{"t", "<", "80"}]},
              {
               RowBox[{
                RowBox[{"-", "5"}], "+", 
                RowBox[{"5", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "80"}], "+", "t"}], ")"}]}]}], 
               RowBox[{"t", "<", "81"}]},
              {"0", 
               TagBox["True",
                "PiecewiseDefault",
                AutoDelete->True]}
             },
             AllowedDimensions->{2, Automatic},
             Editable->True,
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{1.}}, "RowsIndexed" -> {}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.84]}, 
                 Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
               "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}, "RowsIndexed" -> {}},
             Selectable->True]}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.35]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}],
         "Piecewise",
         DeleteWithContents->True,
         Editable->False,
         SelectWithContents->True,
         Selectable->False], ")"}]}], "+", 
      RowBox[{"x0", "[", "t", "]"}]}], ")"}]}], "+", 
   RowBox[{"10", " ", 
    RowBox[{"\[Theta]", "[", "t", "]"}]}], "+", 
   RowBox[{"0.5`", " ", 
    RowBox[{
     SuperscriptBox["x0", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "+", 
   RowBox[{"1.5`", " ", 
    RowBox[{
     SuperscriptBox["\[Theta]", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}]}]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goal", "[", "t", "]"}]], "Input"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"0", 
        RowBox[{"t", "<", "5"}]},
       {
        RowBox[{"5", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "5"}], "+", "t"}], ")"}]}], 
        RowBox[{"t", "<", "6"}]},
       {"5", 
        RowBox[{"t", "<", "40"}]},
       {
        RowBox[{"5", "-", 
         RowBox[{"10", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "40"}], "+", "t"}], ")"}]}]}], 
        RowBox[{"t", "<", "41"}]},
       {
        RowBox[{"-", "5"}], 
        RowBox[{"t", "<", "80"}]},
       {
        RowBox[{
         RowBox[{"-", "5"}], "+", 
         RowBox[{"5", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "80"}], "+", "t"}], ")"}]}]}], 
        RowBox[{"t", "<", "81"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solve ODE", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExportString", "[", 
  RowBox[{
   RowBox[{
    SubscriptBox["f", "2"], "\[Equal]", 
    RowBox[{
     RowBox[{
      SubscriptBox["P", "\[Theta]"], "\[Theta]"}], "+", 
     RowBox[{
      SubscriptBox["D", "\[Theta]"], 
      RowBox[{"\[Theta]", "'"}]}], "+", 
     RowBox[{
      SubscriptBox["P", "x"], 
      RowBox[{"(", 
       RowBox[{"x", "-", 
        SubscriptBox["x", "0"]}], ")"}]}], "+", 
     RowBox[{
      SubscriptBox["D", "x"], 
      RowBox[{"x", "'"}]}]}]}], ",", "\"\<TeXFragment\>\""}], "]"}]], "Input"],

Cell[BoxData["\<\"\\\\[f_2==\\\\theta  P_{\\\\theta }+P_x \
\\\\left(x-x_0\\\\right)+D_x x'+D_{\\\\theta } \\\\theta '\\\\]\\n\\n\"\>"], \
"Output"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ceq", "=", 
     RowBox[{
      RowBox[{"f2", "[", "t", "]"}], "\[Equal]", 
      RowBox[{"3.14", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"10", " ", 
          RowBox[{"\[Theta]", "[", "t", "]"}]}], "+", 
         RowBox[{"1.4", " ", 
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}]}], "+", 
         RowBox[{"0.0884", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x0", "[", "t", "]"}], "-", 
            RowBox[{"goal", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"0.648", " ", 
          RowBox[{
           RowBox[{"x0", "'"}], "[", "t", "]"}]}]}], ")"}]}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"sol", "=", 
     RowBox[{"Quiet", "@", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "initial", ",", "ceq"}], "}"}], "/.", "params"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"x0", ",", "\[Theta]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "5"}], "}"}], ",", 
        RowBox[{"MaxSteps", "\[Rule]", "Infinity"}]}], "]"}]}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", ".5", ",", "5"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`b$$ = 0.5, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`b$$], 0.5, 5}}, Typeset`size$$ = {497.5, {99., 34.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`b$64825$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`b$$ = 0.5}, 
      "ControllerVariables" :> {
        Hold[$CellContext`b$$, $CellContext`b$64825$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`ceq = $CellContext`f2[$CellContext`t] == 
         3.14 (10 $CellContext`\[Theta][$CellContext`t] + 
           1.4 Derivative[1][$CellContext`\[Theta]][$CellContext`t] + 
           0.0884 ($CellContext`x0[$CellContext`t] - \
$CellContext`goal[$CellContext`t]) + 
           0.648 Derivative[
             1][$CellContext`x0][$CellContext`t]); $CellContext`sol = Quiet[
          NDSolveValue[
           
           ReplaceAll[{$CellContext`eq, $CellContext`initial, \
$CellContext`ceq}, $CellContext`params], {$CellContext`x0, $CellContext`\
\[Theta]}, {$CellContext`t, 0, 5}, MaxSteps -> Infinity]]), 
      "Specifications" :> {{$CellContext`b$$, 0.5, 5}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{555., {114., 122.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "@", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", "t", "]"}], "&"}], "/@", "sol"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "5"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Position x\>\"", ",", "\"\<Angle \[Theta]\>\""}], 
      "}"}]}]}], "]"}]}]], "Input"],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Plot[
    Evaluate[
     Map[#[$CellContext`t]& , $CellContext`sol]], {$CellContext`t, 0, 5}, 
    PlotRange -> All, PlotLegends -> {"Position x", "Angle \[Theta]"}], 
   StandardForm],
  ImageSizeCache->{587., {133., 141.}}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\n", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"p1", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"sol", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "120"}], "}"}], ",", 
       RowBox[{"ImagePadding", "\[Rule]", "45"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "None", ",", "\"\<Cylinder position x\>\"", ",", "None", ",", 
          "None"}], "}"}]}], ",", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "C1", ",", "Automatic", ",", "Automatic"}],
          "}"}]}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"All", ",", "All", ",", "None", ",", "None"}], "}"}]}], ",", 
       
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "Automatic"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "6"}], ",", "6"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "C1"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p2", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        FractionBox["180", "\[Pi]"], 
        RowBox[{
         RowBox[{"sol", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", "t", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "120"}], "}"}], ",", 
       RowBox[{"ImagePadding", "\[Rule]", "45"}], ",", 
       RowBox[{"Frame", "->", "All"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "None", ",", "None", ",", "None", ",", 
          "\"\<Head angle \[Theta]\>\""}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "120"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "60"}], ",", "60"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "C2"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"AxesOrigin", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"120", ",", "0"}], "}"}]}], ",", 
       RowBox[{"Axes", "->", 
        RowBox[{"{", 
         RowBox[{"False", ",", "True"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"Overlay", "[", 
    RowBox[{"{", 
     RowBox[{"p1", ",", "p2"}], "}"}], "]"}]}]}]], "Input"],

Cell[BoxData[
 OverlayBox[{
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwU13c8lV8YAHB7Zd5rr6zIzJZ5H3tzl1nhJ5RNSUuSUpKVtjIqK5VokKj3
DVmVrCKEUElGRnb8Tn/dz/fzue/7nvM8z3nOObL+kdRAJgYGBh1WBoZ/v4uD
LQ0KFxrMnDaa9VjHGky6c0WPmvfeIU1filoo+FlvAkIf/EV7H5McHeI9Oqbq
TGLJpT3MvXWkqzm/O+dncROBaZGslZ5O0vRBGa7Kj9UmQ7UukQs9I6Rs38VE
uYY7JtlCIgEHWcdIBmeNN77a5pjQI4Y857S/kZ41juQnMl0xad0aZfE77Qfp
+fOMtE+Hok0qEy8KTVpOkkQlU1Ipljm1NgoTX2Z75ki1Z+1eOPtX1RaQXTwr
IuZJXftOZ3o7V9cynnjcGcW6QBK1N/j6Rq+mtvbjsaYZ7T+knLVEmSUmrFbr
3JaKqbQlksuD813XaPW16U8iVR8qLJNOF0h8iHNoqJ0c6ioMq1kmdSfQrihZ
vKkt2nkr+9f4Cinf7Bz/Y62mWskJtTM/LddJ6+vHdghPt9aeUSy+PxfHAEdv
3muMtmqvXekxuPK7hwnM9n0tZkvuqH2uzeFXrMwM6b75h61yOmpj03pVfI4z
A/8t1kvKjzpq5yyO4m+lWUCjWu/Wt7cdtRMPX/wqCmQF0Y6M9xN/O2oHTpta
7Jlnh112vedY33bW4jssZ1p4eYDb52VKT9DH2nrL4oKOO0QwuNpS+la/q1Yz
/dHPpWYiWLA+v5aq1VWb21ulIT1DhPMJ6oe3qHXVbpHHD1oJCYLJwIu30/2R
r46ENz8PMRaE+RC3Z28PPnv1var9b+Z/gkDs1775+GzPKxrTZ4uqc4Kga3zL
Qsxj5hXu9PXcl4eCoKn0ezPDgQHTuPbzHXO3IIyezzmxdQcPduvrrIDKqiCQ
AtiHTpaIYJxqq+5kGSE4rukUSO6TxWJjmW7F2giB7E0V5fKzytgYzvX1VpgQ
ZF4fiV46oYVRtxAV67OEoJ6FFseqaoBhbhKhP58LgZgrI9t6tymmli9fzjck
BNGChB/Ory2w7AnVP3qswuCjWyDoL2GLcejpGu1WFYYAr+ANqWVH7NBJk5OJ
FGF44T8+vauUjJEFnTk/5AhDOW1Z/FKNO/bSx83lT70wmFn92Pwj5I2p3Ntz
SWJCGAS2fHuhkLcHYzWLkNqvLwLy1bt2pWX4YweSY/3Td4vAuNPb7OunArDh
zvjip4kioGhW6UI5EoS92JehxfhBBCT0kv6meIVg2x9fi1X6IwLnuFfM5fXC
sCvreTXOEqJgU6aa6rIUjjHZljDEmItCpM0rhdVLkVjUxXLr7H2iUMw8FpEY
H4UN9j9PwdNEweFWUPsXgWjMUfH1h+9PROGuzuHC6Lho7HlUiyBPnyh8S3Lc
/V9lNKZY0+GlwyAGnSEX+a9WRWOXWPtyvRTFYPb88/y6w9EYA3lk9KSTGPiu
HeTcPx2FRWRPbC86IAYHdqay9xGisP6xufB318Vg539leeeeh2N2O9Yez70S
A4MD9nu8TodglUeZl0W/icHjYv4zKweDMPmGLaakLeJw5UZUFvOR/7BMXsHE
QC1x2B1Dv9u+4o5teEo2XfAQB5u6Vy+GMHMs9K4C9+MT4vC0MA7P4TYj9U6p
UXrvikNowY3DYm7eJJudelc3WsQhEhjyG7/sIz1NNO1X+C0Of/DYVtalaJLs
e2sZR2EJYK6w6OWoOkJKF3EJjDaRgEurmhsSkgmk9f/cS6/5S0DT8nDPmPkZ
UvADn5mXyRLweMvFubCOZNKnxSDdsTIJWFpmt9D+kEaquHD4leaaBLzfMv45
6dJlkvSnk8wespKQ7ex+8nPDNVKqTLLdCVtJOJLraDygd5O0EpKZdjdcEmoZ
Q4syx3NJQc+ud7ZckoR4xl9lMZG3Sd2b+SK/qyXh/vjc2N60uyRzh3u7hYcl
wfIC29G/bYUkyaHq7/5qUsBR6X7qFl5KYpiPvt5CkYLnc3njHgEPSWNsKg6a
h6Ug0DfpRJVwOemhRvbDv6+l4GX9qIGc2BNSlgXVN+CHFFSu6YVer3pKinXn
EnjLLQ1flHtUJ4IrSWbxx2Kue0hD2EPzCJ4tL0hyWdqKm3HSoLlC17RZrSGx
FU30BN6RBpszQ33bN16S2t57G+tMSUPkw6RBI7nXJF8pY6a2xK0gThMfbv7+
hmSlNf9Et2QrbCtiVnfTbiJtt74fePP9Vvj5Mr81IrmZdKQyLUCXWwZ2Jd+Z
VKW/JcHg3yZGDxkI8wo9r/60naQ9/lnmWbAMGEYZ/XfsdAdJYe7Z0f1xMtB7
oO3FW49OEgdbhOqH2zJQoNd+y4Kvm9ShPph+a1IG2Gbkjz+p6iE1GLz44bop
A/Oc38N8H/aSKs2vAjNBFhb/k/mSWPyZlO3mMhdsIAsF/l3kzyX9JP8Tr9wM
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
9T/1Yphj
       "]]}}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{1., 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{
      FormBox["\"Cylinder position x\"", TraditionalForm], None}, {
     None, None}},
   FrameStyle->{Automatic, $CellContext`C1, Automatic, Automatic},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->45,
   ImageSize->Large,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{1, 119.99999755102041`}, {-6, 6}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}], 
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwUV3c8Vf8bF2WW7D2v69p7j+s81rUvDYpUiGRExZdC0VCEjCQNkqQiJZWG
cT4hhJDsvUNWsonf/f11Xu/X53nez/sZ53zOI+kRuN+Lno6Oro2Jju7/z+X+
b1XEuCqjAeeojbAkxjLgbfIQ6CzCnoxHrioaMJaFOOR1MHRWYMntArnNvrvK
bPlmLm6YNmAyJx8NphJ3lnHO8qesdbRgt03PvyeE0pddf/Q8fEW9DVufybl3
PmJH2aaDntdSQgcWGcAwyOlFV3aOvo76d6ILG6Qy7rc9vlU68dZF949pL7ZR
vpxVVLFReszrt+RcZj+WdoLbfGTXWqkvW3n0csQgdjKfcaRNfbl0oJQauNgx
jBUkuucX28yX3ufl9wzaNYqV7slbGj80VXowYODwgvoYlmV0Pbbt60hpnfgZ
k/mEX9i1qJDy8fyvpdHndXUCSyYwaroCu8yht4bwg05xdmIScwl+VRhl1WZY
fCWZd9p0Gqt7WnA6DP9tSCFO9f3pWMBw0QdL0yJM5BwH6uE3AX8xvtfpzHG7
WMg7Lha1nNm1iBmFWhTcWmAll7aF1cypL2EGb2ei8n+zk9VusL2ZSVjB7tQZ
q64NcJNvvQ1UKCCuYpyM0nPh/Lzk6YGfT/1LVjGSlnxRuTMfOVf34f3fE2tY
o/Plg0eXBMg7veh48yPXsbj18TBjCyGye7Jnoi/fBuaYTW9w/44wWWRK8dqk
6SbGvT2oU8wvRg7jS9563r2JfTVuDxo2Eyd3mCydP3X2H/Zw0zHtsaoEWTPQ
+a8M8xaWSnqo5vVegpzyoOz0r8wt7JrCVsKsiiTZbjHa42TDNsb4L15SdieB
fI30LH8hgg7eV1zfGsojkI0iA7PO5u0AOcsT5bFBUuS1Dp078x30IKWeQDbO
lSJPFXz+neu1CyoF+tUeC0mRe6+STY7+ZYKIVXEKs7gUuW320mldfRbQnyZq
CL6VIjc6o3Tuy6yQkHgqke0MkVxTtaNqtoYNSuykJHX+EMlIxXTuG/se6G7N
fFK+S5r86f41oaeO7GDb1WXA9oRILtpVbR71cC9o2n1tOtohRU4/+nZmWZwD
6AP27Dl5QIrs9PHqx4KzHFCv9ZU75wuB3HKaSBXm5YTyKLV0u1hJclLtokDL
SU4IUJByq5+WIFOlvo7EfOSEi13t7RJOEuTdl+68wli5gJE+8Pl6sji5rtPr
wvIRLtD/NxslkSRGjtHQNiso4AId3bXziS9EyZRbjHs9t7nAVTk9VaxfhLxz
sr1LaB83cDjMTInIi5ArTZ/l/MjmBhIHy0pjtDBZ9dbryZVabhjJ3MA1DITJ
mZ0flMXmuKHi+2pk/ZwQmU0KBZnx8sABb+U1az827Pzp2o++BjwQe/rh7cqw
/dj4h+Z/Se48QBe1a8jHLhg7QN9l8uEGD3z9clubKhaHIduhG30FPGD7y6D/
gs1DTPnuZANDKw/0xQqct/vvBfZw6A+n/DoPlDemyJPQO4xFcd3JQYIXqK+D
LtZfw7GQEPqHIRReEGfvnNZ6W42NItahh/68IKr6zD7zeBO2n42bVJnCCzVX
1HcFr7ViuKOw3+RHXkhOUfIzs+nBFLOkCvcO8MJWvfHZGNch7P6UwpLWLj5Y
fJv4cCBvDGPW0tR3VeADma2ajZx7U9h/kYaRV/bxgVWw5MprgXls+JtZ1fNQ
Pqj5ObTKQf6LOfDYsTRl8AGjAb1ZZdkyVnbMkbpUyQcXdhy65Zy5jsm/OHpb
eIoPfq+rRygMb2Hpf706jTn4YY9B7Df56h2wyyhA9JQ2P7Qxbyf32u+EczEh
Hrdc+aGgi8p/aS8TDLZcevbuCj8shJ16YMbICnaiN6a7n/ODUmXXZQutPfDZ
O1FtRxM//Jpr5ERUDpAtuhsis8QP91+q1Y+Kc8GdzUcldsICEGFX73qAnQfO
JBea3/cWAMXqq5/ajASgv+fjTZQgAA0Z846tF4XAhvSlafytAFi4vBRIbRUB
UskPZw06QdjPMFoTOyQBPaMLpxvSBaG45dSfXgMSUHS10ra+CUHYSCJ5bVEV
3l0h9xDnheDO93Gq71s1kPxuLmHDJwz/CXxo1TurDpvuTnl3PYRB5SiXot6k
BryJCy1X3RAGZt+io/fKtUGsPZLhkKQIRL329hnx04F4iRjLixYi4BFhNyLM
qwsn36e3fLstAhfeBHwqctaD1u0s/vlPIsBY/afDdFEPjK1fuPINisA4x8mP
crH6IDLwadxDURRIx/VUw7IMgO7v2fRv+0TBLizs5AdxQxhllLdWDRWF7zcf
1CqkG0Kt0PBG2kNRaElcwxNYyFCgfL/g3xdRYBdaeJUeRIYUk/3HPX+JAl1g
qs2edjKEOLFy1u8WgzXnnUtvVI3AxbeiQk1dDBizYnYcuGoERpfCgtMPiYHP
t5Sdld+NgJCiTtqOEIOk7Hy2nr0YMOZOdXhli0G40s/mMCsMpj5lxzbUiEHL
D6bhmDAMGr+7GGjMiIF9VXDZQjYGRUNcM/e4xMHiRffgywoM0pbqMul0xcFd
M7O+qAuDMJarDt5HxWHg8IklxgkMjosa0DdeEYcTBuUfimYwMFP7+1bzuTh8
+eItXz2Fgax5vteD7+Lw9fOPv4cGMNjtfIKf/q847KjeYo+ux+B8cYKn5m4J
2vcuPfrMawx8kU/ZLzEJaK1gkTCNw8C1zpzvgZoErDPd2qNwHANqq2Qg1UwC
3hnrXzuigAH0/6vZcUgCUjkWnHfPG4H6RJfEex8JsJ68mn6hwAiIC+8vnIqQ
gEQmOvaRE0bAt5ncIpwoAY8+9nXFcRsBM2OAQtNjCeg70b76qZQM63utr115
JwGLHOXN74+TYVqQ1KdVIwG9Q6Jl3zZp16dS/62H0xLAH9Dh40syhCqdz7/s
tyUgJNe1MvmtARQbpwEDlyQogHjqLkMDuO9IXfDRkQTjVzf9abcAeFwsd9S5
Igm4rY5mh4guLDRkirTwEyBpYj2Hx1sDePyP5zGZSsG7w2uhgV5SIM/0pNrh
kBS8PDc+GSRFAMgeH77nJwW8rCNxuaMS4N95WlgxVQrItadJ/sMiUGUWEe8w
JgVDTpJBF05zQ/cA/vzemhTY/3fMj4fICfNhDF+H9xBBJIjtKkv1HhB5c/Nf
sDYRdjzrnFNc2gnBovcC7t0gQtl6Fodt7iB282PvzeEHRHiY+dOo+mwKlnVA
4plCIRHc1lrGwk/24w2xzwbKOolQIYoMX0wv48Tl9w7DctKQ+LintbOHBekn
r/krGEnDfMueZ8kme5CDIjk2eL80UD+IWhyw5kARHlVfGMOlQejz9R7+i9zo
Z2OLukKDNEToWazwnBBEEz589sGD0vDut5tsyhchtLXTxa9sURqeCwamiPOK
IHmDoSf2oiQQbFTVUX0ghqCdiNLVSFDQ6Ox877s4cjp7qnfInARl0SWHA8Mk
0JVnczzBASQwuuKhM5MkidJNNNTKrpAguOr+ky/cBPSqL8SO8S4JVqIX3y0n
EVA391Z0Ok4CuScxVyLDpND8K+PsoZ80//kTsq3jUojROrpcfoIEFUq9znF2
RKQetXullEMGrBOGlVVYpZGlsAM3o7QMHGEpvC/tJo2OFd9WsdeTAQsNikpK
oTQK3tdhk24nA5LWIg0RG9Lo5rTQqSF3Gj7yKXYWSCjrxrFr8iEysFxhX/on
ioSKCdlZQTdlIHOLcym5hIQaysZKSzNlQG51gr53noSGD8t17XorA/6/I/70
Scig1b/+S9QaGQjddGd6ZiOD2BMLOdN7ZAD8pSotzsogovyi0tCcDHCUETp+
JMsg/a861vI7ZSHc4BzxcIEMcnALPxkkIAsvwyrezVbKoJMb5VdKFWVB7a/R
27w2GRSRRv9ol7EsJF018swelkEpapQSqqMsrPOoiMxMySCVHmcL8ilZMLT3
/XFjVgY1XDv9UyFcFvT23PiiR8M+ypePC92ShTblc1oCNHvGztTfzI9lwU78
EVGPxvfk8vPQlbeywLXJovi2XQaBQinDeLUsHD5EF51RI4P6W5sSW7tkQXvt
w8be9zIo/NKIcOW0LBg9TRsjPJJBArIrz95sy0JfmD7/XLQMKv7BqpnFJQdJ
8pbdCT4y6EC4GLolLQdPTpFGBKxl0DxR3fairhw81nhHyZORQQmN5p1+NnIA
934HutLLIPnzzp4ux+QAHwrjte4mIc/6qAida3KQ/r1+2vQKCe34L5WZdFcO
mI3evbi+n4QyxZ6n8uTJwX83ecfOSpBQ59mml3+a5GCw+Sql8L00shMQ68sX
loeypgiun7VENPVFzee+sjzki3XrHo8lohg/86UYY3nwwQ7anbEkoopy/z0n
veXhD4P0uYQKKaTtVUKWeCsPKubfWR6+IKCf7E3f2KvlIcrSjVfPnYDOfBx2
/NcpD25bky8UBQgoj401oHuLxkfGecKuSSLxosOZqdYK0FNOrbFylkDM20tb
zMMKsLH6GAN2EfT0OUvcyqICvJHk4bp3URiZ7BflH2dShCSNynvWs0Io4qmZ
SqWSIhRZW5CxVkE0b3P7+MULinDTtYhh/D0/SljK/e0XrwgVGor6VzX4kfyj
z6EujxSB55Jktt9bPuS5MJSo81UReJ8NnLjymRd1pauiPxxKoB9yo8Zyghvd
/5m/N0RaCahmDHn4WW7kwi5zfF1PCfa9vaD+bosL9V4V3aI/oQTr7KSBU1Jc
KKM83e5GqBIk5fu8pJZwomNr3Bls8UqgpxgT9s+JEw0GsBryvFcCSVPBK3/u
caDHL6Lj0r8pwevs/lEHYw7kMUrXI9KvBJ/WHlOOdO1Fo84rF6SZlMHqMbaP
+RE7epp67tsLYWXYLRHDKsTOjk42zQgoqyqDavXQgEf0HjRhNvpB21kZTP2y
Oz7G70YvIo8zlZxWBs/nPtuNIruR7+duJ+yKMsyFmh1Tfs+GFJYccyvTlKE8
oEuyzZENTav8WLLIV4aD/54w4lusqMDX1rwBVwZr0uiRsdesKOBpTapDqzL8
/lHIifmwIpVBk9HWCWVQuyhZheRZ0bxQuYbzP2VwuXOx0nWRBb1x1Lvax6kC
Eq6GJIZqFnQu6V2LO0kFzmaO1T9+xII06lUI4/oqsFdS6z/iZRa0uCv/rK+9
Cri2u1QE+7Kg90D6MntCBWwjbjqEHWFBIeGPOYLOqwBJ0eGd0EEWpFMs4rYS
rwJFF58+0KPh1fm7r8Mfq8Cb6VNfP9LsPylwb2+/V4HRW9mk8zS+sJO3qNfq
VABXuzLoGMWCDB6zZDIPqEB/hIu3cgYL2uy5NhP/VwUsRCLP9yIWdIwtKpN5
pyo8fppsrPebBeHPydXW7KowKZ5wSESEFUlQNmbiBVSh+AB735EDrChq5CNv
E0EV6LvywhuSWNFgVAiZU0kVMqmaMcatrMhYTNPrgA7N/x3fdrwoG6J3fv2u
w0YVhBKl2SYRG/JY9u8VdKLhd305d4V2o8rb8jtd3Wj8qxKthy/sRtcanx4Y
DFaFbw9fPjQ134NG/U6EEyJVQSZj1pShaA8yZ5F84hmrClyhqvgOKXbEaPZw
YSJDFQxVJ0v6OfaimE8pyX+qVaHG6t77lZscKC4nsoleUA026FUveX/jQtaa
Ply8UmqwJZR7fZOLGzFX7XeUUVIDv9C8zEFXbnRtRLrHxlgNdCT3ucn+4UYR
hIbxVB81uP++yf6LAC/SL3ov9yxIDVxHUk263HnRqvEj/08X1WBM7Fmxbx4v
+s/93EJfshosOkwPp+rxoYAsgS3SZzV4XEd+fMiOHymq0hvrVamBuOWVDzcT
+dEU/vuqTaMaBEnfawht5kfeA+UsZ4bVIJ/juqccVQCRAp/bXplWg+DD6sxV
NwXQ6FZyYuqyGvxn+XW16qsAchPz4v3Eqg5sRPfkl9qCSOwV9XA9jzoY36Qz
DPAXRL1k3Qd9YuownmhpYpsliA4fZZOk11CHYA6eN0L0QohvZvEED1kdLOcr
rv5WEUKtEf25JAt1uC3yNf7eESG07+EbRZsj6jA6ar7m+FIIcSg+CDzqpQ4f
L2inWf8QQo0l14oCA2nnzWbDE3+FULxNwNLlC+pQYfu+W5pHGFn3HNJNvaoO
I4yL1itqwojZzzg8N0EdOrmESg7YCaPqdfnyj3fV4Uv4oWj1k8Lo2k2eHfWP
1SHXr6oyLoL2PRTaMu3LV4e5IOVjh5OEEV3er+tz79XBkOBFn/JYGJXr/fi2
A6mDw5dyWY1CYRTx7fNunjpa/n48XDqlwsjAOcee1KoO2X8sau99FUbrEwkp
uv3qoL6YL3q4QRh9PB/aZj2hDtqvvuQFNgujEGZ3gaML6pCVTt/Y/0MYaaZb
HwncVIe/XbYvcmjnCzKamZcZNcDeu1ziC82/8IPo0G0ODXi0fb9Ts1oYBVgw
EXOFNEAu00BjR5kwUuqYP/mRqAFSGQlU2TfCaPpk94s6ZQ3IG5ylK8gWRnnL
ldO9uhrwfjWrPSVZGJ26XqAyZ6IBfDPP2Ptp9wGJ7+65HXYaUMm6/+5tb2E0
+jTqPfchDcg/+Zb1E1UYZWv5rkq7awDkM+cf1BBGbl8PGOj6aUCG3tqx07zC
SMyRfMn6Pw0oHjlYwLokhHpHSV9cIzVg0nfko2aLELofzLEzMFYDNpi0DRdp
/eVPHYm9naEBQW3BZ5xp/RdQeH9tNVcDWCW33cXVhZBQxfXIo4UacFfuRPEM
oxASm5f7T6aShq9X/6jNE0TStmfcSiZo+ZcPpif30uZ3xPiIxIIGnLVIzCnM
EUCyYdxO0Rsa0PfA95SCnwBSfF5sY8+uCcZ00d4n/vIjjZ3/tEc0NMF5t9Oy
1gIf0nzQqGZJ1oTj4tw+sa/4kLZ6lmIBRROiN7r/PfThQ/pupoRQZ02otxgz
1O/lRcalsXvYIjVhSSG7ov4dD7IP5htVr9OEF56OttcwLuTANtF/96cmVIvK
5Ryc5UT7sz91bfZqAlY1v6/qISdyanZtqp7ThBWn5iefVjnQUcUnn114tWBw
0qlv23Uv8htVSb7ipgVdg+FLkfqsyD98R/wvHxomOJpUpLOgAK6f122DtMCr
StFucoUZnYOQCL7rWqBNocyafmJCFx6WeuflawFL86PDz613oRsHrYxalrXA
SSdo/dZnOiT0rlGIfoc2PC0234VL06FX3AdX1Ni0YaLOc3KBtI23txwrTBbX
hvvoId+nmU2cuC+YsM9SG+IuNJq+KV/FPxaubUXt16bN1x2u0i8ruC1HZE+h
qzacGS4Zm6lbxoOaYlM5zmrD+g8Okur8Il5h94ix+Z42EFqc04pi/uBOBcSR
7Sfa4C9k238Nn8endufhKq+04eBScYPV+hzO2fDufGKFNhw9vTC/Q2gGz1HQ
d8QbaHykfmpO+W9cNw5Xm2vXhnbZxlrts1O4m3XdFPW3Nvi9ZtM+QjeBL76w
r7m0pA2ycXkBm73j+A2WtievtrXhQaSK/cuaMVzIxyWqn0UHEl/fUfVFo/ir
2gFXdh4dqD2RoKleM4KbyHrpGYnpwM4DoQb/eobx9htTvAGyOhCbuX8VbQ3h
/yhLjd8NdeBXhMK9tdODeFJuWP4/ig6I+DLEpQYP4ERGuhilfTrgo1b4IE22
H//oFe159IgOPPpzSqx6pRe3/cpqnOClA28iXi9MDvXgg8Qk0bJAHdhFH6Bf
Od6NB13jXZ++oANMpOmgPYzdOOPo/XaRazqwHqOZfgnrwu+bSry1vaUDoqk9
BjUpnbjyk6eJEek6MHvoW37KdgdeQa/g/zKbpu+XKvuN6A7cyaPQsvelDpy8
0XTNnNiBT37Rkt79QQfI6lfsfXva8QjJkh2GX3TgcWzMbHxeO85xGfr96nXA
g7OPAsnteM7g188P2nRg0na4liuxHdcFm7v1AzpQmql159aTdrzhUXPQxqQO
TD0uzNZrbMfdth0dFBZ1QFgmbvwOewe+eKxH8ciWDoitVEdIenbgN8rdWOKY
dcEnfqXJqbEDFxIbH/vMpQuW7CoVL2078VcX/SqmaHt1nuN6R1p/J27SN58p
JKMLGjp0J6OvduHthiHh1mq68M5y+eWYfjfu+3DjUJiBLsz/8OUh7OzB/21E
aeaZ6wKrPLtrdn8PTiyJm2Fx0YXsz6ic7msf/lGIs07PUxdqmsucspv6cduw
tFyfAF3Ialug3zs5gAfpPT7+7YouyPz3MLmPMIRbZ7Ev2sTrQmCaIMvixyGc
wBQR03hHF3hDfgi7HxzGm1ud3vx8rgs/qY8JivdHcOUzuxn6G3UhR4jt9Jzz
OD6RG5q7IKQHEBfswXl6Gsf3jOn/R9SD53J3/LZ1ZvC04P1NK0p6wH+fXWeW
YRY3N1Fa3QQ9OKmRfAJlzOHZfcNWTN40HBRWtnnqD+7KQ50RfqsHTsNZUc+u
LOIa4SWXM0v14GPV+V38Q4s467Asn2S1HpCnxvUFjZbwT68ZMFKXHpDcvyj5
/13C+Ww+Jalu68FwI/e3BMsVfOYNSfotsz74fmQjNqev4FUCqZ+0uPShXHrA
Y2R8BQ8aDxjWl9YHlSd+27IRq3jzZaKmuY0+jDoyMXDFruHPJpJraw7qQ0Bu
dPWHr2v4JfttV+tj+mDvl6f5YHsNdyr2/9PgrQ/t761DCrTXcSXR7mj7s/qw
SOy/Mui7ju+8ZiHUEqYP13kLBWQeruO9U+9eHbymD3pjh7uC69bxmx8TO5zv
6oNCBrPtqugG7i7+z683Sx+0xJ4eFjTdwHWv+9Idz9OHiD2BqgJeGzjHTEfq
0Ft90E6fvzd9dQP/dcBczrNMH+4fESQlPtrAyz8XlY1X68N3NRF92sqJp0lK
7Pdp1oeiUjdh6e8b+OmYhPHfXfpgWiDRsmdgAzebWw8LGNEHsRA2y9czG/gF
y1T5L9P68G4+idy2uoG/eqzUzb2sD2PmbBJNdJv4yHp17MltfThUftHjwa5N
XOCgm94nZgPYKTYvo8e0idsVrE2wcRmAAB/x0HPa+RXG2+nHhA1AISb57iTN
/8NxRcs3RAO4W5ltuEXjn/74dYVB2QAEV23cJmjxJbmOP3PSMYCFPet1eTR9
Tn6rTi/AAJQ79JYsGzfwuKpkxk0rAzhd9Jen5tMGjkQViqkHDKDGbIFOPnsD
Xwqp8nrsagC51U/MQm9s4PLNR3kXvQzgi8RHvvc+G/gxuZUqSqABGF4Vtp6y
3MBvX0kKvnfeAM6JxHuISW/gtT1yxOnLBvAwfleE89Y6vqlZ+dMozgBmRevs
c1rX8ZO/ltRHMwxg7d2wROL5dfwBJA5rPzOAo6dMYkwp63jzPdmU2EIDkLao
vKzKuY7r2x75o1xpAN+uLAqNZK7hgU8Xsy43GMCcw9zNL+5reM5WgkNrmwH4
374vykpYw9nfoNcXJgyAWwdVcTxYxYd5SQFVewzBxoyVNfHMCs4fiIvy8xuC
sehvdicJ2v1Ue/i7j4QhtE0FvaFrXMaLw+IU92oYgvULk00zqWX85sD8lPNh
Q7gsOZF1/sMirv6ixHsu2xBy1VKNB9P+4JcN97kL6ZLhQ7c/xJ4fwy2PZS7o
mJAh25NOdObGKM4e9fuqoy0ZVoz6NHjSR/CHldG5SW5kMFP2f326ZAj/aP35
N2MsGfKnWcKmSb14pD/TReJtMvjnztVjrt045dZBdpMMMtRw/ufw704n3vpj
VvXiGzJwMBW/ZBNow+cPS4X87SLDhRqpO+XlDfiHsDNMnKNkeB9cy/P38jf8
0sOydOVZMsxEPD7/e381vnvwUIkPvRE8d2n75CCBcBnveLpBeSNg6BFGOr2P
8dmYruR/mkbwaGpVa8UnDn+XR5ISxoyg9Lh8gzljJGYyi8ydDhjBZOf3rpKL
z7Fj/y3dbAg3glmboyc2eXBM+q6JyFS0EZgcPRbG9e4LNv0xsYApyQga3Q6V
n/lWiYVtyjWb5BjB8QRVu+ziGsxYLNTd7ZURtOXCd/Zb3zBmqFq4+NEI6r1a
T4Y61GN3rh7j/dRgBOefM2N5dxox16f5ue3tRuC39klLZHczRqhZ1VkcNIJo
Z9zkaUUzNjlh/o3ztxHUfhqZ8g74gRWy3nZRWaLpXfx8/tjeFixUcfC37bYR
JLI+/hT9tAUzoipd9GXB4CLLcaM+1Z/YrjNh7DHcGDz4xU3n/eYn1pBc8+ip
KAYhrHiujEwrdvstj1qlDAYt78hOpJRWzKXNvWJQDQNK62Su/0IrJrny6sCW
AQba3erfGC3bsAmBzVFhCgYf+Q20GG63Ya/1rUL0HDDoWOuZP/ezDQtxTWM6
5IIBQ/obSx+Wdszw0kh6sCcGrmbSQxua7RhDlqp8SgAGZ53OfDZxasfqvlws
eX0eg9O3Nv4eOt2OJY3U2X6/ggEHeXHX4bB27NAugf6peAwSFniC3C+2Y2Iy
XoHMdzH4j8lyMjWkHRuzLKIjPcag1WtTjvdkO/bSdzvZNB+DJwtlo4y27VhQ
vK2U+3sMzqkJ9SbJtmP6r+69u4RjcN5Y5WHPRhtm1tH4b7YWg5fyXmUL39ow
Kt1Oi+MtGOimv/1sntSGHZbTS2rqwcDpcClao7ZhJ/YHdGFjGKyV3DmsxdiG
BYQ/IRTOYiBobaguUdyKnc/p9JNYxeDeiofuyLFWjBIuGRm1C8Czmk3uwYOf
WP3e0ie6rACh+5LP/VL5iTnkONXOswMQ+1+nfi5rwY58j+N0F6CtH7nHuF5X
/8AG3UnagqIAz3gtb6iY/MBOLiOXH5IA2eScucUPzdgZ8eUnxgoADPdvuiqQ
mrClt0m1ayoAuZ9v5b/88x0Ls1SYeaMJULspNm/7tgGLPuumTTAC6Ltjppgg
VIfdr6yrpd8H4Bwun118rQqr8n40UxkCIHWWeO0ItRCz2tTjiggHaIzQ6Z8U
ycMak1q1NaMAzE+8C+tPeoJ1fWKJyoml8cXf8H7tF4vNsgVzRT8EiHfYIf31
cA4uUGipQ6kAqGth+ah6pALPMBs5slUNMHnSAwTXK3FC18Wo4nqA2DfCyal3
vuJK9G+/kdoA/nOI/dGManGTg6KuTBMAal5IJKO/Ea+Z+BCFTwMcLhFxl1Fs
xm0v7n8a+geA6rhlPTvWjB/KvTH7ax3gTLVfaL59C+6/+ieqdo8xYJkEqZGV
Vlz/7Em+cS5jKFLNMPV92oYzT3XnMwgYAwyRq5ip7fjTnsp2I4IxvCbnbi4l
duDBB3X9XWWMYY9HyM4tWdr/2feXO8IUjeHUB1H6pNJOvL/8juJ7bWMIGJDL
6mjpwl/qsFa0GBjDsT3vzxx07MbDCi8dmgdjqFKMKZ380Y3zZXtfUbAxhntC
wmXbH3vwUaFefisHYzD7abbtKNWLF912KDjpaAxjj5SaAm/04vbRep2PjxvD
7pM79xYY9uFiWwWncU9jKNyxP+ZdQh8+HUJg6PMxBp4k3wSLzj7881xa+nqA
MUQGixe6ivTjMafYlAWCjUGQEKo/7dyPOw1FVmpdMIY0oW3T+aR+nOiyePjA
JWMQo5S99/zSjy+0nJo9c9UYyE4JRIvf/Tiy6bt6K8YYmqUU6O+yD+C3qvYJ
vkwwhpftnu6OCgO4K7n61bcUY+BMJIlFGw/g8sX6Zr/u0vjFUivl9w3ga8qv
u3ZmGMPE/VeRti4DeO0zqUBCtjHsTDhrtOA6gKdJpO+EZ8aQB7eDpJ0HcM97
u+8ffUnrz869Fn+oA7g612WV8DfGUMbG6e1hNIDTxS1VpRcbA4M0kfuGzADe
yODrUlxiDASgFwlkHcAfRvTP/UTGcIMxoVzhVz/ut7Q/+s9XY7i49LS6qawf
1w+oEdpbbwzM+esugbf6ceZfBoWKzcawr16YT4JWn/bjhebWbcZgW9Y8uyra
j+d0Enu8u2n2xrKyXH19+Ll9985EDxgDE/MJ9+i0Phzq9jA+GTUG1XOvTp22
7sP7SpZV+2eNoTeNdGJPdi/+UtOveuOvMQwwDi/QUXrxsIKBI4JrtHxqba4P
jvbgfI9qrx9kMIGJ1rqucW7aPPCTRc4xm0DB4oe3+3K68aKkN28S95jAxbJT
z1RVu3H7K/d76/hN4FTLsECffhce4+WvbqxoArx0we4iErT9p3+w5piaCbBk
aeB2Se048ZDj0QhtE/gzbM6o8K8NR5ZGMR/ABDJa7NaSvrfiawoc/UqOJuC5
K1/uo10LvpwhdFnDxQTUOJ3UtvN+4It7pYl6x03A/dvrb66MP/DZv3q+Zj4m
IL2sXcx4pgkfLjmx7HLRBK4W2TQr8dfhdTYf2GOemoDvjcfWl93L8ZqyL28S
8kxA5nsX4XJeCV6l0nDw9msTsP1DnJFd/oiXcw/dz/xkAseHpD933X2LF/Ww
yrz/bgL3Pcj+dvLZ+H2/Y9jwkgn8mzPqiBJ+it3tOzX8a90EdpRQB1lfvcBS
7YOiZ7ZNIKxC08RF/hV2SyOmfpXFFD4Fv8sMCXiLxT1NCdhiN4XvPSeu18W8
x2L4Mzh38pjCi9XKUq+0D9iVjTeH9oqZAmW6K5ruZgkWebp0nUfKFJ4FDXns
CyzDIgaqM4RkTeHlpqFEPAXHQip7RqTVTeGmcotWjecXzC9u1xlDiins/Vze
qZhQhZ36t5fbxMYU7Lsn1T6afsVOBgoVWziYgsrvw/pGC18xtwMqm/tdTGFY
L9ZnTLsGO/pV79Hh46ZgXJaRNtRQg7nomJkc8zSFn0/mjtxyqcUOCjvH+ASY
gntdnWON6zdsX8IJhcAgU7AeNsjBfnzDqNunG4PPmwL/hwoE5DrM5uz5s2EX
TeFvZjNDdVYdZjlyhSfqiinAvbsTDRt1mLljwofoG6ZwdvvE8EFqPWZSc9cl
Lt4UHpiZph9Pr8cwvex/ScmmcJ3hz4P5rnrMMP9lVlqaKfA9P3t3D3cD1iOR
/8j8gSkczzpR+wkasLC0F5mLj0xh8XgdQci7ARPY/TzjSQ4t/+HxOZ3rDdiH
y7kP978whd+cQa2imQ2Y00rOgx2vTOHtcMZMx6sGbNH/yf3CIlP48DqxMehj
A3Z7+PG94x9MQaGg+yBdSQOmfjgrnb3UFBKgvy2huAH78T3zbhkyBYYd4X+V
8huwM6YZaf5fafWZuXHvb3oDtvfTgzvCdaaw5mPB8zeyAXulfD+1rtEUTEOa
eozdGjC7nPTbF36aQsHLzqJlvQZsWvBuimynKWTFXU+V29OA3Uy8k9zRawqn
WFnS/9Lyl9uVmnR9yBTITcc5ArPqsdqwlEStcVOo4xN2++BWj52cT7o1OmUK
STv/bU8I1WO7TiYm3J4zhWOp+69KNtVhOT0J8SaLpnBa93Vg5MU6zHRffNyf
VVPInHrpSCDVYcPVN29m/aP16x58lP/2DbtsGBtrT28Ge4V/3Qj3/IZJFN2I
2WI0g9u7TnOpfKnFcJnrNwrYzKDZpe+/pOAa7FjGteuuHGbw+NbS+Xc8X7FN
rqvRbLxmcGr3l5F5/S/Yg5jL1z4LmoGmnfxCLdMHTH8r8qqPmBlMlImLTYY/
xDqDLl0RkDKDCyn0ciyb+XjoZMTlGhkzeGTYMLwZVYXzHQ+PClE0g9bN05kG
uS34+9YLkdJqZsA0FPmRpbsXP2h9/lKrlhm8rcpxqbw8iv/FQy5e1TeDHckL
U3Y5v/EUrf8i1DEzOME6yXj87x9cLT8ofMjUDDD+4nzZgmW8WeJcWJKlGYSq
XnV4R9sXA9LOXMDsaHx5gtXuu3agPbsDz8/uM4Oplgqj1mM70cvLp0MznMzg
ro9XdDY3M7Je8QuxPWIGO42V53fK7EaT/r7/bRw3A1nFYqt/dhwoZvhUcJ6n
GbzkXtbM+cyFZA57Bzn7mMERYXqJUhdeVP3d6xxzgBnYqke99FMRQDs/eZw5
GWoGpKP5sYlhYuiJsnsgb4QZfPkkGH94TQKZ5BwPqIoygxWd8Hy3HwQUmejq
T7hpBvn9ajyHfpKQ2K4jfj9u0fI9LvbFYV0WlYY5+0bdpulv21wO11VA615O
p/of0uIrLN6u+auC7vUc9E54bAa7Zj9UlGurId19B04a5prBqsqRhepwdRRi
6OB5/zVND7/lUIGQFvrDZe3mVGEGYorzMg5J+qjTn9DsW2MGcj/MH1pxGiJU
vY5FNpjBMuMtWYkUMkoKyxd/3k6bp4u+gq8pgM63Xk0s7TEDGbav9o70xshN
2XW7edAMJEJeRjR/Nkaqw7sH1qZo9Z3BPJnFTZGA4RiVfd4MdDOxBuI3U0SX
VlZOWDKDFiLHo05/MzQxd0dZZ51Wj0dpTs4s5qjJKiDTZtsM5AsWmYYzzFHx
Ewq7205zKL5ckPhejoIy/4ldCmYxh2Uny5sSLyno+qGVmRh2c+AbzEgNJ1qg
gDdNRzO4zeEZa4+HUooFcmJ7/v2NgDm8NuqrfrlogYy8osjVoubw09Q5+YqN
JSLhhwu6CeZQ/boes0mzRHsE1UTnZMwh7YGw78dWS7R4jiWBQckcolyPjCYz
WqHehqFNfnVzMH0lElesYIWqSJ/9FXXMoY/d/q2ImRV6GZXSC4bmsKgfqtdi
b4VSu31tHY3N4XmqiMom1QpFaJqW+lDMYYezp2y7sRXyvCWseMnGHM5Itiq/
kbVCNhN/H6Q4mMPXtUW3BQYrpG7SwPbM0Rz6reYtOWl6hB7mhJe4mENtjeTy
nXuWiH454nfTcXM4Gzc3zudoiabsHY+MepqD5MZqszaTJWp5oVS/6mMOHajd
MbvQAn1mYDTYE2gOAVIWRXv2W6DYD8VC2hfMge4x2eJ7JAWd4Uy8aX3JHOp+
qrU/2ENBh/28149dpembu9jnkmaOZMUFum8kmAP7x0zBWw/MEMeFeauHKeZw
0GJszylBM7TaUvup8K45xM6z+m2kmqLa6xfudT02Bz+FWuX6GybIe7b7sEKx
OTgbbwlE+AGiWr6txUrMQVmk/82t7xjSzo7TPYjMgeFtkO6TGiPE6GQocLGO
di4ZWdhfa4hmX/PEJDeZA9vfV9PEHwaonWVm5WmrOWjkvdKVG9BHuWUZHY39
5vCp2fHU8h49dIs/xGJkxBy63c9au6noopCz1A8rE+aQJcRMbDikg8ylt9Mk
/prDHIP3tFu5FhqNd3M6x0SBz3c5Oy3G1FHAlCJBdTcFXATrx2Nt1dGKxdrM
DAcFPsYJtDt+VkOsDCnRPkIUKOSov7rvhSpKdTu2T0acAkbKUTMu8qpItFxe
dEyKAhd8T90xO6GCVC9UvnNTokDt3DWmtRwl9Lk9MUpMnQIZswGknA5FZKrp
aturTYGLn7T5OngVUUOyrMB9AxqfqvBr6+MKyGluceQQUECK7eiLd2/l0aDt
l9e85hRw39j3r4ZLHvnmJYT/tKJA0bqGsVaEHLroReK2P0CByldxa23+soix
cqF/92EK6H1TjnT/K4OSJPC8OlcKpAiGPFq5IoOELsWFxLhTQNck2NdYWAbl
9BwyoZykAPfzbtKvEhJS1iOy7/SjwFk6/GqSJwl9SJvv+hJIgWdJ17+O8pAQ
LJY+jQymgH3juT83G6RR3b7Ys+QLFGhaebQoFyeNDr52JG9cpEBziVDtKQdp
1LebwPLpCi3e9IeUWWFpdNJ3tjXkBgWIfVm1HjNENF/zOUszngLqv59bnq4i
ojDpG/4LSRQQ72sKLc4iIoarB3QL71Bg+hbrkV+XiSh+UHxnwH0KrCaGv37h
TUR8RtNNCo8oEEM5uOP5PiLKevDxweQTCviZ//clASMiubVr3s+eU0Ch6Jcz
kxoRFTnt0/AqoMDyLUvjCmkiMnwnuk0oosCtBK09p0WJqJpzqm6wmNbP1K6r
H/iJyCGwOC2zhAIdVfkv9/MQUXfDFQ9XRIGb308NznMR0Ql5e2WhrxQYP7i/
05ybiKZvCK93fKOAt9DnUkZeIgoZ+/X1TiMFXlwfUp+i8dGZvks+8JMCeZ8N
fZ8LE9HNrKijnJ0UELskKLchTkQ8W7ZyTb0UYFzK78wgElHGEcGl+CEKHHsV
lWQnR0SkT2PIepwCD6kHJL8pEVEhX1E8828K9OZTxX/Q8tMPvnS4eo4Cj+M+
/JbRIqLKH9bEa4sUYDnwryxZh4hsVfjnjdcocDBe4WWrLhG1x4+UbP+jgA/D
56KPNOw29fpGGb0FzIp9KGGi2U9aRBwIZ7KAokvUpwkaRHTuqaW43m4LsHbM
tRBQJqJNet7fyxwWUFrAFhZKIqLrbkPF73gtQMfDn/+iCBHtLS+4ck7IAkKb
BOj/7SWidOEwqqq4Beze9530nY6ICBcoQrNSFnClb0fk11kp9LKdazxf1gKC
sPNcqEsKaWsOvPFRsgDPINbV9C9SCCXnX5RRt4BHlGJH5VwpZDUXajWmbQFd
lr+Ou92QQiJqYteZDS2APdWymcVDCs2eq6pQMLaA/WtmA+d0pdCXd77bVIoF
TMstaoWzSqHUZQ7DczYWENn6x3RXJwGd1P1w/o6DBTRUxuouZxGQXtjR9x8d
aXpf1axreRFQ/78XytvHLSDtWdQEdUASFWIOfgQvC6gdocrsuiOJrl5efmbu
awEGcUf0q8wlkewuU8n4YAuoKCj5oZ4ugdYpk0dfX6Dp6cwL/qkngb7HJN5v
uWQBMp6K62UvxdG53b3cgrEWwKnB+MKTTgyZUa84GN6ygOhTVpPrQqKIP0k2
4fhtC1BiG1wPUhBBpdz/MeZmWMA3/ngjK2UhdMtR2PRbtgW0/qvKbJAQRO53
v0ROP7MAK+71rigWAcQozL6mXmQBGhVn5BbKeFGn6zstpw8WYIhJ/FqI5UH5
mS7nLpRaAOP4xKN8W27kQHj2G6+2ANXgVp+5Yg50Xw76bXssoLifZ1TAkhH5
+40LnRm0gL37mOp2OTEgrCD+0O0xC1A5MPMz8yAdGlXtau6as4DztYOxBTaL
uLLuucqTOy1BbJLO4kxVO1ZJyXkepWQJTFlSd0R/sMP0Ceagd5GWUJutxqPn
SYLZTLMy/Jol2NzVLNxtJgNzXVFM9bGWwGH750SppCws2K89GLptCTGiI6xf
2+RgxWCqiv25JZzof/Bpt5ASrIaQ9goVWIKD+Udtx2ElWH/j4SxdZAkEEY/O
3Fxl2JTpmTEotYQkIeIdE05VoOdp4PNptgTxvy2ZOWfUYKc9s3twmyV82is6
uPpFDXbdNMuP7LYEg+Rt0Ssc6sBMV4aljdL4Kv7o9uaoA6vBWuzjSUtgttC1
uzalDmwhWq0vZy3BN77w714lDWCfLjhVuWoJ1ct/im491wAOmamixn+WQP2u
V3FiSAM4PUj/uuitYKr0U+AgnyZwZXhYjDFZwWXpaylrlprA05mZPL/bCs6e
OPnkaagm8HL39GxwWoGYjFRNb7Ym8FH5SUz8VjB6r7M9vU4TBGIPnOESsYKY
qbiTbbOaIFiV+FlU0grkdn/4lrhXC4S263fKkazgPkmLr0ZRC0T0me01Fayg
PGOOGEHRAtH/zO5hqlbgRS5MeuOqBWKFUSPWWlbQNP63yC9QCyR+lyo56VvB
ZjQ5q/CSFkiS1kLdMStosa0Rj7mpBQR3rQp/MytIzE1+sJGiBcSHZ3eft7KC
fJcZCb50LSB1FDhdpVrBPLvdgdF7WiDDNZV164AVbBk4HwqmncvakX7fO2wF
Qg+7q9tua4F8jIfW06NWUO3ImyUYrwWKlZmRhR5WwGjwT33/ZS1Q2ur+VuJt
BQ63nrHfDtICZT1+nhp/K0gQNJ+Z99CizfGBYy1nrcBd+WTGZXstUH+d+Lwv
xApWt+qmj+hpgcZU/cJEuBUU/36bcldCCzSlmcmLUVZwwcVD0G6XFmi7md3Y
jqbZv0mpufNLE3QeRP1gjbMC/YQ/MXE1mqDbXirMl2QFbryinZZPNcHAVqtQ
8T4Nd3iYX3fRBMMbZ9d1HlnR5jjkAFldE4wqCsxMc6yg7mbIEzlmTQBdUpfz
KyuwUzv9i/O1BlCI/PQ3KqyAjvtrkfK0Okx6WDw3qLEC1/p/9YKl6hD/OJQ6
X28Fu2dDQjXj1OGnWOd95zYrEN15RJUqow5ugvc0FCesYGAjVMzJWQ0usAt7
/dhjDXY1p/AXviogYmfDdp3LGpZ5eFdxehVAceFv9Pmt4a1wJuuFB8rAyNL7
74mENRAKm8SwJiVIYchIC9GwhkcyEyfrTBTh5apYrbCzNSiHZXnl+MmBvY59
QPNRawiNHztPEpCDhf8ieaI9rOFyn9TD0GpZ0Ps74DbrZw2J6L9PBbKy0KvG
wfTkjDXoPpT98KRXBqLOQMGh/6zh6xh7x80UGaieyVpDl6zBt72jyWynDPgo
/nj031Vr4B6K/iSJSLDbbwdFPsYa8HzZBYZLJNg/4Z5yO9kaziYeKBrZloaB
YYLCyRxrmPniUK0tIg1XJA/8EHphDZ8Xjon6ThCB5HY1tKnAGqLPja/lFhPB
v2+kUveDNQTpMI6oOxNhrwiP70yJNWy9+mEVrkSEIhczjmxkDSyGbxZxBiKs
duS4stVZAw9XTIN8sRQ84GujR43WsBk2zkFJkQIjx10vgn9aA9WVv8XijBQM
39ayl+u0hjP9X0/LOUhBdIvXUl+vNYg3Pf8xoiYFspxpD1KGrCGbLu1iIK8U
NNhXG1uMW0POunFc1ToBuL6TbhXO0eo1Mn3kRR0BtuZUn9YtWgP5nK+l31sC
THEZlI6u0fB5k6simQRo1zL/ubVF42uuKCq8SYCKw/ZTAjttgP7UPJ/wBQK8
CnfeocFiA5EvXiVQfQhwP/OEgB27Dby2vp5OPkKA619Oq3hz2wD5c/ypbioB
gkZDKZcFbEDN9FcnnxkB3JiuHH0gagPcdmfOj+oTwFY+Pvg9wQb6g67f0dQg
gK5dWlyTjA1w3rwOq4oEIJ7Jyp5UtIH313odJGQJwHE77xODug0oVGr6ZRAJ
sPn+XbOojg28oo9lciMQYKKz/JeOoQ1kh+aEHJYkQOtG7dY+Yxvg+5D5K4SG
kdhPXn+KDYwwnzqdT7N/adyneN3GBsZjrXeO0/jSPX+ZZjnYQNDkubt8tHjR
N/64fHa0gWCu7Z1KND3n8jbOtrrYwOpVsrSgGgGOfd8VO3ucVo+/+7/XaRPA
en5vFrOXDaRn9rWrkQmgzS30geBrA4/YwglGtPwJ2sRGw0AbCHfb8WjAhgDs
zspjTsE2sEyRt2U8SIDxTBPuuEs28CfGr/CJFwHuyvsF/k2xAa9T652n4glw
ze6/63vSbeDe+c+3L6YR4MyZyAyZDBuIYM5QephFAMvi2/VHntnAGkf6dOk7
Amh2ZQz/99IGhrfcnmaXE0Bi89la4hsb2Gp54O9cS4BV41KZqhIbWGyPst3Z
Q4BRz2qjfmQDmOQP3f4RAjTfaHZc/WoDX+NfDh2cJkBpXrc/V70NrHh3/Duy
SIAX30evKjbbQNEAOfPXBgHS5mfvU9psgGfztcI0vRRc4V5749ZtA6MeCQHH
WKQgQJvhW9iADXjf2B2vsVcKXJz3DKaO2kAyX/Iedx4poETwr7yatAGuZ8N9
vQJSoP5Ikv3brA1c18LtM0SkQKxCQXrkrw205fkL3xOXAtYxLcN/qzag1Sfg
WSMpBctMcIB/ywZCShWKxaVo74+8ta8agy3c6+Viu0/DjXYHL9sw24Ja2/Na
ZRouOXMs3WuPLfDFEirbaf7Pb596HcllCz6PK8lxNP7U4nPV9/ht4cW5milz
Wvyoroi+tyK2IKwQNENH0+e/eX3xu6QtpCrSdRZzScFh8WS2CZItcO3688pj
txSYmTwg0Cvawo5i5bHtnVKg6vVUT0TNFp7HHnO7uUkAkZjXDtrattCzdCNo
a4EAea8KKtf0bSEx1egC3yTtfWjL1y7DbMFQNfi1dj8BqjdevIgys4WAN2kS
R1sIcJDwXMTMyhY0joXKxHwlwLBlbiIT1RY42b4EFX+gzUdgDn39flvafwtl
56/nBIgvzZrY50rLR6k02jaGAEIjmUd43W2hU4+w63IIAZ6zZDR2etmCZ2jX
SPEJAlQ53Xt3PNAW9medkJczIMD+i3dlpIJt4TurW5S3NAEGn9y5P37eFqaS
b+/NZyfAxnxy1OkrtmAXAtWW/ZIQw5/0V/UGTS/HwJ5nVZLAZ3Tr5GKcLVwo
36rnypME9bibtuF3bOFu9qu3ouckwVf6qkDsc1ugk9OKPbIiAas2l+NsC2yh
3muZ41K7BFw/F7m1t8gWDt8y2/r2TgKy8fDRtBJbIBK+/ZoLkIBu5+DCnEZb
2F2leGPprTicijondeqnLTy8OlzZ4yUOy7ln0hQ6beFpskazJ584cC36RxQN
2ULUQe3a+CAxsL7lZYkWbSFFZjv3krgofKpwGuwRsgP320FBjZZCkK6gx8Ht
bQfbgv8Eyw15wNHme1K5nx1tH+I2P9THDVx+7py+Z+wgSu5JmtwlbojLi+X6
csEO8toIcc8QF1yS6+YJjLeDOnWtn8bWnOApEy5Y/8YOahV8vY8t7AZJi733
Q4rt4KHu0sJ3s93Qf/KJEKHEDi5l3SCuprPBodx64QtVdlAmVDGEKKxgLS0i
JtNhB8PtKeaTn5hATaqMcHXTDqJVdptrsjHArMm+J8o7qFCirB3oEkUPeR5j
Ut27qMA6tPst7+oOIGbvkVbbSwXBB4dSz8zRgYDkMZkBSSo0p4pTDP79w9pg
4dlNEhWaTuccfMn1D0txuy6rrUCFMIdfnkhpE2PLeiWXoEmFthNDnWvB69iW
2LaCgQUV9nh/Fkm2XMFKjG6/HLehQp5DYxFd/DJ2/piMUooDFTw2XOMs25aw
Pxn2ypPOVNBlMPjufWERe1U28ir1GM3/Vx87tP7FfPtCVeAEFRTxZcqC5l9s
VCRL9a4/FZI+0iv1MC1gjw0135icpcJCZOVL1rA/2DHXWrXZ/6hwVDi8btfC
PNbxYF7dPJIKT+Q9nsaNz2GpJdfezl+lQkX257crq7OYQ4+A5sMYmr7dJ8Jw
vlmsTshY628yFVYPsR3mCp7GmsVek3bepcJttbqm+09+Y+0EUQHeh1QwPbLp
zDc4hfWS4lhIj6lQmdfyw0NuChuSX1vXzqWC1Mm+8iORk9i4sve0RT4VDr6W
8e4emsCm1dv6DhdSQYvnc9d7hwlsQdu0yec9FZ7V6fyrqP+Freq/QWGfafUQ
D3nUuv8XtmUkXhSHU4Hna2dUydg4ttM04cnDKio0dHucolwbx1gtNlILvlGh
uz1c0UR5HNtr43O9vJGm9+t/dRdGxjAe+47Qpp9U+Ov34XTxkzFM6IC5z2An
FfodhG/iAWOYxKG3Ln/6qNArmD/kYjaGkY5I2tKPUGExqzHLljiGKR5PJHNP
UEHWycDzEPsYpn7inzJxhgr1x+gdDenHMF1vPwmtBSoc+8iuWrI9ipH9ujgp
KzQ9pcseKYxjmEmgBcOhTSrsyzLliuQbwyyD3i9677AHzyPlWmSVMYwaKjV+
ntEe/kSqPbnhMIYdDE/uiGWzhwohZ5JA2BjmErlde5/DHlK5vW89yx/D3K6e
/pzPaw/JjIz/q7jK46n6vihSxiShDMmsVKJQKGdTESlvnrxXkSgllAxpkCRE
qRSpRBlCyRQlnItkTGYSUiFlCJn1rd/7/Xk/5+511l5r7XvuqRzp60cuVz9l
FCnag1jYk/5ErQF0/JrNw/dr7OGWyR046z6APG8UXO/RtAdST8a5DUUDyOe2
VuCvdfbACs9LcV/+HQXdFzy83NAe0nVX7jtZ/x2FPvKgqZvw8blZZ+8YDaLr
T7p3bzG3hyCJbauVHg+iexmv19L32MPuDN7s0vAfKOuN12gs1x5e2ClIq0cO
oXz8+XOaoz1cvhek9UF+GBWV72ssdLEH+yN3Ck49GUaVtevyujztYaWGcOiJ
tyOo59MXf9Ur9nD8Vf9rX6kx1PfZ/rhBuD3MGHAuizmMoZ/firmWN+whIV3k
zXDqGJoauoec79kDDjhioGA5jiT/kBc/fW4P4UvXClh4TyAZAWL6VY49hGV1
o1t4Aq0S1husLuDXRwbc0hL/jTQkxWuHSu1hIn/LqzsPfiNT5bKoTW328Fzm
0AgrdxJ91dDs+dFpD76VDW/kxidR2PqQ9Umf7aGkbuP+IxunUIep7btVP+yh
+b2orlviFAq0fLaiecQeFE29c2c6ptBaWynHyAl78L7fGFIlNY182U0Lgn/s
QfiY2t0h72l0Qz9O84AACR4wpsyUkqfRYcO9e98IkaDJeruwTfM0ktj+PPaM
CAlanB5ud1w3g3rQAdwkRgJiu9QVPfIMytm5bGCTJAkYIiJJ2GcGcfZ6bfkp
TYKzxeZV84UzSM9enWO9ggQnxf7sjPw4g4SozYFJciQwHvW+kjc1g9oYwamC
q0hwMcIpymXZLErjGNUfUCRBphJJLU57Fp07MDD5RpkEhW3HM6zMZhHJKUZJ
YQ0Jitn3HJz3zSJNlz2WPmokeP17XnaYO4tmj80dbdYgwc2rCd7tx2ZRnXv6
DX1tfn9XuupUvWdRgpdDfuRaEuR5XFxXHjCLvM9Idv/UJUH5b3HbwsBZZO1f
vGjPRhL41LulCF2eRYrnT+ombyJBqLDC0XtBs2g0cA1ZaDMJku7v9Dh3cRaV
BTf4HjQkQb3srG26/yy6G3opvsiYBM65iebqXrPILWJzhYIJCTSTmCZ9R2aR
edS3IR8zEqCfcZ/GmLNIJjpapmUHCco+DLjbWM+i/pjdJgZAgrdetwd+bZlF
r+5PH7xuSYIL2tWfB1bPoohHqSFDu/h+1J54aLB4Fh16wnq+x5oEfaN3hVp+
zCDDVLGWZBsSWKl6xDTVziDRjMJ5ITsSBL62vrA5YwZ1ZR5XO7SfBAs2+/3n
rs6gy/nvTypSScBBOYltJjOIUXjhji+dBJP8s3pBagbplmwqamGS4LhfVv2T
L9OoqeKm2A0uCa6ffVr05OI0Sqm21B8+QALZ0tSJpXun0dn3vxk2jiQYtZgv
UZOdRmqt9KRFLiQQ6Jamej2aQp59CsjPgwRT1/qs5u5Pol2DNUdavUhw6NL1
E1P0SbRqOCBiszcJXtj4sv9bOonw7+6Pw34k6Ah/d+yY328kteixt2MQCVx1
h35Qt02gJXOYOh5Mgu0W/Xn63ePo72j35ktXSbDMQkyNGjiOfnUqjCdE8P2Q
sEspLh1DDTk33XvvkmCX//txOddRdMvpksvBDBJMm7nsD3z/HYWzHu3+9ZwE
3/s+yBVNDqCg/cWaF7NIYB9lf5euNIBOm859jX9JgrWp4Mlx7UM0Ga+DPZgE
q9Ouuj3714vkyw6xeC0k+PSlM+JxVguSenVh60gbCYJn5J5UyzajJZkP5M9/
JMHvF+PnFM83opl7HS0PekjQtnPkfHt+HerwIpG7BklwKS5fJP45gRpcT+qf
GCKBpFZh1K6bb1AVL2LZnxESaPgP1jb2vkSvbareK/0mwXv31f25CckoTg1s
Hf7jz8dBF+eNQ0/wrZUH1g39I4F4jPrvxtznOHzpOdEAITJsGHia3fowFwfM
FbyLEyHDw57wtoLSIuz9qzVZV5wMv6Z9nutHEfhE/+/gQkkyiLzY/nFJZhnm
Nm7a2bmcDM8KFgmq5r3DtMp96m6yZBBSeH/g2/0qbFd8XHBengz3juVMr/Wq
wTvSUrGCMhlcxb9TvL69x8aPKuLTVMhQfSrsgVLgB6x359t5EzUyHOiuvVsb
3IBVLq3ZztYmQ51sSuLO8UaceVpUvXstGT6tm987fKcJm7uMiziuJwN+wNPQ
MWjG9azOkb6NZNB/I2MyWtaMeXvLm4/qkyF5RqF7x94WPLzj2evhzWQ4rj59
T7amBZ/Tv/PI04jfD+uw/mnUiiU1LlyZ3EqG3y6Vt7kZrfiBnOtxP1MynN/2
u691aRveIEoi/9lOhtDXYscHXNrwm/ltWwMRvz5G83pMfhu2HVFbLWxJhgz5
Tw2Tf9pw52fxRaG7yFD+17FGwrQduzX9HpSwJkPcRSPTYfd2PP+2q/6GDRnS
Im0KU2PbcXhBRd4KOzL8t62ijFzYjhXSM+Ni9pNBea+FrkBzO376ICZQiUwG
hxV1G2q+tuNtNwJdHlHJEK00qF39ox1XXTpmp8EgQ6f3YYNVg+2Y5U3ZnMoi
w/5dR9xautvxoIvZqvUOZNhiGH9fubYd+7I1/2byyBDzylNveVY7XmK3tG/z
ITJwl+3ntUS047vm09X5Tvz98aruMMd2rG3w+YXpETI0lGr2MvTacb5G1Z0S
V/5+LKak0+82bCWfHWDpxu/HYR3RnNWGW0XjHN+dIEPTInjZytfLeSHI2taD
DBGqI4tvy7XhyZHjG+u9+PV/b6hvK27Fss075lp9+O9vH700PtOCkyq0P7P9
yaBxyizF+VoL3vJqWUV3ABloWaEm51e1YMrDL1H9gWRY7Xn5n6tqM/56o8bn
2GUykDyMbyXeb8KngnK5I1fI0GewdXj/8iZ80/XK2qlwMpy9e6y+a7gBq3JO
SvlH8vO+/rvSemoDzrJjTv65QQYx1XSTm8c+4AaDdYTwHTJUSNbvSW2tw1J/
6piyj8jQE2q/+wepEsePvtwRm0iGFrv88cWfK7Del3gN5SS+Pqx9vIOub/G+
d56/NNLIkPJ6/+eEo6U4Ikr26pZcMvyxj3KP9s7HYlrcfEolGU4dPWz8dPYq
clNAthnVZLjpsXdb4KcYVLNUvWdRHT+vN3yfe3Qkoojp74tfNpAhRIcal3nv
OZKqOk1f2UkG+Y83enjUQnSyiPHDo4sMgaV3XMS0itGHLJPzVT1k2OcMwfK/
MIq69y/J/xsZNL8mrVjIK0Myx69NfhomQ9XXlLRTU5Xo1MGToYa/yPDBf/ZN
49Zq1EwlK0eOkyE/vlNYz7sGRW9fuct8mgyjre8aBz7WoSn9+fa7s3y/NH6f
rhOqRwyt7uO/5skgOn0rsVTzA1op9eR2wj8yHMsK9b2U1oD8hEJ05gQp8F8h
NvDe1Ig6po++IQtTQHp9jFRodiOK+6z3TUiMAv21p7RfpTUh5ezCzUdkKNCx
NcNizrUFnUt++K5YlgLPa74vf17XgrrvBXLkV1KgpiiNO7ihFcUHWQVVKlFg
UfO66OLPreivzzp5VRUK5P++c8p8cxs6eFwy3U+VAmk9Ro9kA9uQKq2pcZ0W
BbQOqereX9qOAve8PBKkQ4F1P1ecMNvXjr5sj53rXEeBxcZP26RD25GlQUDk
lg0USHDcpilf0o4eax1Qi9CjwNdXLeutf7WjRYoWL/v0KeBNMEcSlDqQs5Sm
zY4tFJjKSHJT29mB3gqJdN8xooDnWGx95ZEOpDXzw3N0KwWSLwnToi93oJCh
OmFrUwrYfXPaHvqgAw18fhH7aDsF9pdZjiRndSDrllsbZs0pYFHQVjGGO9DT
qjMEyYIC0R2Nxu41HUi0mEVL20mBt5KvSlQbOtCxbLNBQSsKPNnTULe8sQPV
JKuc4+zh67l2zTfr9x1IN05QOteWAtPyoWdq33ag8Ot9TyT2USC7oHYouaAD
DQVVbnW2p4C60aWsL8kdyM43vbaITAHHcj+J8Bsd6NnxyINyNAp8Hrczy/Du
QJKHPH+7Myiw/tP9IxR6B3KnUa++Y1HAUNXrSqRBB6rfY6y0xoECwScVLx8X
60B6OxRe+PIoUNW2R+ZPVzvK1Ti2IHSI38/przZCT9vRNvHX1tedKBDgerxJ
/WQ7Kh4TjVY4QgGjXM3P3pv4frSzepNcKQARe0qkh9tQZfHTDfpuFEBWfnnL
ktqQXdKs35sTFLAqW784gtmGGF6xy5u8KGD9UdTTLbsVfWIO8njeFHiAUh4t
ZrWiQ+bb0gd9KDDvexBFzbcgN4kOy38BFMg6qCH0a0sLupi80ntDCAVaRMhz
rIAmJBzhShSEUmBorog0JtyEwk8VSO68RoHdL1/MXrjWiKIRM5kdRYEl084C
y6Ma0NOPd9tC4iiQEY9+SkzXoYal8iZfMikQss/MUmmiHNEnj1w5kc3X87KV
2fi7MtTZ+bJxJpcCPy/197nElaK+VLqb1GsKCG4+nlB6rgTNWty5b1ZOgRPb
r4leWfwSqfnI/r3TToGdk9I3zOouoxSus61aJwWc/klVCw3tQxt25t191kUB
45TJ/QNvLmJjadqm8i8U2F4h++wi5x62Tb99aGyIAjbLlYPjuc/xh6hvzwJG
KfDh1oV86cwsTPPdMrdknO/Pwe7MNUk5+MCu5purpynw7eNOn7te+fhUj0y5
rQAVeo0NLxVdLcZV77jF6UJUWB57wLV9BcYqL1IKxBdTYcvmpVaRtgSuuWj6
rEaMCv/Z3uGtelOKVY8Gp+hKUsGn9B6p1q0M+5DqE8KlqECtbDNIli3H6mpO
d2xXUAGb/gv1ZLzFfmLPbqTLUeFclcPWraNvcf34VJj4Kiq821Ks9OFiBT5b
FnahRpkKfk5e7I1R73BDerOf7hoqGLuE97RIVWLt26tPh6tRQUM07Puyq5W4
8XC2q602Fdz9F7FWOFdhbbsFx/S1VLhgbDdRVVWFzxnu5oqvp8Jpfc1Dw9rV
uEn5BsNtIxV0Qy9P+V6oxmsXfyTVbKICq0XtvOuHanxhRH2v7mYqzF1r2fZK
oQa3tJ7YHW5IhYdjZl+P8mqwbkk++mlMhdfprin+cTU4MEXA1NaEChFZ59SG
G2pw23Vbw3QzKjzDvofLBWrxBt9oPXFzKqy/Id23SLcWBx3sWesGVChvs/HJ
tavFHdZrNWosqZD0PJ/38Wgt1tM/tVp3NxWqdvttv3ChFgevKloZbk0Fs89X
FjIia3GnwBKZnzZUGILjfe53a7H+D3tJWzsqUNp2RDfE1uKQxntL0vdTYZPY
tm9fomtx1+tvAuJkKv8+1TmRFV6LNz/euHCMSoW/RjHa+8/W4tBw36lqOh+v
8vTy2sO1uOdU6a91LCooBeb6m1rXYkMHiZ9hHCrIki/TszRrcfhOet8PLhVU
7wfnW/ypwb3rH/XYHKTCRsbPGuH6Gmws+6MjzZFfP2H9RZqvT8Sfzc1izlSg
qa60u3CoBn/tO/f+mAsV7K3kDrmo1eBt799VVh+lgmKZ0MVvXdX4+kvpsnXH
+f3qf52Svl2N+x5yisLcqbCz2ntYfFc1jjo5mmVzigojq4d2dN6twgOMbRlp
3lQIX+7EGN5WhbejoGQxXyq4XtpTsKutEg8uk4+rDqCCfsamCdtFlRiyd1y2
ucLPc3TvR2fdCnz33tXzaVf5eVGR+eOQ/hYPX2r0FQunwuZWpvcL7bc4lnLk
RPV1KpTcOqMjKFeOf/2OoNvE8vNoFm12sY7AXR2JjIdxVKgtKT123Zg/H8X5
zPEHVPjQMBoSuR3jpKu97HuJVFAj9xnfri/CHCXDAz/SqRAf8sPNv7IAV1h+
cgkrpsJt5OhqHZ+Oc3TGXLsxFXRK+/5UzKTiBMnFxwzKqHBY9M4VKjkZn23T
O/7xHRWur3P1+rwkAeu7BXmsa6CCXFkMRXpjCL5/c51f9Vcq3PIeU3JXfYhC
fcz9V/dTIaDtigV5KgH5OFDPen2nQta8OF2V8gSRtM6fUximwh7HiX9K46nI
XPzWefdRKnwnPTzuuTkdrf+VcqF0jAqBl0aXVB97hpa8bgg8NsX3e6GtzJ+b
hSYf9l8qnuHn7XmHzqKj2ehL0HzQ8nkqyH9wzXvvnoPqXZcFH/nDn6cPIjuf
u+eiIjvNK6//UmFJC7rl65qH0gxMQpYK0oAQ5oy+5r5Ed+X3X3VcRAOjwMzX
goH5KHjBKfTlYhokCewRfm7yCnn1+oaJidLg6Vnxh3PjhehARUQ4T5wGOQJ3
POeXYmSXnngtW5IGo7Prv1X6liGTG/kRi5fRYGjZy46ss++QtndtJHs5DdyG
HAXci2uRLLv3+vMVNAgMr7wtYtyIBM2nbgjK08DSgrcQxD9fRtXFb9JX0UDo
pBQlktOJukTW3EpTpMEc26nyk04vqhnecvs/ZRrMdyxSOZj8DRU07okmr6FB
mBn31NvM7ygpn3cnWY0GBv4lbdF2w+jW/VN35zRoECSrYulbPoYuBl6N2adN
A9OWLayynN/oxJEHsYlrabAm/W/Zh5lpxLHNvjely8cPSl4sdXceWW96F2ez
kQbZFklC+VF/EWvJHlrDJhosqLwpkEwVBLfu6qXMzTTwjLfOyUPCcC5vb2W3
IQ3Ek94HTq8QgevX3gc6b6UBfdvV3SQtcUhwsjcdMqHB/SWGkYpnlkKOSeNv
r+00YDDXSe4Kkoa27y0uFy1oMPtXRUXhtCwMljBUl+ziv09Y3Xx9Xx7m73R8
jLCiQRmbJ3rk6ypYvavLLm4vDcaWhVgElK0G54Rvm1/SaVBuv21Xrp0m+Pge
GTZj0WDxwR0vV2ItCN3/PbmMQwNvGTZpYZsOPPvzc1XDQRooTdfb8JAu/GZN
/P15jO9/+brcMzv0IWi5YK3qBRo8SJup2n3EGKIHg4JTA2mQ+X71XxeVrZCC
hc31LtOggNkwtaV5K9S4i2abhdIgTQTFd2w0ga5d4W5l4TSYRkGnC5tMYFRJ
UtMmkq9vtqYzz8sUltcsi2HcosGe26rN6nFmoJ54k9QdTYNbUWnHPDS2g6Hf
CnHnGBocXD16uilpO1jZ3yn/eY8GyUsqrv9avQNY2ivPez2ggR9k6npd3wFu
/8Uaz8bTYCJRRlpsegeca1Ecu5DIx9s0+dGTZg7XMx6kLU6iwXbbsCNuaeaQ
EKRyOCKFn/91iVuISXPIYScor0jj9y+45s1uYwRv9dXb7mXw8SwPpLe7I2gT
SbqhmkmDC8lsee59BIM9WjapWTRw9oq+W1aCYP5lqpBeLg2cWIr7hDsQSEau
K8p7SQNr182dGt8RqDhnnDF7RQMU3Ga2cRjBJrONm8oKaSDakHDPiL8OMi8G
9xTTQPDK8v84/HrKD/3HHzANnk8mzJRjBM5EjgOjjAYrZIq2PXqIwCfGUK77
LQ2Y9TMrNE4hCD2ZX3+4ks8/c9V8xA4Ecbu3hf6spsG+qOQBVQEEz5QLLbzq
aGCra/R2baE5lPw2W5ip5+t59lH17+PmkFhX4ERtpMGikNtyHUrmEJy8pSaz
mQZ5FcnvVSt2gA1z/b0jHTT4/q++RHTxDtignypQ2kkDBYEkO4sH20FKTOOo
cjcN+t66i0rrbYeWQsWtzV/4+i95/u25pRkU3L4br9dHg/hn6vbK70wh7oTM
kvAB/rohrjiw2xQOqoi3whANzs+v5sVuM+H/182dypykwYzwr9zV88bwnnOm
U2yGBqruqjGezsaQtWXc4sgcDcKNIy/21BnBmf5BaeW/NHD0ORa75J4hCNh0
ZIaJ0MGv6Fl/q+ZmkJcu+OmsyH+2316ccVQX5gY3UwhlOqzEeYoD+uugqzTz
tdIaOkhdPRbQN68DiadTQps06JAaLbTrd7QWbGi/ow0b6bB1d0ec+IAqWMZ7
OykBHc7Jdc8OGkiDlu9YtY8lHW6Fxt02NpMEUdIJg6ZddOhpnvjorCYK7wWd
BcJs6BBzVOWMupIAsI5Q46cpdGCYlXR4kV8jM/MPiyl0Ogg4phX0iLVjlZV7
3Z8z6bD+X/b2kfEf+FuV5XZnLh2+bvFrYgou4JMbNnc2HqFDZU/cT4034sSZ
GcX5g0fpkOFqYfNAVYo4V7ZIcdSNDrGnQ9k3XkkT11itbHFPOtR5N+pZ/VhB
3NIo8Y89RYfsA0/vRnnJEXGjKfe0z9DhthhKEfslTzwN9vtoeZYOExq7z5tV
KxAv7B3nGs7R4anZhboGLSUiX9FW4eBFOtx5fnJ+n68yUZGlxA4IpsP1gNsn
3s2qEF+7Sjpyr9PB5gFTf2uhGvEjNXXW4iYdpgdDos+ZqRNjp6JWNdymA1PG
OlO6QJ34J+rEGo6lw0bkHqfxUINY0mLrd/Y+HXJP/zmYJKJJSD3aEisaT4dj
YSHNvic0CWWjxR2aT+jwF++U19HSIjQERmdykumgMVktKuWvRejWtq20eEqH
vjc/F3iVWsTmu3jrh3Q6WM+URK+R1iZMHJ8yec/pEMLZW8ilahOw4abv0As6
zPblxqje1Cb2zPjH+OfQoTh050Pfam3CvsypQOQlHQbWmgZ6/NEmGJF72+8U
0KG+0tNkpa4OwWMZzmgU0sHzZofQRYoO4ayxemVOER28et9TX53RIU6MLt4K
mA7kCUpX620d4vTrUUZ9KR32pBteHHqmQ5wNbvfhvqVDaaTMXqlSHSLInrj7
8x0d3ul7naI16BBhimn5ftX8fu1mLFs7dYio/pttS+r4/KdOKaX16hAxWWen
o+vp8E9GxvHHFx0iPuCwvEYjHcTPaHhn9egQKVZ2xtnN/PrT5kkK7TrE8+VG
DNTG92+ds4ZFrQ6R17Xa530HHS5ouc/ufKNDFKUuuevwiQ6a3zzHUaoOUX7q
18sf3XSoLU28Q72hQ9Ts6Gj17aVD80S6fPxpHaJRtHRq8Tf+/DD/WSCaDtHR
nCYX3c+fj6BuL6aBDtEbf8tIfZAOu44YXRCR0CG+HwugZ/2kg8Wh0OeeX7SJ
UUPnM+YjdBB+0Zmcl6dNTP+zu1P3iw4jQ0m8qWBtQviuSuvgJB1UHtWqTCtr
ExKOIlM+M3S4/MZdfaFPi5DZMCa7eJ4Oa36kFIekaxGqZaU0tX90GLty2qNI
T4vYMercwhZjwGz04eajazQJ+TfWj4skGKB5JmCXSZcGMXpV13ONFAOUyW9u
18doEPFqYxL9Mgx4DAdqcyU0iL+0gJ2eygwwXG8fuveHGoHf3MwJ2cSAJ9uX
zCpprCFiQ70DfxgwQDjSr2JTpArhSWfutzNkQDFx/r+WmdWE6i/ln8tNGKDi
2Lj4zAdlIlD9qdpDSwYcpeRmbYtQJCzCSqJy6QzYcqduLIYtTygyEg/Isxhw
dyCj5ki3HDGhHrzBn8OAvq8S5JrDcsTjIpsq84MMyPZbIGf7yRJnwzbcTXRk
wPXxHVM8EVmCwljmLOzMgB8+NrFTsSsIobGWf9VHGRD/ymFkY4UM0VlU8H7D
cQaUvzbq/3VQhsgJi7t/w50BS7++PP75v+WEk8ahrfRTDDjnYJt7fudywnTM
cvErbwaEmvZK7B6SJmSKtZoVfRmgXuujffyuNFHOGDrZG8CARxJWvImRZcQD
jfrtOy8wIGm48/ZX1jLCeyxLPCWQAY2GE8saa6QIu+LbHaKXGaBWXtJftVOK
0Az3STl+hQE59bR1zeVLiT8Mtnf9VQaYcgMmp22XEi0a2y0NwhlwR4ribvJR
kgguFuyZvs6AtpwHjloSkgQ3vC+DfZMBNmUv4j9kShCGzEr/otsMgMjzinFs
CUJSM916zV2+HwkOcYESEkTfWIRcUCwDLrQ3rjr/VpwoKvb41hfHgGuNm95f
DRYnosMp2dYPGVCqemxLzF5x4gTT6GL6IwaMxa2STVAQJ3Zrrtq39DEDtg3d
iLgzKkbkjVSoOScx4IN3XfPSWjFCs+D0dGEKA+alJrB0phgRHahWuzyNAa9O
5b6IjBEjhG0/PDqawYB/+1rvnroqRnivOO+NnzPA/4zykmfnxYhvXbo28lkM
+D5Zs0XrrBhBSelY7Z7DgCJJJFx1Towo8wiZKM/j95P/VOb8FTFis4lhpWIB
A2Lpb1+vjxYjEoW+3vd6zc/HSI9y4VMxQrruhmfVGwaQLUP0l5aLEYF3duxe
U8IA+9iEt6LfxIixA0MKPgQD2F5WETdExYmDa++N1pUxYMFmybrLW8SJ+nGr
co0KBsz8/rH57WFxwvzNZMzZSgaMOrVabr4nTmQGPz7RWM2AzdMefzKaxYnV
+0kWa+sYkCslv3LZCgniT2/Gz9YGBqwvD/u1KEGCOJHOxhuaGSDjZ/XJbkSC
+HRaJPpyKx9f9W3siLkkUbjk8A6DTgZcWa6S/GBUktBtkJYJ7WLA1r0JDK7d
UuLevZKBnh4G7DqwL7ft+VLCb4NiVMQ3vt+PywuYAVKEMaXx6/dhPh7l1dT8
amkiReligfkvBkQv/m/lebY0Ide/IeLOOH8eNV7qb+Hnd9I31GjnNN+P2LSA
bzLLiRz+lS7+HwPSK+oTfsjLEJt+PN9Il2GCFhFUsc5YlojPcRB6JsuEjZpv
7G6dlSWkzom1C61kQvN0hs+HElliVOpIYJYSE4I/Xww4bSVHPDNUbpbQYkLT
Qn+CGkmeUP5bneqkwwRN65MHRqLkiWuVvuder2OC1Xed9qEGecKN06zlqseE
p1434432ryTWBob7lW1lAqi2VwhuX0UUmSUvtjNlgrxiL3m1/yqCNINvtW5n
wlhwiVFC3irC7+TUs0ELJpAuG6RHaCsQkrrSpqd2MeFhgLlpA1eBSOjXrVyw
YsL4viTFTTcViCruoS9Sdkxwy5i2mf+tQHBXBZyM3c+E9TvlZK3UFYmx5jsL
amQmKKQsNzqxX5EIvpEVmkFlgoAi2eKAnyKxam+tnBGDCZXTSjekEhSJZ0sG
HpewmGD+3cDUs0KRgDIB/T0OTNB+I6HuO6hIHDUxtnU4xAQzlq3iHh0l4s8k
qb3PiQlHS1d8+s9SiYjKOu588ggTrA/mWepzlQjNEyHjM65MuFIVodV+Sol4
pZN44ZIbE67Jgt5QiBJh9+2NhIQ7EyLSd304EqvEP2/aYqM9mGATNbffIlWJ
8OaMa6mcYsJmufUlfrlKhKi8ZG6qN1/PQZG/IsVKxINGbTDwZcLd471FQ+VK
hH6kxftCfyZQx4+cUqtSIt7u4XJ2nWPCryvZLqnVSgRL2Pf7+wt8/P+uPDnH
Xx/GN72Zl5jwtzpCKPGtEhEY8Ezwy2UmlPtdV5QrUSJkt1ZedwthwsTeWLvO
PCUibeKL0mQoE74+isqbeKpEmGf+eXr+GhPqi4Y2OcYpEU3HVhqLXGfC4i8G
9HVhSoSL1ubyqCgmGJErvOzPKBHzvXYkxdtMqJFdGt5xQIm4/sC1+8kdJlx/
+HdfzW4lQp0V5LYxlgkVkQzV9br8/7UVD2fy45hwYv3bxUKSSoTth4JgeMgE
paSC54whRaInvGl5zSMm7NXfesigSpE4ZTUST33MhBcaZ8TvP1Yk4orVX7uk
MiF3L+29BUmR0PPfYTWWxgS1wp9xtzUUiTJDVrP/MyaQp7XzHk4qED8zIkci
spmwq9b5j1iUAnHB9elZ+Twm3N4VOx3MUSBkNMpFEvKZsOKjeM0PdQXCNG5W
LfcNn++EzLnU56uI8NDDjI8VTLCsp+wIebaSUNl14ZtTFROY6ZVSva4riZx/
sZ7DNUwYzBYwiFNbSXT61If/+8AE9FfFz5M/T7pHTLBWJxNWS3+Y9ePJETfU
989f7mKCh9zeQaEVcsTkZyejrz38/s/G3YyplCVKOBEZ8d+YcOGyzWZFPf75
Sfocs3KECQH3mkNWTsgQ/mZXPMUEWBDnsT3xhpM00TN7L8NViAWp2csMLy2T
JizzMwcqhFlwial+9K3fMkLSoIMbJMYCDwn735QNUkSC9nqbBRkW+MPy4Yi7
EkTV8ka1ES0W9Jg/fjkduYTY+KGfu3ctC7TmX1UKTywmbkXMx6TpsqDp1Gx0
EHMxwRXRlHLZxAKq29yAuo4w8euPz3zPNhZkILUz+p8ECVrhNaMdZvz929yq
5+wEiVe+CZ73d7AgmTDd30AIEEET1QNMSxZ8XPXvRBPvH5YfVG5u2MsCkxzi
97J9Czgg2UBq034W2Afc8JylzeNeJyubSBILehdtqxtxnMPp3R7Yhs6C1o5E
G8drM9i8uSyj7AALbH/tCWtRmcRPotoHVB1Z0H/ud8kd8m8sun9Y7eJhFtAf
WvqJhE/gpiq5WLOjLBgTPKNpLDmOj5QcDc7zYsGg7pZEhcxhPOr+03e3Nws2
PN+1jc0cwn6rTxxv82GBQ1hPV4HUTxx+zoMyG8DnN3X6v4XU71h2w/jusAss
IKsJF4+EDeCHn06ZKF5igd1/DxRXnu3HWaY+qttDWBDQkCAnfOUbNv05s+J9
KAu2nhFZ+frRV1x+z1/kwDUWFH8/fze06gu2s1mYH41kwfnjVTqH//Xittlz
oxejWLA2VXWr8a5efOjp3y/St1kg1h8t27HxM/7BDGxNvMOCm56p+e2j3fiU
iFD15lgWjM4VZmyp7cJ/8i8XlcexoIV/I8ss+4RDXBZn0R6yoIRuc1G4tRMv
k7/6pP8RCxSEwluHBTtxbIVojM9jFgS+/u/lKpuPWP1MeLhIMgsEukJGt6R3
4AxNyQuxqSy4tfK0QL9mBzZsifRal86CeTWLDe9fteOSy8uOFD5jQZ7C5czQ
I+3YestN1t4X/PwwDWszddtxw1cZu65sFpy7RIg0ibRjzq1o5J7HgqzZacvA
P234m4X8lr/5LNBu+vDFUrQdnxiP0b7xmgW04PS5eH79dIKComoRC1yJbyfl
Drfji6T7S7NL+Hkzktuokd2ORQVWC1qWssB58VZkIduBb72In2wq5/u3KVai
/1oHVj6oOnj4HQt2vGv3CFz5ESdLPf40WcWCu0lyM5fyP2K9Eo0PV2pZoFzq
L0A/2olfuSeXydez4MSHvCHHDZ+wxWqd/NQGFjxLVbeVEurCNXVP07Y1s+DB
tYPCxYNduHv9syhOBwusJA+uTBzowS6fNgYPdbIg3jzradSfz3gs/IXvuW7+
/AUzcgKierHQz5wD8V9ZEBT7S2d39Re89unrDV+HWfBbeWOXxOU+nMM0Uz39
iz8fEnETN8z7sZlI8QrhCRbMeFxcn/C3H+93Iea1Zligv80yacm179hbs7Lq
mCAbfpba+TBrf2Kc0OI8LseG3dFRi9d/GMO9dmoHfVaxYW5zt7CA2TgWmHNn
Lyiy4WrH6tIzKePYkiyyf7EqG6RWyD/MDJjA7wRNtyrosoFu20ZyVprE35+H
GMRv4OM/nNpjGziJRTnN6zU2sSGo56pBwbdJbJNzQnWjIRvGd/ovSUmewnVO
j8QszNlg9nPdx2CZGTwiNbzoHbCht5t70/boDJZ6s+2v7U42RG39nfnszQwm
rWiaoO1hg+tuheNfOLPYC6uMfLRlw4eS8pnLKbP41vHj3w/sY8Nt39EvTr9m
cXO5cNdRChvij/VvDvSbw5Me5LYRGhsatqXR7r6aw7LK8Q2nmGwIp+mZxk7N
YaOqnzUzbDboeHJ3eW+axwzvrRXnuGwo05BpVnCZx76qwVjwIBuSP0Xv8783
j2PrGl6HOLLh6/VezeDqedyp6ZYZ5cIG23Unu1zWLOCFhvyncsfYUF7L+qC9
ewErn1/0JO44G75Ue9o6uS7g7etID9ecZMMd9sTYspAFzGt9EJPkyYZfJGM/
ncQFfOHSj5vrTrMh91zDw8RXCzh+o3FE5hk2HHYmdPzqFjD+GBSyxY8Nqozw
n8ldC7j3yofAV2fZYIKWFmv/WMCCm5UDdpxnwypZatDM+AJW7zl6puwiX5+a
eBX5mQW8M/ylh3UQG6zlZM5dml3AzsZCbnXBbAhetiLEZHoBX/m635l8lQ3L
J69poLEFnHL9/oG2MDakt9bviB5YwO9MB1kOEWxIyRLIMvu4gL8PGFJ7r7Oh
DxrIJlULWPT2pX1HbvL1inH4eTN3Aa9F9dY/b7PhtPJa/b33F7DNkKKlx102
JD0wrTp+cQG7xbhun4xlw/MduaYLBxfwtZ15xv732TCiRcwK7ljAz34JGPx9
yMcvmdgXJr+AR63jtESfsEE+c3TbTjyPl00OrIlMZsN6Fft7EdfnsX7CFkWZ
p2zIC/64IZgzj71m66SUn/PzWaismTc4h28lKYglvmBD2t74e2IZcziH5LJI
O4cNk5LLLa3d+Hl5+m9mUwE//2aPRIo/z+IBhlVC2Gs2COYs6Va9P4s7hCP3
fHvDBkbflkIp2ix+c0jx3l2CDWsnracqSmZw0Coj0/+q+XmYFHzp6j+Nvd8F
fGXU8fM2dKC2W30au3iXhWfV8+epnLHqcM0Utmmw/3S4mQ2vL3xO7FsxhaVD
3c7VdLEhK7+ivvnWbyxknK2p+ZkNAeGX8hr1fuPJbzN157+wQakzY8G3egK3
oyurDQbYkPny6DqphXEcP/OoJOYXG0j1UZT75DG8wbVV4IgQB1qfsQTDi35g
FTnltBJhDtCsvFFF1yCWLncirxLhgIS74e6vf77j3ypjibUSHFg4f2D34R0D
uLBNfOdmOQ6sUE8M+1T+Fe+xgiv/dDgg8HJz2D7pDmw6GbKRrcsB96u3gvd7
teENj9+35mzgwJE1WptwWwte9pej7WLAgX1eBycmXjTitpdnKutMOWDcM6Xe
uqsSVx0u8tDewQEpnw/aXg5v8evli1YFIg7oH675mHGhFD9wjzq6ZRcHrr9N
k4SPBfiwVoZY3D4OLA/63rlqxVV8tuKAmzaJAwHxlMyOpsso6ohMbQ6FAyYG
u2+vrIlHRcn+EbVMPn7HyVuaOdmoaffGESaHw78Pm9MN/fLRYH/vvj4uH4/7
rGRQ/g2S1d6z7D9HDozs8JmZHilFuu8WPMKc+Xya+s7HCrxF4PKiQc6VA+8L
rQsv/K1A7inyt/ROcIDt7Tdg/aYaBVvVTBSe5IDr29KuD/61KG7gPNXaiwP3
lt9MHlB/j95p98se8uHAKVeXyxqKDajrXeyZYT8OhFwwKNevb0ATLnZtfgEc
cDR+QWL4NiJREYGtiy9wwMtJWe2GXBNak5obczOQAwddJ391PG1Cxtaus6sv
c+A746OEoUEzsvuuyE6/woGdjxIDnmQ2I6er9a+NQzkQMZrSuEGtBfnpBCmW
h/P71/Lf3RHagq5XGgXYR3Lg2qUNt7L6W1CS649Pn25wQOb+EsHyra2oUOTh
9qO3OJD9L5a+5mIrakwlPZyM5sAyw6rK9jetaNBa+G9gDAcM9lj9FRhtRX+/
FxxYGseBS/UZs9lybUg29Di+94AD5erR8sJb2pDu2jWq2o/4em9In5SxakNQ
1RSYk8hf3/X+3J/9bYhxNOSLeRIHwvWPFfbua0MnRE0ta1M4sPv04l9fLNvQ
5acjj5lpHEjf2+mkqdeG4vYkLurL4MD2j3N+9cvaUNYgzdkzkwMJSj8CRQdb
0btQ0Yo/Wfx81q949ye/FXWtLdIKy+XzrXZ2aT/XiiaqPELk8jng7F/GfmfS
ikSPaXxPfMXPr5MjaW6kBamItVvrveHw74+eWYn3WpBRWvjTwmIOiFAOnJ/Y
3oLsbMzFrAkO7Fnivle1g6/3j/FjzWUcsOm6tsnxeDO6vo69friSnw+72w8X
zjahpGrJCL8aDkiWft9cNdOICo8Rw8LvOfCEZNcS6d6IvqfpZK5u4vc/9v7a
zK4GBLrT+vZdHNC7adtjS6tFjJq0m596OCBsOftYc6ganXDjTbh+4cAVLUrp
qG8Vik1/mxs4wIFF9pHPPc5UoHHd28Y5Yxx4nsB8YaBSgjrqYPeK3xzoKl3R
VCv4BhEnR6neU/x5fNO3x/pTAbqeY+NlPM+v/yQ5efx0NtI1FXhWuMgBUtPM
twXvuomcbNzVyuUdQKB86cDU2fz/f8/1NRUcYNsV+nBCw2usH1llfkXJAdwD
jCLz1Ivx3wYNrrWqA4iAt+GZrlJ8n9V5t3adAyzCz1MW21XhFldryZbtDmCy
YZwpo9qE34hNKRohB3i2JsxZvrEJP854vO6uhQPIGr2meVxoxp6//rNiWTmA
0Un4cOt9C2bezKC/3sPfP08PK3i0YvMtbGfFvQ6QkkH1PSnZhpf65l3qsneA
1o+fL4uYtuPJVU5ROygO4LZojbZMTTvuKlz2KJ7mAGWIstmX3oHT/7oVHWI7
QEZci84Q7yO+mbCqttTBAYq3FZTUdH7EfpbvPqofcADsGfAnmdKJrULUZvqc
HMDJu4Dzb/MnvHHth8VWR/jrrxJesu5/wrI152RTXR1AaP15a+e/n/DCcV0N
UTcHCDx9T2oFtwt/XdphcOyEA9zew2Uz87pw9YsrUHPSAb6OvPymKdKNs8hb
7Nd78ftrjnrlSevGsb97eRGnHaBbMEPf4EE3vnjn+omRMw5Q7mW44kBPN3bZ
uj1gv58DDPranh5T7MH7P/4Ie3HWAaRFHmV+Jfdgo4CYWOnzDhB7o+2a/uUe
rLx6d6rXRQd4kX9JoT2zBy/CEy+bLvH1fUd71tLSg38eSni7JdgBXpVtmls7
1YMbhfY3R4c4gPhnyemWZZ/xq6SFL1OhDrBlyfX2Ts3P2Hin94ztNQf4fJES
83fLZ/zyy7BkQqQDfDRQOVa04zM2DDyiPnXDAd4rlH5RsPyMc1R6ttrecoBC
Hfma1RafsX4xY9+jaAfgpZwRaDD9jF84fHCavMv3p1/Dy2TTZ6w3b+1nc88B
ElQaNzmrfMbPYonI+PsOYLNa3cFB9DPW3Wry5PdDBzjKCVq+fqQHp7Vmv9qT
4ABfZNXCeut68Fpv3fqHjx1AkWifDkvtwSkyT75NJPHfF5UNND7fgzWzleas
Ux3gWvAIaXpfD35iHy31MI2vp8zAlU6FHqw+Kqk5keEAf/7TVprq7cYJEVdM
rDMdYL+TiyD7STdWWf93/4Msfr7uzIgpOnbjh9U+zuM5fH3mYpvtFLtx3JKj
N+4XOMB/h874HrjYhVcl9yaNvXbg/6+GJbit78IxO9mFu4scwMHS0Xhn8ycc
HWjb/4twgEuHN2QUyX/CMmvK53eVO4CaWvfjqJxOfLPYTDquwgGCyFT3GNtO
fH1+g9muGgfYd6v5ZrrHRxzmvexmbLMDbEKbw4Rv8u9DK0JTRlodAG0y1ru6
vB2HZAsUWXY4gPGcr7LWjTYcPDo+MNzlAHKC8sSmoFZ84WjLdosBB1g2RBX4
z7YZn+LeG/wxy8efEom3F32PObs0wEyFC3pmuXm1U9n4vxZRqXJVLsQZH4yV
uJ+JE46MfrLV4MIlR2sHR3oaHgh57ctZy4XI1IDtoT0P8alq+xf+m7kgx85q
MUoORnIco/OCRlyImXwXhUWi0aufinvDtnJB4SAhuOTuQ/RXYmAgdjsXclbe
frFJ6SkK339O5ZUVF2xdLpZIteahjZ8dh5ENF6pNVnQKDuajBg/rwsq9XCgN
bRduHHmF5G/KMNpJXOhZunLibkMReq02q3GQygUt2zOTX56VIG5O9/gAnQvv
JE8/YO0g0OPmp5HTHC4sLI0t+jhZinY7X3e4wOPC0+9JWnoVZWhw8vS6JYe4
MLJ2c1VhZDnSk0cVcke48LJoE1VcpAI1pmjefujK18di4Pm9ggrkvVXcUcuN
C6fk7KfmDr5DhazWP4YeXKizWu3dE1OJeD8Ka4q8uHDlzOBj0KlCAmcTYnd5
c+HEzPj7TZlV6Il4iEudDxe6+mqdEzZUI6v7xw1p/lxg76zWC3tcjX6sJwt1
BXCBe6xt4uuyGhRRZNxw+AJ//8CRsqfeNWjTPuX4oUAuADujqb2hBjV1C544
fZkLLLqmo4dmLTpz8rvJwhW+vtm6U54etWjVvzqRy6FckH1NW9ybXYve3Mhp
Fb/G5x+52qhsqBYdUI19ciuSC/Gf6dvWrK5DgtnnvRSjuOBeGp0pYFWHkiwO
o8e3uHDR8NqhUy51yLppz1LdO1x46x88fOlCHfrppPcpO4YLB5tov82v16HI
3yvSTOK48PGlnOibO3VIP3jOp/QBF1Ys+hcoxn9ulv28y+YRF0QJh2wUUYd8
kt/KNCby/d93Mt47oA4pGKf3spK40N94SanUqQ4VvbuR2ZvC10995VtkWYcO
Ms+cO5rGBeElr99JKtYhoUGO7VgGF1x2X11p9bMWJfvBKr9MLiimr9GXyK1F
e8S0B/5lcaHieJvSee9aNHRPIu9qLhfWvDrkX6JXi67rjl9als+F4zdpu35/
qUEGb9rsY15xYf1Onf/geg1q2Vu0es0bLhCWjmfqt9QgJferr/UIfr/ubRds
j1ej6/9cjK6VceFmg+uc7OJqJHTLKvv7Wy78PLeYdv1eFfqZvzgtoZoLQu6B
yqq5lahQIDhWppkLk5+bHYefVSC924dlPVq5kLY/RZymWoEea+2Mqm3ngsYm
cH584y0KtxUKDe7iwlp6zo84p3LEiQ70ne7n6zOi8S+9h0D12od+Uwa58F8P
eeK3EYEsXyOPFz+5sH3PSOiCLEa6PX9djv7iQrjk9oalrCI0p3Oe0TnLhX+u
Lz3zM/JR7Bt/oxIJHhgdCpbqf5GMJPezsxWleLCip+a/gOzHKLB320ZfaR4o
azftuOzyCB1dPKupL8eD9wn7JMW9b6Ot9j6yj1V4kCR9TSiy2hOnf6FH/VXl
QdkOmoHAsmCs4m0k6aDBgzxB0/3tT27gJfcmF8mu5cFa7Ra1Lov7uO3rqd9X
DHiwb8F9Aec/xbZnKB5ft/BghOtZuc4lA5eIbB4yN+bBhOzcqiyJTJyyYfzr
jCkPJHrz+y/fz8Y+Ph5Nx3bxoJsh++dZYD7+KWq//50VD4ZC7yDh9AJ84L5e
jboNDx6EcUiRda+wFTFS+mkfD8THXWTd/hRiOfET2fuYPHguxnEyEMI4aef5
s2NsHgxeej56ZTGBN5+/vvM2lwcdexMW2oIJvH8sq7XDkQfX/vXBu9OluGtd
WXyAMw9Kfiw5aPKtFLsdbnZVceWBYFH6NtN9ZTikbWru8AkeWK4oPpQoXY5l
pUXKl3jwQOrhsu8/jpXjxzarItK8eDDKsS0OLi7H+pfX0e28+fg1qetdJd5i
XGSq8suHB3JH92iEUt/i/dN7v9/050HRykO2vXfe4q5NvCzDczxIjg/qO9b0
FrsdO+nffoEHh8jUj6piFXj28UXLs5d4IF3elydkWoFDuqIkVgfzQPvx/odS
RyqwrPzjFhzCA2NTf9ru8Ar82D73oVMYD1qfD5ilpVVg/bC3LosjePBSXdLE
vLwCl5S1bnp6nQe1brdKxdorsN2fgVnbmzwQ+or7ZPorcKfRbOnIbR54Kaus
cRqpwMc8xK5F3eXBjo+B7oJjfD5PFWlb7vFgz/lKyp9hPp+v61e33eeBkoR6
9sE+Ph/lHQN+8TxYv3WozaSNz4e+/4VSIg/GyCHn48r4fG4c9Ct5wn/uXp55
i8+vpMrTwjGFn1/Ny5WG1/h8hILEhdN4cPH86YBoVz4fs9vNKRk8KC+Xzn5n
XoGPnkl6YJPJA6ZpU+QX6Qo8nfnyyHAWD7YkTZ360/0WBw++07uRy9dXULRj
U8pbLKPeMWOQz4OdMQWsO8fe4gSHH0TLKx4stX6XZb32Lda7Mx/m+4YHPw7s
DXX6Wo73iq5WLiZ4EN78sG63TTnutNDrP1jOr09dett2ugwfDUCZQu948OaC
mbv+ozL+ee0Ie2p5kGkUIqzeX4qLWlKcm1t5sDEp5S59N4FtpV5t9Ongwa7T
7c566Rh3WFdPr/rEx2so8E0sL8GThUOhB3p5UFf2xT64vwhvTNR//uMnD8Ru
frdKGXmFizotfCJG+PMh/grE+wuwrSwVbRrjgX6g3ERNRz52uXqm0XuKB4k7
Tmcl5ufhSSIkbuUsPx+FpHxmYi4Omo85XDjPgw0e3wzTw3KwtGHaBt5//HxI
mZj/8MjG8e6FU//+8aBz47dmZ1oW/h9rgh1i
       "]]}}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, True},
   AxesLabel->{None, None},
   AxesOrigin->{120., 0.},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->45,
   ImageSize->Large,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotLabel->FormBox[
     RowBox[{"{", 
       RowBox[{
        "None", ",", "None", ",", "None", ",", "\"Head angle \[Theta]\""}], 
       "}"}], TraditionalForm],
   PlotRange->{{1, 120}, {-60, 60}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    FractionBox["180", "\[Pi]"], 
    RowBox[{
     RowBox[{"sol", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", "t", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "120"}], "}"}], ",", 
   RowBox[{"ImagePadding", "\[Rule]", "45"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "None", ",", "None", ",", "None", ",", "\"\<Head angle \[Theta]\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "Automatic"}], "}"}], ",", "All"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "C2"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"120", ",", "0"}], "}"}]}], ",", 
   RowBox[{"Axes", "->", 
    RowBox[{"{", 
     RowBox[{"False", ",", "True"}], "}"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
mZj/8MjG8e6FU//+8aBz47dmZ1oW/h9rgh1i
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{120., 0.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, 
     FormBox["\"Head angle \[Theta]\"", TraditionalForm]}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->45,
  ImageSize->Large,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1, 120.}, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"fgraph", ",", "ggraph"}], "}"}], "=", 
   RowBox[{"MapIndexed", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"#", "[", "x", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "x1", ",", "x2"}], "}"}], ",", 
        RowBox[{"Axes", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{
          RowBox[{"plotRanges", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "#2", "]"}], "]"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"colors", "[", 
          RowBox[{"[", "#2", "]"}], "]"}]}]}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"f", ",", "g"}], "}"}]}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"plotRanges\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,18,6,30935077404984126240,"Local"},
  "MessageTemplate"]], "Message", "MSG"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"colors\\\", \\\"\
\[LeftDoubleBracket]\\\", RowBox[{\\\"{\\\", \\\"1\\\", \\\"}\\\"}], \\\"\
\[RightDoubleBracket]\\\"}]\\) is longer than depth of object.\"",2,18,7,
   30935077404984126240,"Local"},
  "MessageTemplate"]], "Message", "MSG"],

Cell[BoxData[
 TemplateBox[{
  "Plot","plln",
   "\"Limiting value \\!\\(\\*RowBox[{\\\"x1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"x\\\", \\\",\\\", \\\"x1\\\", \\\",\\\
\", \\\"x2\\\"}], \\\"}\\\"}]\\) is not a machine-sized real number.\"",2,18,
   8,30935077404984126240,"Local"},
  "MessageTemplate"]], "Message", "MSG"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"plotRanges\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,18,9,30935077404984126240,"Local"},
  "MessageTemplate"]], "Message", "MSG"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partd\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,18,10,30935077404984126240,"Local"},
  "MessageTemplate"]], "Message", "MSG"],

Cell[BoxData[
 TemplateBox[{
  "Plot","plln",
   "\"Limiting value \\!\\(\\*RowBox[{\\\"x1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"x\\\", \\\",\\\", \\\"x1\\\", \\\",\\\
\", \\\"x2\\\"}], \\\"}\\\"}]\\) is not a machine-sized real number.\"",2,18,
   11,30935077404984126240,"Local"},
  "MessageTemplate"]], "Message", "MSG"],

Cell[BoxData[
 TemplateBox[{
  "Plot","plln",
   "\"Limiting value \\!\\(\\*RowBox[{\\\"x1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"x\\\", \\\",\\\", \\\"x1\\\", \\\",\\\
\", \\\"x2\\\"}], \\\"}\\\"}]\\) is not a machine-sized real number.\"",2,18,
   12,30935077404984126240,"Local"},
  "MessageTemplate"]], "Message", "MSG"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Plot\\\", \\\"::\\\", \
\\\"plln\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,18,13,30935077404984126240,"Local"},
  "MessageTemplate"]], "Message", "MSG"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindDivisions", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["\[Pi]", "2"]}], ",", 
     FractionBox["\[Pi]", "2"], ",", "Pi"}], "}"}], ",", "5"}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "\[Pi]"}], ",", "0", ",", "\[Pi]"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["\[Pi]", "3"]}], ",", 
   FractionBox["\[Pi]", "3"], ",", 
   FractionBox["\[Pi]", "6"]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["\[Pi]", "3"]}], ",", 
   RowBox[{"-", 
    FractionBox["\[Pi]", "6"]}], ",", "0", ",", 
   FractionBox["\[Pi]", "6"], ",", 
   FractionBox["\[Pi]", "3"]}], "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "TwoAxisPlot", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TwoAxisPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"f_", ",", "g_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "x1_", ",", "x2_"}], "}"}], ",", "colorList_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "fgraph", ",", "ggraph", ",", "frange", ",", "grange", ",", "fticks", 
      ",", "gticks"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"fgraph", "=", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"f", "[", "x", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "x1", ",", "x2"}], "}"}], ",", 
        RowBox[{"Axes", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "120"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["\[Pi]", "3"]}], ",", 
             FractionBox["\[Pi]", "3"]}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"colors", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], ";", 
     RowBox[{"ggraph", "=", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"g", "[", "x", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "x1", ",", "x2"}], "}"}], ",", 
        RowBox[{"Axes", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "120"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "6"}], ",", "6"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"colors", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"frange", ",", "grange"}], "}"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"PlotRange", "/.", 
           RowBox[{"AbsoluteOptions", "[", 
            RowBox[{"#", ",", "PlotRange"}], "]"}]}], ")"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"fgraph", ",", "ggraph"}], "}"}]}]}], ";", 
     RowBox[{"fticks", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["\[Pi]", "3"]}], ",", 
        RowBox[{"-", 
         FractionBox["\[Pi]", "6"]}], ",", "0", ",", 
        FractionBox["\[Pi]", "6"], ",", 
        FractionBox["\[Pi]", "3"]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"gticks", "=", 
      RowBox[{"Quiet", "@", 
       RowBox[{"Transpose", "@", 
        RowBox[{"{", 
         RowBox[{"fticks", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"ToString", "[", 
             RowBox[{
              RowBox[{"NumberForm", "[", 
               RowBox[{"#", ",", "2"}], "]"}], ",", "StandardForm"}], "]"}], 
            "&"}], "/@", 
           RowBox[{"Rescale", "[", 
            RowBox[{"fticks", ",", "frange", ",", "grange"}], "]"}]}]}], 
         "}"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{"fgraph", ",", 
       RowBox[{"ggraph", "/.", 
        RowBox[{
         RowBox[{"Graphics", "[", 
          RowBox[{"graph_", ",", "s___"}], "]"}], "\[RuleDelayed]", 
         RowBox[{"Graphics", "[", 
          RowBox[{
           RowBox[{"GeometricTransformation", "[", 
            RowBox[{"graph", ",", 
             RowBox[{"RescalingTransform", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}], ",", "grange"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}], ",", "frange"}], "}"}]}], 
              "]"}]}], "]"}], ",", "s"}], "]"}]}]}], ",", 
       RowBox[{"Axes", "\[Rule]", "False"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"colors", ",", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"fticks", ",", "gticks"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Time (s)\>\"", ",", "\"\<Angle of head \[Theta] (rad)\>\"", 
          ",", "\"\<Plot of \[Theta] and x vs time\>\"", ",", 
          "\"\<Position of cylinder x (m)\>\""}], "}"}]}]}], "]"}]}]}], 
   "]"}]}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"C1", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0.368", ",", "0.507", ",", "0.710"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"C2", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0.881", ",", "0.611", ",", "0.142"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"colors", "=", 
  RowBox[{"{", 
   RowBox[{"C1", ",", "C2"}], "}"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.368, 0.507, 0.71], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.24533333333333335`, 0.338, 0.47333333333333333`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.368, 0.507, 0.71]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.368, 0.507, 0.71]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.368, 0.507, 0.71],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.881, 0.611, 0.142], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.5873333333333334, 0.4073333333333333, 0.09466666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.881, 0.611, 0.142]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.881, 0.611, 0.142]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.881, 0.611, 0.142],
    Editable->False,
    Selectable->False]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TwoAxisPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"sol", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"sol", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "120"}], "}"}], ",", "colors"}], 
  "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0.368, 0.507, 0.71], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJwUV3c8198XLlJUSrJCQkYysjf3WB97VMj6GmWTnS07RHZWViVJZJWRce29
sveuJC0RFfr5/fV+ndc55znPee65930vy03na1ZEhw4dqjp26ND/v7/mulrZ
oltlaei0/9wSflE3kk3nIzfxBBX6mgY50byoA+qBm3QT5ejTCdkS+tGCOk+d
wnHiiWakos7022T9ed2Zr7SJv8eHkNEdpkn53Ly6+Tot583xJfRBKFtlUiix
LoOa1tKdZAVdZ5gcJrr9oE7Xad5gQ/A9Cm6z979Ac6+u+4KL/PcHH1HRLbVK
ChHbusqQBOp1hXXU2USv9WI/VprAtjb7Y3wD5U1lbiq+eyGdp6NlUOb0ExU+
JnY9/fOl9OGA8iEXkk1kJCcr1HLulXTdqG/HN8Et1PmOtPSHYpm0QMSJsi8P
tlEE2TTLNaFK6dgKZ+5ith10WZudXiWuSnp9fviZY+0OSrwZQg/b1dL54pkZ
n1d/o5e1cH5voVaacY0n7JPCLupQJPOO72+U9qVJ2C+Y2kWHlr6YtHk2SY/L
b3nbuu6hn2mzm2nUzdKJj+pvf8zeR1MD3bfaBFukwziev9zwPwSnNiREKKZa
pX+Piz38Pk4EvIzWMpMbbdKNVxS+dZ0ih43fqre9/DqkWxSe5717chb2zpYY
yzY0SPPHlnza7jwLL++H667aN0hnT1TxMX07C0oqjwnFNA3SJy42uitSUwGj
AOFcbu4rWe/bndX2UlRg8lDORidvU/ZD1eBevAUVWP64fTahmAZdJ5qUr4qg
guo33UKP1fhQo8ZixGwxFZQHrt84/gghvtRPvcQjVJD9uy/jvbMGylz8ceby
Hyq49NdA+i3vDUTG80dfh5kaTvrR0HplWCBPT6JMTwI1/BZJlLtibIdWGo8v
ZjpSQ4jSdFlFuCu6duIsR0siNfx4XZFdd9sLYT0Gh0/V1OAfWyAx5X8X8eRe
LD09Tw3pH7fVUi1DUcYa95YICQ3UHLvevSYUiUhFhCVNuGkA7pKyu1U+QHcC
pQNDrtKAyaQ1/dSfBLTUpdha4EUDAjm6Z40CHiIdKk2ygSwasNGoeLVjnY7q
TfW0tlpooH8CCitqs9DlF/8lMazRQLmzo+VT9Bil/bSakKOghXTmzsWHU08R
iazTeVtRWhhS7KTTLM1HbpGeN2NNaOGD6EqFQvMLtDB09/nrEFqQPNzBNnym
GGmej1ifKqAFrYtEjed0StFbmziBwwO0cP/L7DMZsXJ0qTzVk3OLFroJTLkD
sq/Rw92cWk0GOjDPy2ins6lELgmlShk2dEByun3hHHUtmpuuvt/4gA50xQ9r
mafWI3WOpoEPFXTAeta+mpa+EXHUvjMUOnQO2lvLjISnm9H0ysbt3rRzYBBn
jOZHOxFBXCRlv4seOGT39j99H0KvQ2Sm2b7Tg9w+SfnTtmHE0qfErE7DAA8+
BmwUpI+gXQv9wtSbDBBHfUTwucwYKov2auD/ywDm5W9GP9pMIqaxQOIbLIxg
6Mtd5c01hWKYI1UClBmhyXWO4+6HKWT9Jm2oK4kRDlM/+n366gwa+ZdL+72G
EUqy/9BX7c0gObUXJjQLjGD2rpyPLG8WMc7XfLjJcx5aWR+5kM7MoUM/XdO6
rp4HTnaGM1z282jl6GU1fq/zcJlL4umb7/Ook37pb0rmeZAZ/Pe7WGwBFfNl
FO81nYe4w2IlH90WUKL8NTPLj+eBXvNW2sqLBeSpf/xMz0kmYArbDg+bWUBG
9s3NAoJMwOyuk1V4fBHJ3vX1SLvBBIPP3gXKCC8i1kRBjn/+TMDKuu7IabiI
juavjVs9YQLzGTDV91lEazVPono7mOCY/uvzdcmLqL/PSEroCxNofeDW03q5
iMoXKb+kU16A0uFLqUfrF1HKVnf2IfELIO7+1WypaxH5koXq2Px3AZZOKVAs
v1tEZueliPpDLsAHmT8L5KOLSFHgZ4VwwQW4RbHd7zC8iC4pvbR61HcBNFdK
gsj6FtFJw1u0RD8vQJdOBft20yLyrnxgKXySGZBmprZK+SKyb7Sr/8jEDEr1
rm1nsxeRSbcSzSMBZng8f/+ae/gi0hphcdZSZIbihM34UNtFBHN7HYdvMAPD
/fclt5QXkeDqJPMbO2Z4ft1fTIR1EbFtvPGx9WeGh1Y3uxl+LyCa3YQhhjhm
eJqQ/166dwGRHnXiHnjMDFn7czn40QL6c1otLOQ1M/DUqdr22iyg9XMcsyId
zGD/wrA9hn8BveOdi81cZ4bQL6gpz3UetYq9/aj9jxmkr/R+Mv4xhyrlUoCY
kgX8bI5WDjnMoQw9rQ07MRa4rcZuZ3RtFt0MaNATC2EBh5jSMyzfptBGbzbj
EC0rrAhMEFSKRhGVo1nhMYWL4P0l551rYRu6fOxpu86Ni5CUyG/cJd+K4MmH
pXSHiyA4nW74aq4ZOU7cZuBJvghMUR9ph1kaUauif4zO+4ugzUr1yLHiDZqa
xwXpvy/C318OkpHsFei7L3HbEjkbhERdnNjILUWMZff3PETZYFDB1nrL9jny
OJ/ulB7BBpM6qjSk6SHofvXM/aVHbGB7pKRbKUMY5V5nfs5dygYFhz4wxP0J
wr1Rz+frJ9igol/Oz/hROmb79UZniYsdgMexwGWpCEsm/HbklmWHqBf9s+E3
SrEOj0yUxzV2kGks0dIQLMf+N1ubjvqxA5Vp89xc6xs83D8kyN3LDpwsu5rR
xnV41Y5G22OBHepBXevEcj3eP2LkUL95kL/zbf26KcaXpRafap/nAK/Ck3n7
tE0Yxtga0wQ4IKKd35m5pQnru9rOLCpxwKuRf/5kts045Pk3Kg8nDhi9qxN8
PqcFp8kLCdSHcAC5RPAHEGjFr2Y9NY+mcoDBqE44Y30rnjq7H56GOYBSzKZr
p6kNf38l92RxmANCxZ65/5Fsx0fVwhsurx7E73/yrCxux4JBJ7frKDjBz9Bl
yzGoA6sw6Jw9ys4JjWbb/7ktdGDTyqQr2hKc8KFPnFRFshN7XB1XT9PkBP/8
IPzrQSe+v05vu2jBCXZ2vUWR0504N8I07LInJ0iVvjYku9iFK1mf5Lrf54TD
C5/Kwi27cG/9+7q6bE6Y7v5HfDK3Cy8ZcE2SVHBCRqHhoaLRLrzz03FLq4MT
jh5lrvIk6can4krPpE1zwq8bP5PvXunGbJc3eRe/ccJIlLbp+PVuLNkmpnb5
yCWQ0+3lSnHrxjrmftbudJdAfUzX8F10N7b+2xBSx3MJoi34EnNzurF/ClEO
idwloDheWsH4qhsnChBqtfQuQexVpj6zqm58ZdpQWcb2EkwnjvhY13bj3rDb
w9x+l2DydJby6QPbji/YjD72wB76veta2Y2PTiR/Jn18CT5qm118XtyNnwYX
eG1XXAJjYa69jtxuDNx1xB/aL8FRBm2/r3HdeG5kIG5k8hKsWS4Kivh1Y7+7
ywwt65fgxQTvtaqb3Zju0vbzsn+XIMU162E8oRtXvjsunEvJBVoiV6VnObrx
dT+mxlh2LpihKtytIe7G39kENQLEueDR0Z4dhdku/KBfacJBnQsU9Ekq0iq6
8GVvQ0sjUy5YkZIkGrvXhS17gvzFwrjAUyyBMZStCx++k0zKkcoFqKF05Mq3
TpzNVJBMVcgFPt3S72WrOvGE60DRjwEuWG58b/8PdWJNOqbZlwyXoe7WVyIH
sQ681iRgl8F3GXSef/K4/70dRzoobUXKXYbgDgpfooJ23NzgSG5tcxlm13To
7lC2Y1GrWhnmisswR5bEmDfRiodPDXSdar8MBnIsY50Rrdileklvb+IyTFma
KvKLtuLCE8edpvYvQ6L0lItIQgu+UG6QnazGDRFNMUeIFZox6b+tfdIlbngp
Rt6Qr4/xswKy6O1NbmB7eSSc8k0Dlr92nvbDMR64nj6j/4+qAfs/U7zSwssD
m1PMdj8n6/B39SSzAB8eCL/LQGDzf4sfbOV/dojhAUnJqIHAtRp8Oeetl1EO
D3gdLUIOxjXYcmMxTqyNB0SKJ75ZKFXjyTT+xh8UvBD+I6EoQ7oSZwy/PO3J
zgv3C+anBKvfYKNTnGZ/JHjhNPNlKBN7g2dCz+8T3eKFy/HFJPXyr3FWQ5pm
hBcvMIed9vLor8Cmv89mnYjhhQIcrW5tWoEXnI5LU73hhV/UvL5S0eX48Yvw
6LQuXihM0SSXvlSOb64cmmac4wW/iNy7ZV1leMVw24f9GB98MtJXZKMvw8+S
3bpeMPDBtQIzN8GuUmw98IWOj58PupcDJcb9S/Gq4kqVqCEfGC7lN3xeLsEv
As2O1d7mg7LI/LhP1iXY/u2UPgrhA6ddvt5LP19h7i29/JYUPihx03N4HvkK
r195t6X8kg96xGdfmHO+wsX2Gkq9mA9CdLNOaQ4UY6dnHck6I3xgZCTuezOo
GF9ZkF8ZWeWD0YBkoWTJYvydvkHIcI8PVukP/RjaK8JlehKhs2eugGW7xvrJ
7iLsFv96yILjCvSKH/3Am1OEhXqusH6QvAKHum3hQkAR3iR56WqvfQVy5W7v
ddwqwm+Ao+nrrStw+Gff/MnrRdjT7zGFu/cV8PcqsxxUK8JilYzm2zFXYLax
7tPGgb3zPbXE7/EVyJi///TaQXwN99l//95cAWcarY6eAzxf61itsO4r4CP0
JFDcvwhLPSbLJp2/Auf+o6VzzSzCu9NhX2J+XoH4tws/1FuLsOmJoGzSI/zw
NvltSdbPIowLZNrVTvGDZ84nbonLxZiZ8PdLDB0/tBzbf/LNphgHLVdTD7Dy
gz7RraL4omK8EOQpc4aXH+zQws217WIsxyRsdV2MH/jvRpt3qb7CRIYlr8fV
+UHG0Pmd/KESfPOX48w5fX7w5eMecrYswS1Jl4+YmPPDzxkhY+X+EhzW/+z6
ggc/BOZZiR4zLMUrDrf8WAP5IYxrsb/lYSlWImN5ahnFD+M/+G3mR0rxUcXM
jdUsfrgscdez2rAMR9YkJvxo5wcuOlHqYN9yHJ0XOEB0TgDONMnucO6+xmrC
dpTUFwXg9ivxi4ZabzBp6zU9Tl4B8Ez/l7WU+waHLbNPq8sJAPPmHcowQiX2
Z+39kGwnAFHm9g8q4quwZPkbrufuAqA38O6fwVIV3pHLcawJEIBvgS2itkLV
+I6F28ZswgH+74zJa8PV2CmXbp/jrQA8aHD+ZnjsLebhJ5KTaBWArT//EWtc
fYvX8OdQ9X4BaGKu+/4u/S22mW8gc1kSgBhvuQJxjlrM4VygEbIuAKV0e0Vr
drV4ZT8hLvmXAFz7ynNq+GUtNmeyoq45LghuV3Jffeeqw0yvtAx6qAQhRd4j
c9eqDs/IiD+aZRKE4uUErfWcOmzw3wkWIiFBcK+WCOYhr8c0XzZvUckIgqhu
f40h1OMR/7l8DmVByK4b4mVzrcdXM8t41I0FoUah5Nj1nnpMwfPI+T8rQaDV
m3+SsVmP+2vDyp2dBWHEuH1NiaEBx6g7bQX7CMKK5liiCmrAatM3xJNDBSGY
u1M41bwBkzrI+eU/EATDQmoZzsAG3P7nckN1qiC8yl8h+pbRgMPuUx3ueSwI
f3OqKt5XHJyH9PsKsy8F4bDLxE3i7gZ8qPDjvW9vBEFbsOGQ3GwDbpB413W4
URAszc6Zp305OC+73p6k6hYEs6AkoSN/G7CUYZ42x4gg6DZbngoiwfjP6oNE
8TlB8CEU3iIlx7ja22tUbVUQmpUXQjPOYOxJakH334Yg3DV/lil8FmPhNDVj
511BEOibfDN64N/gFM4OPioEb1UMSgMO8kurzi8mUQiB/tksBd6jGDspH2PL
pxcC3xivv+8P6vOOf7euZhOCewayIoVfG/C69dSLbj4hoArQZAyYa8CFv1rW
Z8SF4C4T7/ObPQ3Y9l7xlW/yQnA8hjLZ7OB/wEGT6nZYUwhsLhyy8slswCvP
gt6cvSEEeRbjxpVBDfiJiP0Ou4UQvEzR9jx/swGbt12XEncQgsddHXaV0ICZ
9GTuqt0RAtgMy45ibMAzKxxNJoFC0LlPzJ27VY8zPCiOOEcJgfFRrQHi3npM
m7wclZQlBMs9tAkzLvWYjvtN2E6+ENT/jE8ckK/H9M33Av8rFQKdNQWyeMp6
zPSd6w5nixAE797ce/KyDrNruJjXrgoBM9tqrlrbwfwuyxkzbwhByHW98fl7
tfiS71n98L9CsFsQlZZDqMU8BZXq2qeEgXxXNmm48S0WOrInuiwkDNol6m6x
j2uw8KN+ARUZYRBXDKn7pVeDRQVzeYoJwrBTJFn7m7QGS5orsHoZCsPtgRd9
JxyqsVxdFPmJQGHI+taET7BUYW0PmhXBbmFwbjlqyXrzNdY5sTqXOiwMES+q
htyOvcbXntRM7s4Iw/qvfuUbRRVYf9BkoP2bMHx60dxGv1WO/+N5+taIWgSG
z/MgmbAy7LByJSHEXAQSM1VouDWKsaPf4ZiPdiJwrmLbJyi1CDtRDt/TcBeB
a6uxZqPLL7EbePrT3BOBj0zcJz4GFmKfzDqbwpciEGRywca18zmO0FWVHfol
AgELbesvSp5g+tf99ESHReHX0KquC9kT/Oqs7rbACVEw+HtImtz6MR4bMi1N
uCAKd1YeDbJeysVsVz1Yr6qIQu/dfePPTx/h6tLf+0HXRCH4etaiSVQG1qAI
nC41EQXisrHK4jvp2H0gKpnCVRRUqFpEb91Kxc2aOUcH00Xh32yD+frDJKxf
zLb876koVJFO2Qi/ScRrJwvxlVeiILHYvEs9k4DP9L72jmsWheNfj4fMQTzO
45bUw72isP/IjOXtXiwWj8YC38ZEgYjgP6MS9QCbq3WvaX0WhQX5ulHtgft4
84V2x90tUaC4n8M6GRWFI8hGn776JwqHmCR5aHQjMb2dUdAcmRjEMO2KHeWL
wK86501OUYkBo9abn3m097D8JSsJWSYx4AdL+zWKcDwWsUbtdEkMcq750Pec
C8N7hK3+PukDv96NYCajEByf7/tyjyAG99+ntNgmBGO2o4ciea+KgYbhMae9
8SBcbRVu+Z+xGDgJNsxi3iCs0XZc7oGVGGQ0Yj1m9kC8wBZ/vt5ZDCoakl1T
Tt7F7mHUf9Z9xGCMmivq4ZkAfHQlY4wxTAw+EyjWu4X8cYYCc4VGrBgkSi4s
z7r5Yb6nz+L808RgxcdwxLnfFzcTcTsWPREDIjJJc0aCL9a/WaoyUyQGoU53
43wmffCnJhH2k1VicEOA+BdtpA/2Z6k9LN10wJ+iezLkqg+mCIY5h54DfhuJ
xiDig/MW2t4+GhWD1ujTT94J+mBxUE/tmRcDJlUS4gpVH9ybM+j+95MY8NE3
8Zr4+GDzf3o63Jti8Crt8w1o8sGbptM8xvsH+qWW2Pcz++KIBnOyaFJxeOrF
dcU11RfTM314/5ZSHPzJmfzj2PzwqwCH5jVGcbCW2beK6fDD8rPfs+k5xeHa
/IxrR6A/HpP29FMTEIf0bwWvMzUCsH3m3xu+UuLwIWiCyor3Lt77GyRcqCQO
iV6ewZ4sgZitNvoLmZE4GIf47ZjmHqwH/ZluCUtxqGaeF1IVCcYavin5dk7i
wPdkJspzKBi7Szw26woRh8wY0cO8bKFYLffUpnqMOHCPLmoP94Ri1mP+kf0P
xeEqPTOri08YHhzRLxsuEAdGQ00Ro/fhmM/lJPFcvzjMU1FHeW5H4tV8r/wN
egkwEPCii2+Mw5j8veQdNgmgyBpyyL4aj1M8rg1s80pA/GcuwbCWeKwkz7uz
CxIQTkNx3aYgAT+ZXVI9ZiMBpimjz4PckrAJldYXhgoJeKHxJYTsUwoW8qsN
zq6TgMNsisPh11Lx8aVLNCztEmDN4EBt/zYV15QQI45JCeC5czRmMywN06jX
xPP/k4DBCvvnh4gy8JcyDvYKUknwiBDlfG6cgVvpkmtEKCVBhnaeabY8A7t/
cFqSZJeEM0JWrBmGj/BgMJuwkrok3Lt7SPVPeCZ+vprQ2aErCVbLHW+ruzLx
Xe1/JmqmkhBrziNw83gW1q90/NFrIwmMX73oPihnYd7zU+HarpJwp7W1RTgk
Cx8JU6Yf8pWEF4WKlqgmC8+svX6lGyYJpuynuXbWs/D96rhxw1RJaHmcLyWn
lo0tLuw5zORKQv7WQ5+37tlY/J79IbPCA74fBvIq0rMxxZfx5MUKSUikD3lw
sS4bf7yuxGVZLwn7t76+PzydjRveltd/aJeEVhoXTeVf2TiFhfma3aAk9BkM
//eFPAffjnzw4fOkJPRwh9z/ypKDFb/98XValoS6z/XyBMEc7KOSfLlp/aDf
uQWut7I5+NVj3qmzvySBLCZg54lyDl7+0x5l/U8STqRe/LmvkYPpdM0lakil
wKroH2ufVg7WLP69eoJSCrx15x3INXNwyNGkNFMGKWD8NBTZeJBfZcajUsYm
BbVDfzc/HuCvV7dtE/NJAdwDsnsH9VkozZ7ri0mBm6v9YhZrDtZ32NF/AVLQ
Wbr/n9DpHBzdmnB0V1UKjtEcFVLfycaN57krta5LQeOWbOfabDbe8my1emwi
BcaifNp0jdn48uB/1JtWUsBskVc9lZ2NTbm2WwnOUkCn9OuphG82TgqJ90j3
PsBX+3tH5lo27pzmYlsPloJLmWky3ziy8a5wy7BstBT8EbWoMdjJwtYftwRX
sqTgOO6WCEjIwo8gbkn0uRQ8Ft05oW2YhQfTLyVGlUrBf6tpAkeZsrCkhvEP
vhYpkKf5s2KQnYmdn23mBvdKgZ6C1mUKo0yct/9AZ2T0QL+wG8wrlJn4VFlj
ic+qFCSv9BZe8H+El6g5nFrJpeHE9XDZUr4MTOuMz9PSSkMCuYUY1Wg61ug0
6LNjlgb9naFERp90XOkbzXNaSBpMv9ikWb9Nw/fnv68ZGkjD+TzqJlK2VCz4
otbm2xNp6CLpaGp+loSDpa9a0IvLQL9hQkrp3wisYpq9ISYvA47yMce/fL2H
TwV9DtXTkIHPqgPxxMvhOLMlPD/eXAY6yEgYUvtDcbXa289Ho2SAPeQOmahb
IA50PBbAliQDnyTnFmZdAzAhVveUfJYM5KWXcHl4+uGRd1/5A8pkYPyI44vV
OC/83eCi589JGbhF5bDxntwFV/m6HDuzIgPZiXrkR+864ruZ9Wl8X2XgzbKm
c+43W3xy4UatHZEsWJnHGJsR38ScNjGHFi7LwuGNzv/Efirgr5GTCXvCssBZ
GZ/MlsOHXxdyXGRAspA9tKXUd50FyX9tVNK/Lgu3qi4ymxirI9M7W/d7/WSB
Io3/2xETC8SeKs+4Fi4LiXK/75u130Lr1XHFx+Jlob0mr4qD3hr57nINyufJ
whe6stRf/vZIjsnLwvyVLBi6svnERDsiUmjdCKg+wDuUsFEQ4oQehppS1/TK
gsVnx6+rVK7I5NnL/LExWfDQPJHRt+6KWDt2xDYXZCH1x6R7ebUb+rSq1HXm
syzISnezx3q7o9LjSUZXtmRh8a6zthGPB/LiWfis8U8WjB8Ym54d8UCyWrwB
9mQInpzSHat2voNIXHxPRZ5F4FCfeBB3B/UmdOQ8O4/A6W/8u5EQT5RUQSXQ
womgDchDDP54IqNRi+YFAQRs072vl6y8EMv2q+v7UggGz5odC27zQqt0uysM
BASPcq49VTjnjUokVT0ldBCQX3GIkbHwRp4mKcduGCGIemB2NSzLG0nfXU7z
sERA+2KJib/fGxHn8l9OdELgGMLUavzTG3U3BdSWeCNg8P/rxEbug+KXuzX6
QhCw3HRbf8Hgg26Q0M2txSCw4uS7euqCD2LitHImTUWQc+gQkyetD3qvUn6I
4zEC6SvO7KQkPqjI/l+CwksEfjvfLb589EbuMRoXLd4geG/LdOFqozeSfJX+
+i5GMG718rl5rDdSHO/f+9qJoNN6vzFX3xtpHTqibDaE4CcrH5UwjTcy4JKI
H5hGcKTMllOxzwvduuY0id4jqI+hObrr54Wc/J6yln5FUE5GShLJ6oW88yYc
mHcQCJxMnaBu8kQEP5bAIBKAJ9wzvJsf7qCe03VPxY8DZM+1KOc73UE6efqd
308B6KNn185/80DGfdFnLOgA+Pa5nnFNu6MFCw7Rc+cBYuXecXApuyPrX41G
71gAKPbHNpqK3JDLhV9P5bgBgkjHO7OsXNFWRXzn7ysAT2f39q/WuCBfFe4v
ZcIAXp8iaoKPuaBwV3NRVlmAVvocdb9Lt1FGS3cn0VWABOL71/Q/W6NWm5wv
LZ4Az605dPtEryHVXQlKfz+AqalTmIlbE/XHj4gKBwF0HvOb35pSQpM1ZEF5
UQABX6rcOa140NcTHpThmQDtYQPh8JaA6UpVxAjNAOQVDS0ngi1xluKy8X47
gFSnUFuQjjVmnQwIquwBsOwVW2NhtMW8RBVdHKMAtVu1oWr5Dlhe97zJsVWA
j19f/8iXccUdq1VBeB1AbYHwOI3CDWsEXHvm9QPghYqSG+OCG76RH/H14x+A
Fu2jDrweHthx50dQJ7kcJOqqjew6eGFJV2uaD5Ry0LrE//0drzcmXZt6SUwn
B0L+5je517zxs+mWMVlWORi81TTactUXe+iKO5pwygHNubjFil1fLN9XdNiX
Rw7GSVQ07z/2w3MND3neiMqBDFqospjwx0Vix5uHpOSg4SGj3EX7AOxbevfG
d5ADuV5fW42tAEzzxCaEW10OZJM+Rjhu38Ur9DO0qjpyMCY9Ry3sFIjLk3SK
rfXk4E23s+WRuUCsHS4x8dhMDjaFj2hL6QZhpv3i29hSDibZrPP9gw+k8GQl
nrWTg4ep8jQXXwbht99S0v44yYEom6IR17sgHGl7go/OQw6KTv+4GP0zCOsv
BraI+MhBTHYShxLlwf3daNPg+l050O2/fU6PNxhvDNl+dQmVgxLD109qFINx
o/psaGykHExbb7i5GQTj2Nar54oeyIH0hycXg2yDsYlM+6uuRDkg44vVXPEI
xpcrJRU/psrBk6/XfB8HBOPffCWTR7IO9NsOPF8bEow7n190Zn0iB27vq5+K
hAXjFOa0I/BcDqz67HRpDvyW6Scz/iuSA16X5/a3/IOxIGXwFb8yOSA+7v73
onswPhS91ZpWKQepj3b+mlkH435ie6PKWjlosfSQY9YPxpn+c9+GG+WgLi3M
0Uk+GDtsXQv/0SZ38D/P2dXlDsaSTh30p3vkIKl2TXCeIhiTfpQq5RmUg/0E
YD53oM+YWamS2qgc5FzeSj09FITzJtimbabkgFz8B8dgcRB2u5ruEj5/sL6u
Dxnt7gVh6CY/+nTlYP0+ubp+Mg7Cs7W/+Oe+yoEeg7UU/huIi4Qd2v/+lIP/
5C2DviQHYt/ieeNzv+XA5/f1IudLgZgmp/OeLrE8eCgXChKhg3mglWF0I5UH
FZLpbNPmAFweX1YWRy4PgbFBm/kQgLVDMma6aeVh287nTTafP460chSU45GH
/wQFu4dHfLD+3EKHqYA8RLntuQkI+2C2G3r/+YvKQ08H0dXxOG/cqCIbWQXy
8MNy5meltBf+zU0xx6snD+4pTaX/XD3wryz6YCEjefBmuGcrXeeON0+zs0mY
yQMmp3LUP+KOv/6UsFe0k4eFv+fyZmNd8VLtrV9GAfJAcuvHp0q227hbvepU
5DN5CG0/Kd2xbY476pvKHhTKA1wPxFIfTXHrlV7dpBJ5ONQcH7mwaIwbzi5m
ZNfIA8V7H9S8pIfLp49zvumTh7PP3E64qCniDAdTtLQlD837i9ZtScooddZ2
6eMfeWhXX3hKKNFAydru4V/+yYMfy3Dx7wkdFCsU2bNDpgAPHDStI17roehn
iU77pxQgyNaufYLcAEXSZp05QqUAp/oHb20aGKGQv2U3TjMpAMNkfuSXZlMU
eLvuD9VFBcD2IZuhLubIf749i/6SAjz0Saev8LJAni3Ty+yCClDLd+JE3+1b
yCGaxEWacBCP/A53b1oj273TZ+XVFSDPTc6xrNEGWTvTVyrrKMCL7SaFp6G2
yPz6ld1rRgpwhgoMlb/aof/aJHIMzBQggPKv6uBDe2QkpihvaqkAp2+feU8h
7IB0GQwj7ZwUoD4nfSZI1xFdfXCL29ldAciPLO+njzkirX+3+z28FYDG3d9Q
Vvs2Unf1dvUNUIBGL/sa24bbSGU5hCooRAGeMzhq0bA5ISW9B1XhEQrQT3rD
jxDkhOQ7Uo2iYxQgjrmG7u+QE0IST/biExRgNUf8ojijM5J+WZSbkqIAFhNh
X4lNnNE088scpUcKQNpPIU0a54x8U15kb+YowOKQB9uHGmdEd7Ig62meAtxd
YzhWMOOMqoLzM6+9UIB5n8QOw21npL+d9+jwqwM9tX56HiFxQZuOTzNKyxUg
lvLH1ZvHXVDS0uN0syoFiKYVaO4/4YIEDXLTTtUpwAwZycdrZC7oXV92an2j
AnhJuqfvELkgF4WsFMc2BajTTBlN/uGMTtc8esjQrQDZj81vPh91Rq/4MpK7
+xWgR/XOCJQ7I828tCSfYQU4O6Sf5hvhjNbPpSZemlAAX/JgL2c9Z3Q/7mHC
+IwCqC5Xe0sd9M9Fkhx/b1EBLLfuEe9OO6FO38Q4kQ8KkHGx59VAshOy/h4f
u7J2UM+TTWWM4IRIrOMeJH1TACf13gn+jdsob/pBjPzmAX7jI+/DqbeRwtWY
6B87CsB1uczOQeQ2Wmq/fz93TwG2QhZ3E/scUbB0VJQ2kSJkPNUdZvjPETGX
R0TuH1WEjVu/eiryHRDmvBdRfEIRBhWS8rmE7JFpVtg9EwpFqB/WsuSNsUG7
lKHhJ6gVIZPydNAZdAs9igwOe3tOEWb/lRY/rzFEkvuBoXZMiiBxkduF7R1C
E+53Q+guKoJOQz+Jlrw29vrkH9zBqQiisqu/eT5aYxozvyBPHkV4IFIfPTfi
gd+M+ASyCyjCrtQZTbbzQVhXzfvuiIgihA8NFh5fvYd/Ys+AUElF0A2e79da
iMWJInf8BZEi0PjlCVKRJ2OBl+5+iwqKsPRzrdpRNx0PMrv5xqsoQjdb02t9
7RzslOLigzQVIcXJiUyW+CkmP+ns/fWqIvA9vsVE0pSPi4Jve2XpK8JvBrLH
EyuFWG3bwVPDWBHYK/RNrrqV4E+O9nf+minC8gLrWUvRchy5ZOtRaKkIPne8
vQo/v8acBjbuhnYHfIwy26ynqnB7n5UbqZMiNIYP0i0R1+IjNTddrL0UQSPu
Qm4bSRN+ymfhTO2vCNT5Zwm9W81YPs/MqTVIEQb+eu+eJmnDgXEmjqz3D/DO
aY5TBnZhJhJjh3exihCcJD0e9qEH1/ka2gclKcL08B2WeZt+/MdK33YuUxEI
O02W7hPvcPq0rs2Dx4rge6alxEJyGItfvW4tna8IYb3/XXB7NoI9pXUsM0oU
4ZFyXtNk4jj+Qalmrt+sCOKj3r0kRbN4wpF10L5DEd5Im1KcMJrHje1/UGCv
IlSEabzcDF3A8b4vLxSMKcJ1znfkUnxL2HskNK5uWhGIxx7A2L8lbM5n8m9w
QRFEyF1CP/YtY/6lk/O/1xTha5/kZJ/xe0wn/V7r1HdFkD6evfTu3Ad8KKW+
gXXrYJ5uPDQrHvyAV7895BP7owjq/7xp7wZ+xAOqTtnq/xTh3Oc+Klv2VVz5
lHDK/IgShHwNoExrWsXZe0x3PciU4KjlvRKl65/wvRvbXyJPKYH2k9cbbyY/
Yaeygf+yzirBkUn5XBndNax/oqCvjE4JNgun/RWa17CsVZBM+3klGJwmt5G/
+BlzYIPiKVYlCPaMFuvx/IzJzwmc/8apBBXHHhreq/uMN93IHhDzKoHTwONT
Ipuf8Uzv4i6toBIwR2VeKz+/jls53jryiCkBVfuEwU/xdVwUlDgD0krAIUmZ
dYywjpOn7DX05JRArow/gk5pHfsLK9TZEZRgKII4z1Z0HVvGMvDcVVeCao5Q
72v061h99eejRB0lOH5JYofw4zMWlO898VxPCVxXaAp7aj9j+sw8v1qjg/qh
jFHevp8x0S//zwNmSiARU1qyxfsZr2nrGa9YKoHRMdPZnbE1PPSCt2fHTglk
Q2c/yHuu4bfER6XInZXgzp3lC1kn13BUVSW9qI8SCBdwFDWzfMIuZ+Luq91V
guXq4QzhJ6vYwMHmj2moEhgLJNv/Y1zFly7QTUU8UAJCv8nhqSMfMYXPd9XM
RCWwi6K29HH/gHeGOmtKU5XgE5nekdj597jznk/65GMlWBcr0J4rX8E2X6cM
uCuV4JLfvq3+jSWspVLRiWoP8KwW/OhbFrHok2hx3UYl2CEjLLzjX8RH9aXp
ArqVgHvyxPMHZxfw1xKqyIQBJWB3uP7XknIej5F92X42ogR6/OW1dEfmcH59
1nj/nBKsMTkd8dqdxrG0nsrLy0pwdbLDYpR4Gnu6alVtryoBm9Xt3GNnp7AS
+78U5p9K8Fk4xuy16gReiTHXdztGgLnACkN1hlHstMbDyn+SAMVSNadfuYzg
beXfX75QECCgaTnEtG8YHydODLejJ8B/j3+Q2WYO4WRz06ucFwig7LepkXJq
CJ9vuHz+/UUCjMq/CqiPeIf5fVpem/MSQN/v5U2/2EH8diwuiEmQAAJ7xtl9
DINYQdhEY0aUAPkfpj4xmw3g3oRLdBlSBOjTi70qntSP9b9tLt8AAlzmOOYX
O9yHFzSaSqiVCGAQKGDcd6EP2xc+8BtWJYAqn69MplcvDrDiOKt9nQDxRaZn
/VV68NGWjbmTBgRgbW11fdfYjeOZcWG3CeHgQccHoNCN6e9Ge0ZaECC8LOim
zUAXzpu+IU+wJsDH48XTK5ZdmE+C7dQRBwKkymiS6BN34aqU75NNzgRouN3f
dKOwE8Nm3bNADwJ8S6MpvmfYibuvRrnK+BCgB86qBFJ0Yt0SPZm/AQQ4/ecY
y1x/B549yUpWE0IApznj3yi5A1vbfx3xjCAA74+xVTnzDvy9422ucAwBbtyw
vhss2IF92SMcN+IJcKp5bC7zeAcmDr0uXvrwAM/98aLgajuOWbhwxCmDABWW
f7iXu9sxjez6AHcOAWLaTdW0yttx7qPqR5+eEiCOtb6TOrsdc/0Os3leQABi
Cl3VmQftuFz/qpBVMQGYrtzKUApux9Kvz/9jLSeA0Efc/curHbefWeteqCSA
YJqzTIprO9ZxrkzJriUAh5xJXc/tdjzVG3LTpJEAlNd47oNjO751WZuPvo0A
usNq7jkH9noEw5/xLgJM8XDMJTu1Y8/3H9se9hNAXKVkqv8A75DC64TrwwQ4
s8QlsHenHd/PDfrvzAQB2u9oubzzbcdU+xpcAzMEqFrBf/YD23GW8bmtmEUC
0JiOnJUKb8ccNe8b1T4c6F1R+ln6fjsupSmPIf18MC+htYX1se1Y0uOuQfs3
AvwOs/P3TmzHLe/U2MI2CSDV9V/65YftWOMK7Xe53wQ4uNToJKW047GY5dp/
ewR4aOd8xuPANl8riagnUgY9GUrX+OR2/EnZ/7rfMWWoM7gq/Cq+Hbs9U7kg
cVIZanzXdR8e1N8lov78i0IZuPLTj1GEtON75ouVr6mV4dEVkqY1z3Z8uqE4
xI1eGfh3iCU3bdtxGoOvFv8FZdBY3nbbu9GOWX0I9F8vKoNEkWXlpEI7Lhqj
/PDykjJ8qyrKMOVpx6LC82V2vMqQkLZNZHmmHTcmvAzgFFQGS1J0oXWjDat+
81J9L6oMh2NDHYwH2zCjANM9UmlluFn91CY/vw1/dWtt5pZTBmUP0QIB7zbc
9Nr+nxZBGTaXM8gnFdtw8i8KaTd1ZWD2Gk/wO9mGrcWrvB/qKINH2G/429+K
JXz/e1Otpwys2mL8MjGteG7vBd8/M2WwqWA49/JXCy5FOg6sVsogOPbldOnT
Fhwa/Ou5kr0ySJZZnudSb8GXSBRYYjyUIT3VOFwlqhn/IXz6r8RHGYR/1cDc
hWbcFxmXMXRXGSZHjZ62lzZht5MzZ89FKR/cP3Vc7jc1YkWtEB3pWGXo1GaJ
s5NrxLTxlx6YJSnDjOtnUSUvjOvO3jman6UM9+dtQ+/J1uNYPQaFrifKUCRM
7Bd8pg5bpDYFrj9XBtp3H70jJt/iowynfguWK4OYVmO+uGo1njB5LaJfpQxE
FF/sr/yoxC+zjdx86pRBe5+DvTP2DdZhff4ZtyuDRRnfcNbLcpzBBXMa08ow
sve2MGq5ADs6fKB3WVCGO2XT7pLpzzAqjrmR9F4Z4mdrZHtlnuAV/snByW/K
ENDG15D7MgXzibu1WB9RAQ2114W3nXxQCyGvIIhXBWIusROfFy1D67dI3V8H
qkC5yhOjTaIu9DVbsR6HqYDfzcHHO7td6Ntk0LGeKBXIrVRfSdvsRhvavx8t
JqnA2jr/cP50L9qWWms9VaACEYzLESswiHY8OU7TF6vATEpaQGPpIPpTdtOQ
vVwFVIZKnlkxvUO7nNNfpOpUwIb0j3TsxjtERNVLYzeoArVhKzPkfsPoiDap
hceoClRuZGh/GB1GJPcVXwZOqQDl9XmqXN4RRHqoHqWsqECbrwKp/vAIOi71
O+rxJxU4TPL5ORvLKDrhKTJS9FUFZil+FPg4jKJT68W2LTsqoJM6/9JhaxRR
cK6V9++pAElGOPNH4TF05ibH3iSRKmh3lew/cxlDlFk3ld8fU4WVX+wDjwrG
ENVEdsL3k6qws6H+pX5mDFGfnZ7+e0YVYhViE4nJxxGNFi3HMVpVcF9ombeS
GEd0UdddKBlVQac/YGXeYhyda417e55FFUSUzuc53RtH9P96jnBxqILSa9pz
Z56PI0ZJUm1hblU4R1ot0tkyjs7fUUxH/KpgHd63lDIzjphKg5bVRFThmfqF
3eAf44j5cx2vvqQq1PFe1YgnmkAsHL8PXsGqoEmZGdp9egKxWog0Oyoe5Jv/
Y5c6N4HYMl1PequqgpDGdPRXpgnEMV6sH6qlCmcCxYY3mCcQJ+Vabux1VaDW
s+y8cWECXdLk+JxucNC/jt8EH/0Euhx5U+TZf6pwqrJj//6ZCcTTkh1YelMV
Ypo6SoJIJhDv/lRXrY0qlGe4tbL/Gkd8ErRUHY6qsJw7dStheRzxe1w3HXJV
BYJD56fpvnEkWBJXMOupCreCKQaY3owjobWejVU/VZAiN0rwSB9HwuykMptB
qnBjcC99x3cciZorRvwLV4U051m2DsNxJPYo6N3xaFW4407LsScyjsTH6hho
4lXhdNcdgerT40hKQ6SUJ0MVnHlfCInWjSHpCNc/YjmqQDFEHykaN4Zkm4sV
FfIO4r02XUTNxxCIc0wavlKFYspTW2W7o4jARksU0awKEkaUG4cujqJPN5UL
pDpUge6jWpv6lxEU89hL63uPKpCx6XcUV46gYaaJDMNRVfjprEhGqzyCzM+l
C/GsqoIPSagYicUw8jnFYPWOXA26tzRH56LfIUZN9RP3KNXg77f3aaNX36HG
aL8ySVo10J4N0uGke4eOks3sPWVWAzOlvmTa/EGUSJyV4imkBhpZ0m/0EwZQ
0Q5TJ4OhGlBo0l5isOpF2mLaToP/qYGl5keYONaLNu4EUoXfVIM/hx+lZRT1
IImf8+ZfHdRgN8tawGi3G80IUBx76qIGfCZt7vbPu1GQCxTfuKMGp6mniPN1
u1H7l9zfjXfVgFWeWvztmy5kx/Mu506oGrhcu0+fbdeFTjocJlyOVIOkRz3D
LRe60LVVi8SkBDVAU+XBi4mdaH6Jlds6Tw1mWepy4pM7UAjL9Xf0L9SgOo/h
+mujDsRhHuo1UKwGTC/2E5gudiDH2eUW8So1OJ/KwlD7th2dZqSy/1KrBsRV
7jvvo9pRuZEixZNGNdgeHk5UMW5HO+N5Jie61eBSRadbzpF29IhmlKixXw2u
njwcFTHThmT1SF54DKuBq2UBaVxlG1pKEtHmmlAD7/7SyFeJbSh8yGprdkYN
KF33Wedc2tClMymPEhfVYJ+yxpP6ahvq1W6XU/6gBmOrP0vVhdoQZR9HbOk3
NVActg6M22tF+9/4n3VvHtT7tiCYvtyK1iil6lZ+H+jf78PV29OKxkSUhvf3
1eBEcHQqfWUrajbQXqM7og6HZa8gzyet6JWf4WEhMnVQkl30GIxvRRnZt+g0
T6nDn4RNdvrgVnSv6fYVm7PqQM02/17BvRW5r3gRgunU4YYf3aqMTSsyPxby
36Pz6iC1On98x6QVaVyO8XjDqg4fDG6vWOi2InHNlOgBTnVouf+mzV6zFbG5
5D75xKMOwVWUjYdVWhFFUmENsaA6JBhfKaJWbEW7b14PnhdTBwrbTv6Hcq1o
daLho5i0OvCmjnU6QSsa+du5f1VOHaICirviD+xGpmFqR4I6vCTns/t0EF8k
N8tzT10dAjLXW6wP8NIsPyrk6qjDkKXZ8i/lVhQe8cPorZ466NZYN0dotCK3
wr+uI0YHfO5Y6R271opM+0iivpqpg8aayINbBq1I7fvpXFIrdRj7U2Z236wV
iZ6lr2K1V4dAx7Buu4P+WUXZ+qWd1YHzieT0N+dWdMqQ772+hzoY2KLy4z6t
6EO2/Nnou+pw8QZvXVVMK0q97OD8M1EdKq5ekz1a3YrCNO/cI09Th3a+yxsq
La3IxSUwizNLHcrFJ4pS+luRSmVSj/FzdQgROmJI+b4VCU9mLd0pUgfRxO77
zN9bEfPu899xZerw+cSIxp8/rWhHro6ztfZAv7lSo5HTbWjFsl12rlEdaIk4
7avOtaHBiEG9nTZ1ME9pSOO+2IbqCqccKXvUAeREeC/ytKEXfSuhPIPqcPzC
3lC8cBtK+f41gzB6wG/hdaqNdBsKOfu7zHzqgI9+zc8MhTbkJErc5TuvDlo0
DB1Mam3IyJB8IXnlYF5eD1p81G5DBH/a7Vef1CHlT3rQJ902JJjDcqrrqzps
K93QpTdsQ0zN3OzLP9WBQfhaoLNJGzr+XkR6b0cd3J/LMsybtqFfx+A67b46
/HxuVGVmfrB/LqvZCxBrwNdHL01WD+x+Td1gdVINiO25/sDlwK51MU2zIteA
dPMawveD/IIk25JASg1480+byPwAP7nSrT2dVgNu/b77ptqgDQVN+s9WMGrA
aPCP4Z/X25Dj7r3NPhYNcEiX1zyh1YYMLiScWOXQgO7hN/G/CW1IUf4RKxGP
BkRLLkTWyLYhfqtnEowCGmD1LzCXINKGGCNLdERFNcCPPKQu83IbKnxV3PJb
UgNcdQpIYi60IfHRl6L1SAN4HIWCrM+2ofa/L14EKWqAyezCX66jbUiXtYBR
UVUDBgMlnoxst6Illfy4Y1oaEGz14K/l6sF8OOcR9VzTAGL11NXJ8VYUU5e7
etVEA1rNNjqdKloR/XK2MbWFBhyLd5aJzWlFBWRZ/RNWGsBq/00p4X4ratVP
f23mfMBvOaFd8b9WdC0glfOihwYUBpdabx/sl4WnDzM+eB/0R0q1msDdiv5+
Twi6HaIB5z++Vru31YIiaeN/8kdowPbJoo6ViRZEIxtrvRmtAfMqh42Ea1uQ
YPR9Db+HGjBxleVMhX8LsmcPpYsq0IB9i8WKpJ/NaEc9OFqjWANe3dZone1v
RvfcAvdPl2vASe7F8+IvmtET7LeSUnuwXiskTwSMm9GUoUdpXr8GVLRoB/e/
bkK2QW4XbYc1oH3myeKVqCb0K98lhXtCA4o9RqT6TZoQ5aajf/miBiw/fSk7
fbgJqcVaqTRuaoDt3saJbwqNqKZZf2GaXhPkiRRZOEzqURq3BMVZG02YuyG6
/iOjEump98U3OGjCP7NMYwv+SkTpYHHG3kUT7GdsH1O0v0HRhVGUTT6agIqp
1i02XqO7XFNUzjGaYGXAIsmrU4EsOf3O9ZRpQqLWKHnt5VLEonw6w7NSEwJt
TZNTkkrQnPVTetZaTZDhuXf32fArdCO/h8GnVRN4nqtQTBsWIzV2RibOcU2g
uSBWmxNUiAQu1rOG7mqCQCNt63OlZ+ir/NWnfIe14In+WElsYR4qvPn+4hSJ
FhS2GVAYUOYhtifk7AKntUB49WRi7doTRMdiyjnPogXTYTctD17HaBQ2nt/n
0ALvVrGpNulclGh+75IotxYoJjb4jvnkoBO5r7geCGuB39WZTP8HWWif6R+3
lLIWXFCuNj1ClIFqZZOKPqhrwdOrO/G3rqQjb1NO3kQdLZhvbz+ndisN/cjS
5vtkqAU8fAUtr+dS0Kv65VfJploQlm86JsGRguxnva7ALS1ocX3CoeLxEK0w
5vKnOmpBVMvi9tbFZPRYWrhM3lULxiWS3R+EJyFTk06Br3e0QJY/kyP7SyIa
f/RdUClQC/aecIqdfpeAkmvDKr6HasGtCYufphoJSGeaTjgzUgv4hNteHO2P
R930ciI/E7RgM75s8mZnHBpkKuE4kqoF/9k9bbg3H4vGWM/TUWdqQXUDdyYL
SSya4Ygm43isBVpllVrkEg/Q4uXff0TztcB/679zLH4x6AOfzbrySy04lsf6
VqAnGq0Ljs4alB7EZxXeOcMVjTZEFQbs3mgBY1QSZ3zyfbQjWdbo+/ZAL+3Z
637k99G+7IXyaKwFvFUZQtlJUeiIwoOnma1asH/XuKeJIwodV/6bXNylBRu/
tzeL2iPRaXW7ew39WsC1Pe7D5h6JqLTHvQaGteBD8E/6z9yRiP66kt3ChBZY
zCi/avoegZhvVBj9mNWC7VhZdpumCMRhzKJBtKwFZ+suFaVlRSAesziZs6ta
oKm2UHomPAIJ3trjY/uiBbetmYhivCKQuI0Ds8iGFsTQTo1jjwgk4zB5hrCt
BX+JfH7e8o9A8s7KxDd2tWDl8HA+b2wEUnF/s2lzWBuMOvp/Dr6IQFpeFz94
H9UGzW9WaYcGIpCuX8J41AltsPxoweW0F4GMAv91ZlBoQ67IHZZu4UhkHnr7
7UtqbUgJ595r8YhE1hHTL+votUHmWLPq8fpI5BCtmtV3QRv6ug9jNfIo5BJX
FTvHpg2qgXZaglZRyDOJPegblzYMJRai261RKOTR4VtnhLWBp3DJITr1PorM
cdZlldAGtvnm8Nbj0Sj26aySkKw2JKyfWd0NjUbpL2su6aloA8laSc3ZiBhU
Wuv6Nc1EG9xCh2cc22NRJZ6ff2GhDVV9Vf9EzONQXYvmu7fW2pB9LtZMay8O
dfRwvZ5x0QayanmBk7nxaG560Yc5XBuYxSzrnL8loJV5bQeB+9rgbm7Ktq2Y
iNaW603k47QheaA3eDIjEW19TkeW6drgNLsgRKGchE7uXiUpKD7we/94dzwr
GVEeavxVXX6gz98oPp4fyYjuCN9qV5U2zGtMWfooPkQXTx7v+dykDZw77qdO
rj5EkozN8VfGtEFPV+3e7QupaOki29ynKW1YeP3yxS3LVBTFfY87b14bzLw9
R5qep6IJSbV2uk/acLh067ARVxoKki86O/zlwP9lMcvGJg1dUjtl8WBDG1DO
fd+wp2nIy3Do7+FdbQAbo6OPqNNRHH/G/yo403gsny6OFy2SVJJKki2VJCRt
ModkS7r3/Sb7vu9rSEKE7GQtRLIWWaf4E1LJlkTRIklFKVLpuZ+X87mumXPm
9/ueM9e8ueRMlhFASZKzyfl0OrJQO326gY8ADgXbZfjPp6O1GrfTvFYT4Dv/
zdNKr9PRK2SCe9cQwNDPZ+D62gxUdXL9xAEhArwLe66dcSgDsU67HZzaQABP
917NZ6EZSOmsDEtvEwGeH34dNn89A/GR+0JubCbArtgXW+xbM9AgLbxo+VYC
nJnjDu4Yy0DFrENPTMQJcE4vwEpgMQMFmkzMNUgQIOaY9hGpjZmIYJ66fdtO
Aiw2Hkzg7MpEctb62t7SBGBEmwffVc9EC3a/bPtkCRBoGj8qeyoTdTuVxCnL
89bfOU/LI2SiXDd2TeweApzcyW++h5mJPL2ERqcUeOOwIc07JplIz6+JX38/
T4+49N9glonEg5wVCg4QgObb5PjoXCb6ErKTyKdKACedHlUiNxO1hPf4mKrx
8mmoruyhZaKUyNDsRnUCCJxoETM4k4nsY1Tbth0lgL/L1rP1kIk0499+8j7O
25/KP16jz0QiSUki/ScI8MbMrCVaMhO9Tz11VAUIUHTXJOuzQCa6l/nT9Io2
AUhbRC4RZjJQTE5RxCcd3nPzA7tq+zPQueuM2/p6BGj8o/l0V00GUita019g
QIDTaXuS85IykMCt+kU+IwK41gscVHbNQCNlDtLnjAkQdPXyliH9DHSh5rGz
OJkAw0kfquNn0xGtPjjZh0qA1+fsYisfpCOF5gON/XQCxF3//XFtXDrqbUtY
E8chwIDRoVNJ0umosFNbedqEAG1n7hs/n0hD/o+/0wzMCMDaSfwYVJyGpAeo
N/itCaDvXrBVfncacn23Dfm6EEBQZksdcWUq0pnsshpwI8CLAGKKRG0K2jod
EKPqSQA13YdV96xTEP4++mLalwCHN0+p3MDJSJg/39MsjAB2OdxicVYSWvUL
k2fDef5V/fU4M5eIlr6MqoZeIsCPrHKJqzGJ6OvwttncGAIYO8U0lddeRT1V
CU5jKQR4myy+6/1iPLpqHmpteosAHVqSSaEp0SiakXPq620CcDSOKJ67wetH
xk1y5ysIgJ+7hkRVRiKPY7/eZN8lQFn5dGF0VwSiiLiZvsIESC8/WT76JwyJ
tZxjcPsJoLPrzXsrCR8kfC/48OdBAmiH7VTjELzQqrJrYkEveP6sL19ciPRA
8+lD/ddeESDgwTHBwDWuaMiNQByZJEDpu3DyoTxz1GPjrOz4icf/htwjax+Z
oA5uzPo/nwmgu1VjStGVgeoMOh5v/06A/8zV7a7s0UcZ0mDI/sur3zvG3waQ
Lr66xWTvp38EaOLTO9KeQsDR6wIFAviIoDBa7Ov2kYoDftW2Z6wmQuX3Oom4
9eew59eBAgVBInz1yw6ihZhjx/ffw+uFiDBbKHcicdQSc54dODm8kQi3t12o
U+PYYcrDMzL2okTA5qYfBYMcsFGTw/JFMSIUWpo5Ho1ywieKi/A2CSIQ5iYV
TCtdsXpOW3axJBE27cn4PpTqhpWS3wYdlSZC1JixyDUPdywZulODKU+E3Lbp
8jpBT1zmISAzuocIK3ySSgpbPLGm9exqs31EaDHpObfW1Qs/YQx/frefCC8N
96uOi3hj7unWPltlIrR6qC+Tu+WNp0+U1k2rEuHA+/q9vUd8cKByco7rISJs
EV4RMd3gg4Vkgy/OHSZCasDLc95qvvjaZhsH32NEGN1T7umV74sVBQjEPxpE
cOm8/mZ2pR9uWDxyOAQRoWNjuuJPEz9s+Fl6xwptIjjf/LI/7rYfHn4tyB+p
w8t3/Zxo96wftu/9PrlWjwhaCa99m/f548X/Rp7EGRBB7ulbPn+2P46ubbuz
yYgItFGWu2ioP95WUpaRakyEFw6rFAuv+eOb11JDthOJ8FZ/VtagzB8fiQux
ziETgeh7tmxbjT/uCLUzkqUR4cHJrPXqd/wxw5OkWsQgQsL6o0+ab/rjSevj
W/exiVActdF4MNEf+zDllsq4RHA84NCa6+WPVxmte6d6jghD8/z2Osb+OEXz
Z2eNOU8/fbLcxx3+WF7ldfkxK56//O+C773zwzWyHcnNNkSwumRUMJrvh3XF
KgO07YlwV1an/CLDDw8IZJi1O/L0FjA+8pqnl+XvMD1DFyLcPPHKSvyWL577
7LD/iRsvH8vAl7b6vli078SvAW8iXCRfHhdy9ME32uRfM/2IYNtd6dT9zRsf
vLe+bTSACGvKvTd7uHtjUtZ4/PsQIkw1tKfRuF74TVyXt90FIiy3mppe1emJ
3cOqOZ8vEmFj3Z8X4UqeOMHm4p4f0UTwqelIG/7gjqVYzsJ+sUQIDPqxer+G
O64wos/9iSNCu+vsHu3LbrhHZe/9FclE+PtMxL5S3BUL/+mmi+YQ4VmVeQBt
rT3O/nL3RFoeEVZl6Gntc7bFSuPZshI3iODUfWl3fJc1PtPu+lW2mAhX13eu
EXe3wDHxopcOVhPh+obFkqObmXjNLk4N6SERgviJh2raFZD9NmR4q5O3PvP4
C7nCY6hrncwr/m4iLBv/b8XSl5Mo5ueHlXd7iKCxXHTj/kgCEu7woG4ZJkJW
UPLYrA0XOTfSPrqMECH0/qjjar1z6GnF0aCOV0R4NbU3rX/ADMWn/7vh95YI
D7362+jvLXn3octzL6eJ4M3WuSTVao/cTZ0j1b4SgdMzI39knyPqIxMlYmeJ
oKKk/jUtxgklaWzR0fxJhF7BxScbdriiH8qLz1MWiFAr2sh50+KKaLtGHb4u
EqF5S8qDPks3tEX4emLuPyJ0f9mUkXXNHfnyRez+tZwEEgW6NRqqHmjop20D
cQUJOjYvWxHV6oEyXiu95VtDghhd4wutQ55IorJe1UqEBFvbK9dpPPJGgQVZ
7U2iJPjx4KbZveM+aDQ9hCW2hQTp7kY66kU+KDtMN+zhdhK4KXudW3D2RUve
e8WkJEkgPiGRJfXIF5k6CJX4SpHghPtBroiMH5Ki9D7bu4sES4ptOnvu+6EQ
/btWYbtJkP+A6HRstT8a10j7NbyXBCsYD5W/6fsjbZWA2IOKJCh/mnTL4KI/
yt9lIh2jxNtPnNIRjUZ/xC+udfedMgna/GID2z/7I0thOYMTB0mg5PdOc2Jb
APqPb/Vo8iESUDKlEjIgAO2a/+j65TAJDkR9v/PWLABFfOpeoXeMBNbV3htb
gwLQxOvytBwNEozW81OOJwUgvf6riguaJLi6+QkQCgLQzQ6v+wQtElywin68
qjIACTQxKMUnSaBoSthhVRuA7CqPTy7XJcGDBvlz7vcCUFeBZCBLnwS/CucX
1O8EIIWM5RuqDXn5nHzBaCwJQNFX3l1fe4YEUr16y9ddC0Cfwh4etjxLgpmI
10lqkQHIyKfkUSORp/dpxm3kEoBKHWJNN1NI8GRGdOE4MQAJnXP97kQjwZmO
C3JHlAKQE4V8qZ1BgrPP/XpOrgpAT/TVt+9kk8BR+Vm+ywt/pHRiW7kPlwRF
9Ym7Hhf5o2pZu99850jwLtslKNfRHx0RrNO7Yk6CRkMPz9/7/FHTjEDSNisS
RCb1z82/90PazxljN2xIoPn5lVxlhh962HRTUdmeBH292zRPGvohoxsLvg2O
JHgxfSfl0Zwvormlbex14/HxriPl6HFf9JI+yeV6kmC64/py0+c+6JzmkZJJ
bxJICg+ILzr7IPu1Q9r/Anh+K+f8EE/wRucLtngqRpBg4yVJ/fkbnmhFjM39
2kgSqISk1VZLeaJo91qhk5dJ4Kp5IEUo3QMlIXoBM54EofTq7QdD3NHNFymD
ERkk2Fd87V2HoivqWSd2dLyMBB7lL00T9awRdc7qomMlT887/D9tflmi4eG7
z+arSWDsa85fXWyB3hVR7YXrSKBeI3Hl3yoztKCVnHm8lQT/fApEDwfQkbS3
6FLycxLwFforntohjwo5lobSwyQg7BOB9Lszmoon76SUjpBAe+/H3hN10lh9
A+VA6zgJIo7af5gjamDDksRzM59IMPzX3FvEmoCfxr8tDfhCgntFqU5380iY
4nPw16pZEoguj3K+0EvBJjp9CTt+kqDqBmfTm41M7P5KpNVwGRlev/mnsTv4
HO5o5zSV8JFhZ6DwGTO2GZYsL6wVXEkGQ8vXYrGq5rjr/LHSrjVkuOXk8fjw
EwssZRteqCBEBr5c2za/q5bYm/AkN1qYDGo7tM4fJFhhGWnzZMNNZDgrfVG8
sNYa+64pjSvZTIbVN7+oHjCzwU9mf0QJbiVDXg/pTA+/LfZviQrukiDDio42
7XVqdrinpM9XYScZhE5Il0U8sMPyiTs8oqXJ8PHASZU+PXv8zKLSxlCeDFPq
1gLVmg5Y3ui3WckeXrz1fByVcgccqHaKI7iPDI6RW8sYWx1xr0QczX4/GU7F
1t+U8XfEe1a+IHQdIMPcQkJadL8jDv4sc1pBlQza6047xe52wv0Djqei1ciQ
nEat3+vhhBWaa9CUOhlE16+uMq11wiGFy44ZHiXD8s3NUipzTnjwiqFayXEy
mF8+6J631xkr+iQpCWqSgf7l2/W7dGccZvpqjz2Q4dhjr8Oewc54SG+PbJc2
GbZQJgzeZzljJWX3HQqnePESl4eI1Djj8K2NW6L1yJD0I+3TqofOeHjZKpEp
AzIMj5L3PO1xxsofzwoZGpGBsVXyjF+fM454lr6qxJgMy8Ime0SfOuORurfL
BIlkICS4ZVS1OmPV/P2/7chkeFwgumBZ6Ywjo31+dFLJIHFB9zJKc8av3B98
3csgw/lHpUZ0X2esxl47FcUiQ467dWQL0RlHn6S++8ghw2iJysM0OWc8ti/n
lYEpGeSdSp5+m3HC6qIfh4rNyBDocLlkqsYJx/xR7VtjyfOv91VYprcTfvMu
8LGdNRk23Ve4Ia3shI88bn/YaUuGWT/3iIy3jvjK3Q0tex3IcDw37KZcgiN+
l8VqjHIiQ/7r4KDXRxxxvPOXCgN33vy5XzP2Pg54gnbkVrEnGYSvXLA9L+yA
NVBYwRofHo/19zKNcu3x5HqxjM4AMpTua9lx/Y4dhsoTFwwu8va7+qyXzQ0b
nJJ+Kaj4Ehk0LwwyLDbb4OnQZz5rosngplZ1xTjMGqeRrBw7r5Bho8z5wxk8
nr9+j6EapJHhfdfdi9Wt5nhkKI+WlcHzZ8le57AErz6aauiz18jgPf9SQtLd
DN+4NMZMzyODPZ8It0nsHGZtVzP5WMLT79Wj3e1xLNym/dI6qokMMykxFjkN
Z3DV7hmbUUyGN3akC3VthjhXaKWdSgsZbIW30N491cP+g0oOL9rJcGCj5ffv
E1pY2T7MZW8PGZ7GmxPpbXtwZsJe3843ZND3GzvqqQMo0lvTb8d7MlwkOZ81
mtVG3myyv9sHMlypPKM/lnQKEXYFBW6bJkOz7MwHvWZDpCl4NcjpCxku993Y
onDyDNr3tTD4wQwZhoyQ7fvGs2hVXU+I3Q8yyJ7P87+qS0JzWe9Dm+bJQDL/
OWrnRkbjYYthGxfJ0HB1rfFgMgU9sVkfbvWHDNasf/6F1VTUaCR3sW6Jxwuk
qNzqoqFilaMR65ZTYI/uhuO5I3SUImZ8yYyfAnqyeVp/pZko/Ld55N2VFDin
KJJPW89GbmM+UWsEKFC86UWlxDYTZNIWE80VpIBWkMLy7QwzZFSSd7lSiAKu
V6tZv3Mt0dG4mpiV6ynQc39Mdp2EHZL3fBTL3EiBZIeHViZ/nJEoc+zK7U0U
iHpwbWPyUQ+0XPNH3HIxCnCmnAQ+8c6XLzKCCdStFJhUMolfcAlCI6t3Xi0W
p8DPL6e53WvDUNf0wcS/EhSQtLC+OTJ7EdU+008i7qTAeXn21v2e0ehGDTe5
QJoCl4XuO+pei0NXM91TfslSQHfsxsqsuqvofMil1DPyFDhw2niyZ1kKcrS6
lpa3hwJXfgqt6ClKRyzDyvQfChT46n+jyKUqC+kdaM8w2E+BVrJFlpxIHmKs
0qf0HKDA1garqr7a68h+tHMdXZUC4X9X6GtlF6LAO6cfjqpRYNjxx0rth8Xo
yuXHIZaHKZBwd09biNptlGt+9tinoxRQzM5XwR4VqOros+9uGhTgIza0dLhW
ocEP/dbntSjQn7ptV/HzGjTZTJNapUMBr1Nci+9QhxaTh17E6FKgK/xnYvej
BrRDZ8Qo4zQFMoZlvH9m30eWuW9V71IpUE4P39pW2o68faymjzMoQBIuvBxi
2IEijT8UtLAowBz4di9zphOV/pna2mNKAel+aZkM4mP0nfFtacqOAiKR7ozP
sr0obOPyR1LBFJjwdA6RWvECJU2GhReFUMDnIP/RT70vUCFeoal0gQJr9m1d
PXZtGHU5CVQej+T57ax7WlRqBI3oRNu3RFPgyKKxtNbQCPqyXUjOIJYCm2/r
/fGIGkUbu9an0q7y/K3eIPW9/xWSyUsgjCZRgEFN8iM4v0ZqvpsELVMpIHdM
WOf50mukeza5dSqdApZMd/kNJ8cQQ35LkNs1Cmz41btsInQM2f9NU1/IpkBq
/ljog4YxFNgvPhOcRwFHjU5GwMwYunLrWvHKGxSo2hzxbGbnOMoNk7SIKaTA
oV5Yu8JwHFUxcyU2FVOghm4pf815HP2nLDOYfosCfQQZu4LYcTS4+kacVBkF
pD53MDcWjaPJV7sMiioo8DeW+WSwfhwt3i3iU6qmwO+wZbOzHeNIKHZv4527
FJg/pX7U8tk4krS85XX8HgXE5xOZav3j6MDx/Qda6nn1Itss48x7DiLlk/pN
FBh0orJlOscR6aNy/lNMgSe5jbHWDePI8n4Vm9ZCgdy9b7spN8eRd6ra5tH/
KPAgUtN1bfw4inSueWLxkAIPr9l2lLqPo4xTRyKnOnm8faE/NiGMo1KJei23
bgrEhNg/NNw7jpq/H/89/4QCQzt85679HUN53bXm5GcUKNo+Y/i6ZwyFFxzs
Kuvj+Yk3jbnmjiED+r50qyEK5By81LH70BhSVC5a9mCYAien7YJO/XiNhNfI
2kqMUsBQtt/lgP9r1F8vfrhvnALP77W5aXu8QrWJKdlK73j19eCf647JUZTh
KLIqeoIC+z7wXzzLGEWmkoID8IkC0xd+rxRTHEFTob/cy+Z49dod8ce85AV6
zPIaXjPP0+erFUeV/wWqODirZfWLAjs2b+B7xxxCXu8nN0gs8Xh9S2hcxfcc
LTMYKotaTQWTjR4tFJ1+JLahdspSnAq166Mmm84/Rr8mVUn3JajwS2buSJBs
Nxp5UFa3fScVhN9fcj3U2YXyPAoje2Wp8NPPvMlpewdSfJ4sD/upcOOBqojG
WAvSzvY03w5UaCjcWbhqSxXa5TPT6a1NBfngHxOvI8uRAMFRpVeHCo5pWyQO
z5Wgx8stl0UZUCH2zOOJ5L+8fmJFzv5JokK0ndqr53ocdFzz6UoSlQoGq/dP
/m7ww5JbTjvdplOB5p7rKf47Br/t0Naw5FCh2jIY6SlkY2dF1eFnVlRYcbbD
ZeTlbew1L75oakuF939VOiL7KnBgC7/4F3sqfFy+29n5dhW+zBhgCrpSgX8w
uP7uiRp8VbbZL82dCpv7bm378L0WZ3wpTJf3ooLadNJm/uw6fDPc94W2PxWm
jY7dK3jciMvPmv3qCaTCpm6d+yvIzbhG3HCb6XkqULfcJP97hHFbxXZmQDgV
tjnddzpp9AC/GWkeqr5ChR+ntulpPG7FH4uKFrQSqLDmk8n3PO5/eMY9fmtP
IhXCi1x6bn34D/8TMGdMp/Hi+fwXXTLZhlf1G/r6Z/L2+ys9Oc+0HQvnHEwT
yKYCZ0UiaPW0Y4lDK4fkrlMhsyi4Mib7IZZd9mW+qoAKoqtsJnX+PMQKjwa3
aN3k+XOvuayZ3IFVU/DhpyVU0DVPLOUv6MBHzW7SubepMBsdNSs504FBMcHn
UzkVOlaS5iUOdWL9eb9UvyoqiLv35K/17MRnW8xrV9+lQrrp25OLpZ2YFnv6
eXItFeY6Xyf+et2JuQy1edl6KjBl26q2r+vClrI7tlQ1UqFUU0bWU60LO35Z
eRgwFaQkHvy3hdaFPeq+0J48oEKjpsQTCfcu7B/+3JvzHxVUPyb/lxHZhcPO
3k+ZaqfCM+Esj5L0LhwlXlzj28l7f+HtG6uCLhz/PmFwVTcVnKKOnZ681YVT
K/x/Jj2hwpH+C4LGt7twdoCFmOwznl9E+dQ7xV24UNdIvbKPChdLe9yP5XXh
2xsP0dAgFdb6b5P4l9iF74zs8H48RIUNZrR/MmFduLFoVQr7JY8XgqPNQ4cu
3Or+9e7HUSqYv+Z3FiZ24a4TQwM+Y1Sw/qT8SVy1Cz8TePBj5VsqXGKusdqw
vgsP9RVvTnpPBU3tySWRyU48ln31kMwkFR6qxtnqNXXiD3YB1IopKhgd1Hrc
e6UTf1Gz9NL8TIXWvbMtw5xO/POfUXL3Vyr8Yboevbi7E69IkRyYnKOCF97Y
zqruwGvNVv/wnqdCcX7ZZK9nBxZRnBFduUiFwSuEi5cOdmCplgcU6X9USN20
XUKr+CE+8cWyn7mGBtsSFX/v92/HYg16+Y1raWAd8u6t9IF2/OWSgutOYRpw
V254dPdNG86Wnln7XoQGafzm6uq6bXiJEnDSVYIGooszr3uX/4dxQ0JVxAEa
tAs6aE1aPMBpkZ4hH1VocNco/67ihgfYlUo3NlKjwTOtLWYtjfex1FeJqY1H
abDSKsb/+Jb7OETmpnSWNg3spEv+8yhqwlpRzfHVVBokdWj0iM7fw+K0PBMx
Bm+9k+dtWY738DeZcEU/Fg3M9gUeDn9Xi/MbDTo0TWnwyvjol8nRGuwfpZiS
Z8aL9y3yM8m0BpNo6y1XWNKg4Gs35d/bu5hvpv9fpy0N5qctXrjM38HDjbWP
FR1oIOd/WJoZcQdXRWVkxjnRwNkwde/TrXewuey5w1R3Ghw0HHHM1q/Gx2a0
V97zpIGr8YedmyaqsEjTrj5xH16+9dcjT1+qwq20T85jATSYdljmpDJQia/J
PtE4GUyDa4d/LM6EVmLPmQrBwhDeeueO26WpVmKjpsQhgQs0WCv78sP+DxVY
Ltq70OEiDXTUnkfW5FTgPzSm55NLNKjKcjypzqnA/bIa2irRNOg93DlfLlGB
w5uWv/p5hQbH9/wZVSKXY070u1vMBJ6fpd+Pr50uw2r0h36NiTSQALczozFl
WEiuRG9nCg1+eW1n5h4qw+9mYjaHpdHg5eD2gjMTt3Fjk8vbdxk0SLmYen4k
+zZOiiZV6mXR4Maot5626W3sSD90viSHxut/DC/33bfxKbmtZ9bl0yB4MPGG
yXwpvvO5TdryBg3c27tyyp6WYrlaj5/1hTQwr/U8eKa8FCeFSD/aWMzLb2lH
9+6UUrzC8GmO7S0afHP8DArhpdhzU5Anvk2DoA0hI5p+pfjtiIKBWAUNLkVa
Wht7lWJS4dAOpyoa/NFqVATfUtziEvGt9Q4Nwkd+rFsMLcWqR9Ueitfy3qfG
hp27Worz+N5kutXRYD9dsohWXIo3dMe5djTQgJS0Vbe5vRSHJJ84tbOZBhtf
r3zrM1WKZ0w+bfO+TwOhdWdbzUVvY9M96V+6W3h+yT5b5Ojcxk9mdVtl22jw
9Huv50n/21izYS7V/yFPzysZ/2bv3sZl4fmOzzppAK7n6Sfnb+MdxgStPd00
uPLng/JGzTL8Z+zW1EAPDbq+VTDDX5ZhxxImVuzj+SldRhxSKccvPVYnXRig
QZFgxcFVseW4fpXFCZVhGhT+XD+Zt6cCK/RsEIkc4fmzZu/oXx4P6enNE69e
0aDkuw6fS2IF9lUUj495SwObKLrToVWVWJ307M2HaRocMAgtaF1WhQu3n6/V
/EqDY985NI2TVXjze8WY5FkaiFRlrVrH43fOJ/LQyZ80ULHoolJEqjHvChCZ
/Y8G2317nB+q3cEHPt7eTxWhQ/2J9WFpiTU4u4rNVypKB4kdqcp8YzVYOHDN
c74tdLjg+Nr5uGIt/iJsFVKxnQ62l59FNrfW4lI1ib61u+hgfDltw4Xpe1hi
qbPIfDcdrlYW4bdqdfjyQ5/Aur10WNoos8s0sA7bs/p22SjRgWViM0EUqMd7
QqJ9Ww7T4YGT8eHZjQ248XjBSqNjdLDe1330IK0BE+bx1QENOtCfTLaUpjVg
X+cfpZNadJA9uaft85ZGLKSw4Zi7Dh3Uhh0eRVMace57hYe/demQ9svMQTCu
EXdwzo0LG9HhJKqYtfzbiDlbA5zTjOmQuE724naVJjzTl/xbmkiHgpJQSUfz
JhweVxF5i0yHjac18nUTmvDW0482H6LRwXwt7XFmUxMuXTWR38ygwwYby6Pc
D00YWpYp67PpcHbgGitIuBnbHlU3ZJ+jg9Qj1YUiSjP+M0d4/s6cDk+EYv7L
9GjG8RUOls5WdPixx2bmflwzlnOMmJ23oYNchTVbuLgZ39udFxxqTwf37tD+
ANyMjd42rF3rxItX8W4NX18z77wZTEtyocOp5y4pGW+bsSdrdpekOx2CbkvN
o9lmLCAmVF3kSYd8sbqEz7+b8bVn8qDiQwddyo7KHH6MlWO1Htf70UHwuUwo
WQDj//Q5LJ1AOuhfsBNbLYgxY4XPh8fBdPCXf8et4z2fxgme9FA69HdhRfsV
GIcElC4fv0CHohK7feJ/m7Ho4YdX7CPoMJip+a7rWzMu/ja+fS6SDunRxKrg
981Ys+zPzaDLPD6UPnYcGWjGvXZb1FdfocPKfQIKfx80Y+tdqq3x8XS47DZz
vedWM14cMyKIJ9Jh/Dfp2b2rzfjKNZvR68l0oG4PE2r0bsYyjDD7/Wl0kL8a
5jNO532vbcqar8mgg8645kdl9WZs+LQ2HLJ4+pO481Ubm/Gr6N6NXTl0iJqY
G3edasLuup+zyfl0UHC6lud5vwlnNMnUWRfRobmSXexr2YSV/E7ozhTT4V7I
bZF41Sbcosbo8yulg8nitP/2pUY8dSv2c0wlHcI+DC9rjW3EwTY3/cXu0EFz
wKFnkdiIRWRbV+fW0OFZxujC6KZGfCxjQbq6gQ6SA0jtbXwDjo60oL1o4+Wz
ckv1Lbd6LKkT/Na8gw6Ov+3l/8rV46p/aa7TXXTo/tGpGzxYh4e9n0T/e0oH
jhSfBoNXTwpWR/GuYTo4P9iW6zVai+NkjBcvjPD8tzi71SC6Fs+9Nj/05hUd
Qh8cSRVUr8XNrJhb2W/psDNpwTc1mnd+El6nbvnMq5cPF7oy9t7Ffscvuq5Z
xoAqVkq+yZkq/Goh/ZYNHwPueb7UTZupxNo1ZRNtKxiwTG3YBidWYiGVIU7Y
GgZ8MqTGbhquwLny+wx+izBAs8/n2WxPGe7Y+Ez68y4GvNpmR0xSKcb7n77n
nN7DAJFBo60WF27iqzGLqcUKDHjecT2ve7AIc1bLCVsf4MU/HHXhaVgh/vrH
e/HVEQZ8JXw9ufHbdUypv3zoxHEGtJ6uylEnX8f3fHJdM08woKJvIqewJh+H
feucoGszQJ5ZNFQVnofFJiX6ek4zQF3Y7dLL4GwcUKAifMCYAVO+EkGNdll4
zFzXIJbAAMM2jXQt1jVcMuqCDagM+JPfP1VglIE1+1putZgwQPDRVnqkXwq+
Hv98QsqMAS9Xvvc/lZSMBYynpc9bMOD78FAc924S7u3YnHbclgEFi/d+vxJM
xFbNtuF33BjQKXBVKWNFPP7iNOVzypMBq3Y+m2JEX8G+OxwdBr0ZMNPOF3Fy
eyyODnQhLQQwwFWe6pnuGI1FFWdPRQUzwOSpjb/I/iic9dL9qHgoAwxGiEuO
fy/himPeUhoRDGDdH3e49/giPjY1v+lxJANGVrzjT38cjlvT/VabXOaNhegJ
x0YvYCOD34tfYhng1sk3fPlPGB5cCPxyPp7n10jhDt99YfjczaXxDYkMGO84
sOWDXSj+SA8ZyEvmrb8jTbypNgS7r+brVE1jwIHdYxtfiobgPzUXGlszGFDE
1D92gu88jrBeWUHJYsC/JTGF/xaC8HqxS9ff5zCA1Cqg/0soCKe1CaR65zPg
9fDWknDNQCzjFR29uoABplnbdARiA/AtOaHgtCIGbL4ZIym14I/V+mPd9pbw
xsc7LczP++PmC+ut6ksZsP/c0nVTGX+sdzCBcbqc54/+yHj+mB/ueSNiNFLJ
gMA4q77KOj/MupqEnO4wYE664o/QbT/8Vkvs4FINA66c+DB+oN4PO86mysfV
MUAhIUA9gTf/Z+42calG3nztM//yd/rj84TMdZXNDPDPDnnW6+2PBZbtWK79
gAHK5u6fo97746vl2XO9rTx/Lt8J3e8QgCVMpSYt2hlQH3ymS3J1IC4Qzn85
18EA57/oTMO9QKzULPv04iMGCKUmreSeD8L3nApaxJ4wIIG5PpnFCsZaO3bX
FPXweF8tErDa4Dzu6r5ZfKSPAe+STu9k7QrBo/tK41lDDGCInfojpR2KrV/u
D/80zIB9T93D2aOheCa63CdwlAHB4rcMSkLCMN9UlUn2GwZkOZ8+uO7VBbzn
Zp3im2kGrNUvvub3MQJX0Y9LeXzl1cvzU5Vf6i/h46ubNq34xoDjQjU7fRMi
sbH1/cVd8wzgLuwvAaNo7Cn3sMNuORNMleUNf3yOxTi333J2MxO8Wh1I5e1X
8ZiRtKn3Viboa3KtZVAiXvbLiflbnAn1f2s27qtNxNrE1cYrpZiQFaw2SytI
wu3Ljx3epsCEBctXOyu9UvCH2xEq2YpMoOft9LeaSMECrL59sgeY8LVgY6En
NRUbVDlK7VdjAsFKqVJUKQ13m+es0dJk8vqLzY6CtnT8WXiavx2YEHU3YKfn
rgws3HBkyfAkE5pWXviZGpaBCZt6v1H0mfCjGJU6qWViNyz5+YUhE6qeyL74
GJmJrzo4fDA5wwRV1wspZ4czcV/rihFbEhNUrrrJ+Hpcw3MuxMHPFCbIqVf/
WNdwDYtKZPe405kg/5hEPPjvGj7UMdU1z2TCWYZpRD/KwjTPw22BHCZYydzh
ex2YhX2kwvFyUybkOFixtGqycFp3T12EGRPGOFTDT5+y8LCcfVm8NRMuG5lV
DJ/Oxr97am5utmNC7DIHx5Xe2VgiiP96hgMTAvPpZO1r2VhjLyFrpzMT+L7M
fI1ozsbcgWupN1yZ8E9F+V/nSDYODv2YsNeDCXVFalb889k4e796TJkXE8o+
+e1XXJeD8YuwiIO+TFCuKkrQ3JmDxy4+DbnnzwQjjd+fDu3PwctVJQJOBDFB
pv5Ei/DhHCzzytar5TwTnG2i69o1cvDJ6LsuemFMmA48n8nRzMGW6nz23eFM
6Pm9jdhzPAdffGNsSbzEhHBJgxGZQzm48EqmyWAUE/jdck1pCjm4/dgkgx3D
00Opd63z9hz8YUKNPHaFCVMCRfucBXKwQGLoGasEJnzQYG/mzGbjPeiJ3lQi
T88byQqag9nY4JO4tksKz/88y+fba7OxfaqNxlwaE3aMhl/8m5iNL5+8o+6X
yYTPYquuTztm49Kvy1SWsnj6iHxM+K6Vjb/oZewSuM4EUv+loz5jWXj93MTO
2AImXOXE26wrycLKuQfFRW7y9F11mPnFJQu7LXQLS9zm+T/CL/Z45hq+emPb
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
       "]]}}, {}, {}}, 
   GeometricTransformationBox[{{{}, {}, 
      {RGBColor[0.881, 0.611, 0.142], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwU13c8lV8YAHB7Zd5rr6zIzJZ5H3tzl1nhJ5RNSUuSUpKVtjIqK5VokKj3
DVmVrCKEUElGRnb8Tn/dz/fzue/7nvM8z3nOObL+kdRAJgYGBh1WBoZ/v4uD
LQ0KFxrMnDaa9VjHGky6c0WPmvfeIU1filoo+FlvAkIf/EV7H5McHeI9Oqbq
TGLJpT3MvXWkqzm/O+dncROBaZGslZ5O0vRBGa7Kj9UmQ7UukQs9I6Rs38VE
uYY7JtlCIgEHWcdIBmeNN77a5pjQI4Y857S/kZ41juQnMl0xad0aZfE77Qfp
+fOMtE+Hok0qEy8KTVpOkkQlU1Ipljm1NgoTX2Z75ki1Z+1eOPtX1RaQXTwr
IuZJXftOZ3o7V9cynnjcGcW6QBK1N/j6Rq+mtvbjsaYZ7T+knLVEmSUmrFbr
3JaKqbQlksuD813XaPW16U8iVR8qLJNOF0h8iHNoqJ0c6ioMq1kmdSfQrihZ
vKkt2nkr+9f4Cinf7Bz/Y62mWskJtTM/LddJ6+vHdghPt9aeUSy+PxfHAEdv
3muMtmqvXekxuPK7hwnM9n0tZkvuqH2uzeFXrMwM6b75h61yOmpj03pVfI4z
A/8t1kvKjzpq5yyO4m+lWUCjWu/Wt7cdtRMPX/wqCmQF0Y6M9xN/O2oHTpta
7Jlnh112vedY33bW4jssZ1p4eYDb52VKT9DH2nrL4oKOO0QwuNpS+la/q1Yz
/dHPpWYiWLA+v5aq1VWb21ulIT1DhPMJ6oe3qHXVbpHHD1oJCYLJwIu30/2R
r46ENz8PMRaE+RC3Z28PPnv1var9b+Z/gkDs1775+GzPKxrTZ4uqc4Kga3zL
Qsxj5hXu9PXcl4eCoKn0ezPDgQHTuPbzHXO3IIyezzmxdQcPduvrrIDKqiCQ
AtiHTpaIYJxqq+5kGSE4rukUSO6TxWJjmW7F2giB7E0V5fKzytgYzvX1VpgQ
ZF4fiV46oYVRtxAV67OEoJ6FFseqaoBhbhKhP58LgZgrI9t6tymmli9fzjck
BNGChB/Ory2w7AnVP3qswuCjWyDoL2GLcejpGu1WFYYAr+ANqWVH7NBJk5OJ
FGF44T8+vauUjJEFnTk/5AhDOW1Z/FKNO/bSx83lT70wmFn92Pwj5I2p3Ntz
SWJCGAS2fHuhkLcHYzWLkNqvLwLy1bt2pWX4YweSY/3Td4vAuNPb7OunArDh
zvjip4kioGhW6UI5EoS92JehxfhBBCT0kv6meIVg2x9fi1X6IwLnuFfM5fXC
sCvreTXOEqJgU6aa6rIUjjHZljDEmItCpM0rhdVLkVjUxXLr7H2iUMw8FpEY
H4UN9j9PwdNEweFWUPsXgWjMUfH1h+9PROGuzuHC6Lho7HlUiyBPnyh8S3Lc
/V9lNKZY0+GlwyAGnSEX+a9WRWOXWPtyvRTFYPb88/y6w9EYA3lk9KSTGPiu
HeTcPx2FRWRPbC86IAYHdqay9xGisP6xufB318Vg539leeeeh2N2O9Yez70S
A4MD9nu8TodglUeZl0W/icHjYv4zKweDMPmGLaakLeJw5UZUFvOR/7BMXsHE
QC1x2B1Dv9u+4o5teEo2XfAQB5u6Vy+GMHMs9K4C9+MT4vC0MA7P4TYj9U6p
UXrvikNowY3DYm7eJJudelc3WsQhEhjyG7/sIz1NNO1X+C0Of/DYVtalaJLs
e2sZR2EJYK6w6OWoOkJKF3EJjDaRgEurmhsSkgmk9f/cS6/5S0DT8nDPmPkZ
UvADn5mXyRLweMvFubCOZNKnxSDdsTIJWFpmt9D+kEaquHD4leaaBLzfMv45
6dJlkvSnk8wespKQ7ex+8nPDNVKqTLLdCVtJOJLraDygd5O0EpKZdjdcEmoZ
Q4syx3NJQc+ud7ZckoR4xl9lMZG3Sd2b+SK/qyXh/vjc2N60uyRzh3u7hYcl
wfIC29G/bYUkyaHq7/5qUsBR6X7qFl5KYpiPvt5CkYLnc3njHgEPSWNsKg6a
h6Ug0DfpRJVwOemhRvbDv6+l4GX9qIGc2BNSlgXVN+CHFFSu6YVer3pKinXn
EnjLLQ1flHtUJ4IrSWbxx2Kue0hD2EPzCJ4tL0hyWdqKm3HSoLlC17RZrSGx
FU30BN6RBpszQ33bN16S2t57G+tMSUPkw6RBI7nXJF8pY6a2xK0gThMfbv7+
hmSlNf9Et2QrbCtiVnfTbiJtt74fePP9Vvj5Mr81IrmZdKQyLUCXWwZ2Jd+Z
VKW/JcHg3yZGDxkI8wo9r/60naQ9/lnmWbAMGEYZ/XfsdAdJYe7Z0f1xMtB7
oO3FW49OEgdbhOqH2zJQoNd+y4Kvm9ShPph+a1IG2Gbkjz+p6iE1GLz44bop
A/Oc38N8H/aSKs2vAjNBFhb/k/mSWPyZlO3mMhdsIAsF/l3kzyX9JP8Tr9wM
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
9T/1Yphj
        "]]}}, {}, {}}, {{{1., 0.}, {0., 0.17453292519943292`}}, {
     0., -2.220446049250313*^-16}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->False,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{
    FormBox["\"Time (s)\"", TraditionalForm], 
    FormBox["\"Angle of head \[Theta] (rad)\"", TraditionalForm], 
    FormBox["\"Plot of \[Theta] and x vs time\"", TraditionalForm], 
    FormBox["\"Position of cylinder x (m)\"", TraditionalForm]},
  FrameStyle->{{
     RGBColor[0.368, 0.507, 0.71], 
     RGBColor[0.881, 0.611, 0.142]}, {Automatic, Automatic}},
  FrameTicks->{{{{
       NCache[Rational[-1, 3] Pi, -1.0471975511965976`], 
       FormBox[
        RowBox[{"-", 
          FractionBox["\[Pi]", "3"]}], TraditionalForm]}, {
       NCache[Rational[-1, 6] Pi, -0.5235987755982988], 
       FormBox[
        RowBox[{"-", 
          FractionBox["\[Pi]", "6"]}], TraditionalForm]}, {0, 
       FormBox["0", TraditionalForm]}, {
       NCache[Rational[1, 6] Pi, 0.5235987755982988], 
       FormBox[
        FractionBox["\[Pi]", "6"], TraditionalForm]}, {
       NCache[Rational[1, 3] Pi, 1.0471975511965976`], 
       FormBox[
        FractionBox["\[Pi]", "3"], TraditionalForm]}}, {{
       NCache[Rational[-1, 3] Pi, -1.0471975511965976`], 
       FormBox[
       "\"\\!\\(\\*TagBox[InterpretationBox[\\\"\\\\\\\"-6.\\\\\\\"\\\", \
-6.`, Rule[AutoDelete, True]], Function[NumberForm[Slot[1], 2]]]\\)\"", 
        TraditionalForm]}, {
       NCache[Rational[-1, 6] Pi, -0.5235987755982988], 
       FormBox[
       "\"\\!\\(\\*TagBox[InterpretationBox[\\\"\\\\\\\"-3.\\\\\\\"\\\", \
-3.`, Rule[AutoDelete, True]], Function[NumberForm[Slot[1], 2]]]\\)\"", 
        TraditionalForm]}, {0, 
       FormBox[
       "\"\\!\\(\\*TagBox[InterpretationBox[\\\"\\\\\\\"0.\\\\\\\"\\\", 0.`, \
Rule[AutoDelete, True]], Function[NumberForm[Slot[1], 2]]]\\)\"", 
        TraditionalForm]}, {
       NCache[Rational[1, 6] Pi, 0.5235987755982988], 
       FormBox[
       "\"\\!\\(\\*TagBox[InterpretationBox[\\\"\\\\\\\"3.\\\\\\\"\\\", 3.`, \
Rule[AutoDelete, True]], Function[NumberForm[Slot[1], 2]]]\\)\"", 
        TraditionalForm]}, {
       NCache[Rational[1, 3] Pi, 1.0471975511965976`], 
       FormBox[
       "\"\\!\\(\\*TagBox[InterpretationBox[\\\"\\\\\\\"6.\\\\\\\"\\\", 6.`, \
Rule[AutoDelete, True]], Function[NumberForm[Slot[1], 2]]]\\)\"", 
        TraditionalForm]}}}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{224.59999999999152`, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 120}, {Rational[-1, 3] Pi, Rational[1, 3] Pi}}, {{0, 
     120}, {-1.0471975511965976`, 1.0471975511965976`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    FractionBox["180", "\[Pi]"], "*", 
    RowBox[{
     RowBox[{"sol", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", "t", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwVl3c8Vf8fx40oZJ977Xsu1wr5JqOMcz9vDQ2KiApZRUJkRSVEIgopGRnZ
opBSEZK9Z2UmMkKUSFnld39/ncfzcc77vN/v13ucz5G0czO2Z2FiYopmZmL6
/zXZ345d5WwE3fywruzVaPaKzYNf5ObwUpQNBPaXhb0irTnV/RvehBzPyYfV
p2yq6CxcZ5H70YHoV3J0lkJZKwKalQ6rWPcgvQiypZYuS0Uz6w1lJsEP6Epf
F90znLmCTAwKdNR/RP9pjai+qGWqKCi8NeiiPICSOzMpnti/8pim2w7mdYPI
zXOXA2G8Xn5pLOrnActPSFrLvJI/cLU8laslmH//CIr/bMNiV/a7/G68waEw
vlE0q7i0mN30qzxYpp1nY3AU+SbkiEh3LJSfQ10Jsx5jaK7oLDg5zZU3NjlQ
Hn8cQwJk/eOCpt/K5Y+vp9trjSPPpk9vWXdNl085yj0ZZp5Aiz2PTrIPj5c7
xVyr7IyeRGZ9IjtWDHvLXSe2jb0omEYst0qM5nm6dTglb8h93j2P6ni3s7l8
WNeJ5GtRSLNZRMo14Vv6ercQU4csr3G3L6IQAbfXyTqcxN7guY7L2r9QlnVm
lkYWF7G8xOttTF5C5qG6kvlhPITd4PG3rK2/0dqLxrgUGwEis69M1X3XH1SP
hB+G7xQkJj9Qc4fT/6DhBZpfJCdGOHXORpdeXkaH3A7txlpJhHvdDTs3uVXE
TpLEUq+LEP1lsYGZEaso5uJeTyY7UUK3KDul/8cqQnsHvTJBjOB/2Diw9/Ua
MjbbNT+7KE5cju5f9hVfR8qdyqMe9RLEaMgMuSBwHV0290haj6EQzy5uNRE+
9BcN37w0eY2LSpgJBDx3kvqHzqIeoYAWKrH6/Kdgxdo/FKRTrMB5SZJIMT3r
xfthAx37UtMSyyFFpF11ntlxggmW5G84O4dIETHcaikCUswwKOyUVLOdRgSl
rh/7NcsMJu47f/CG0wijHa/dFReZoegPx+32CBpBeed5126FGe5kFPRfu0Mj
yr7MdHaysYDHHrWVgmgasSDTb/iUwgIVA1GeVg9ohN2TkiMORixwJpzHeWsq
jdAtdT3U95wFdlINFAOzaQRTzwiUX2EFq8i+SbVYGnEvI8MyzHgT/BPpEMg6
QyNkvRx8jyuwQS/12AmNbTSCTT3ga+EiG1yJGjhu/U+KGF+KM+OqYIfYAtZT
u75LEXEXmGeOxm0Giaq7EVfZacThCadrMe5bQGr0fgTzURrROn7teN8BDkAK
whwfymjE0fFoRQqFE2TujwmLaUoT4u9XTBcnOCHm4n7h5DRpYqbGLrDxKRdc
jc4ND5uRJm47iXeE3NwK9bc0XUu5ZAhl/o8Se6254bH11F+jZYZ97sTbqG08
YDydE8X0SprgREu2Q4s8MCgTabagL0203jaV5+/gBe3Ul9+OFtGIA3Pmf6RM
+WDgVNXxtiUp4ondp9L5cD4wnk3e8iBGiuDrs/arrOIDHn6ReUMlKaKv+iyz
uRI/8G1N/e1qKUnUZ2E7KqL5oVK6NCckhUqUhNVaUZf4wZX2or6hDyd4GpJS
/9gKgOLFZVHCn0I4sHmPtLcLwMZvlydzJhLEuPZy8wU1QThUcKuK+Zw4ccbj
asnWREHYVtnLxhYnRjxwy3kz1CII9rettMPUxYgml553T/4KgsbhPU4XukWJ
JCWN6iYmDK5VRy2wxinRL87GV0+yYlBvMXRgySCevvfJWjXrZgzWVRdNyvKr
6GQXqxoqJwbZ0nTx17599GnFdzUENwbpxu6Fvydn6OXfaLXmfBhYXdJney+y
Qo/Kv1nrI4gBc4rIwBAfG7Jznq69T8bg3U2BcBd7PqSuaFD3TAQD9vf388Uo
wmjLt4K6dnEMnizUq+5doaKhPP76bzgGlRc5tiXxy6FCJ6/6LTQMvGpNBnx9
lVGQQm+9jCwGMsZJG9+yVZHZjGbDnm0Y9LRPXtzRvxtty0tqsFbCQPNFdvr4
FzpaP7/R4PcfBgGlh+22zuxBHdvsGhN2YhB93ZLXclgPpU/XNr5Ux0CroCvM
xEwfXXos19SzmxF/gJvYDyUjdOh8eNO8NgYPOWh8nsvGSHzbXBM3wmCQc1ow
h98MzU8ZNivsweBTiGCxn98pVJNb3HxgPwa8bUoHhnVOoweOpJazBzHI4lqe
N8+3QeflfVuu62Og/fp9zu9JO6QzNdCSchSD7WfwcTUTe8SbS7S+OYbB/vBn
39gXzqEv5x619h3HwKbUasayzgmVyLG2LZ3A4M3ukU8yHRdQ2Ff7NgELDCRY
A3/mhF1E/51TbDewxUDsaYuZNs0LDZ/H3Z6exWCjWF1SXv8Suu0iyMfjiEHQ
l+rloXhfpOW2+ZmrMwaNyW3F0dxX0bT72rEOVwxWAtkuX867huK9fiz854HB
Kf79Bx12ByI9n7F70d4M+/dm0p+LrqMMv5YPx/wwCEm8elBm/AYyDnh7qTiA
ocebP8+kH91ETEHPhQSDMWhvWSjo9QxDp0Mfnnp/CwPiSEH9q7O30dbwqFW1
Oxgsb+L0FAyORGW3gx/GRjPqoWf5/e3paCQU4/zJLA6DPCaRNPfKGFR/39r/
VSIGXZTqzCDW+8grzgQXTmHY3+PgaTCLRV1J2rb9mRjE8VqHC2yLR4Gp/7Fo
5WJwdHeP+dPcBKScTstIzMegbLfcloxdD1FEDteERTGjP2z8ybU3UpBW3kZI
eQkGSe7UV1WSj9DUk0VZiVIMdPtZ6qw40tD+4kHH4bcYvDw8fXf6ZzraKM+f
tWnDQGS/Q7+8Ug4qeJt6510nBge6Sb/cj+Uiy+p7ylLvMbDumlsTDnyMShuu
XhwbwIDD5lI+92o+8uzW/2U/hYFlXYKjanERkvqAYuu/YTCVOnZXy+UZ6uxV
1ZD7gUFYWqaln2Ix2v5JzHdqCQP5Ch2PX6XP0dev39acWEnQfuTSvvvCr9CD
mc9JLewkEOXyjzz67xXaN9dDKHGSIKbf80bL9GuUtvAmYI6PBC/bMg4adZch
i78RrBcpJNBRjhs2/VaJOJkCMzslSRAf8+/8VaYq9JrFa7+KDAl8jia7uEVW
IdIWy9AFRRL0PsuK+fL8HeoQUOLy1iSBYaKLfq9MLaJfuDD9UIcEv22z3oe9
rUUFDQUN1YgEfmL2r7db1qFIP5UbfHokWJBt0XdOqUcGkxp/841J0PrhHN3x
QBMqB9/BblMSMLmHhJxbaUJKD0tLV06SQI7rx+Y7Bc2Iy0jn0gFrEugdKWg9
I9WKmkt1f3xxJsHOL3/0vu/oQFpYcBuHGwneKGyJaVvvQHmutfk7PEgwy12g
z+LQiW7RDjj6+zKePy9JOqTVhQ7eMRgVCSEBh7L3Eac/3ajO5kSPUQoJJjK7
cx8wzl1qb+Kf+aSRQOEll2v+wV6USRqISskkgeBa3eWHrb3oRrOlwWweCeqP
jw0JD/ShPWp2daGvSNAVPHq1j2sQVW2+8Kqyk6Hn6oLZ59bPaIddQexEDwnO
5SSd+6sxgh6V//Dc2ksCYZeDpKiwERTg7rHD/BMJ3rfaZdcojyL6oM/jpWkS
fP8Lm+JCv6A3BUEPlVjJIDPMrsvtMoHYDUxF49jJ0OzQXln4YQIdm5ZLYOZk
cLHfniSYRF9pbQ8+8pFhaqqj+pToVySYIBQTSCHDdNtd7nufppBz8JOw95pk
SB4veWKROYteUgM2I4IMXAJ/081pc4i58tjNx0CGN3u/WpRnzKG45d/B/gfI
gHfuYi7I/Y5qLugGyJuSwa/mSmSp7TwSO/nR2+8iw3/lvPxYygJyWMr9NelJ
Bps8tqCO6QX0LOaq5zEfMli03U/3VV9EB9qo7rL+ZJg1L/jJ2rGIPPc4u3RG
kGHjvu4Dfq4l1KLEdEY6hwxfY0naSTl/0FVmBaPWT2QIMCfWP1z6iyb3cfXJ
jpLh8Zvgorq+v8gobNb6+jgZKKrkAH/tf0iat9BN4xsZhi/eDT3CuoFaxdWi
Hi0zOGnf3K6jTEDZTW/3EhQCN6pZ4sNVZqh2NTaQOCQEnVSfPULpbKBUrPre
x0AI3nbGCYmNsMGDJcyy21AIbP+G8URQ2MHZr9c51EwION4IaRQlsQMWbhnx
84wQuCf8wUkpm8Ehy6G5zl8I0v5cvOxdwgGcQ1cOur4Qglx/EOvfxQMaPo+5
o14JgYpOvd8jfx6wFejrLiwTgtGVhPnmOh54fVD99M8qIZC81hpxyJQXHEp+
uHu1CcE6R727rw4fvIs8+/DKpBDMCvfUB57nB1/do99vCgtDFSVM7vS0IExk
S95P9RMGo2YfnzRfEZi9MbrCGigMlDDN4uV8EViwS7N2DBaGtZZw6eufRYAJ
l1RUCReGI/Jz0dIHREE0jlpdHScM3wPqnj4VFgOjUHx+oliYcR7byRpeKw7l
5yQMlKaF4eM4NvKaQoX78iKbSk1FAHUf0+DspkF0okODLVUUlGVOisWaKIL5
/dPtW7+KQnNbBsF7UwWW92WtpFaKwQXrZkGFTHXwe5MaXPtODISFSz9seq4O
TDsTuadrxWDa8N/pgXfqsBmPktzZIgZdbcVB3p/Vgbzie6i2Vwy+fnC0dxLV
ANWnBglT82IQb6j+GaI0wJX0a7cKTRwEhuubVb12wdjEHt/qUHGoaMRk++U0
YU9qe7pChDjc5YkksWlowqOT5m0xkeLw8Iz6edl9mmDV4i51JlYcBvheLR60
0YSBoketrBniwPLv4wOueE3ovvqPur9SHF7H8B70YdOCav6ypoZf4kA/8CTV
pVcLJFv2//pvWRxUrA2vS41rQeCNLkr8mjj4u+bEtsxrAf3PlKcjiwSQeZSx
PxzaUDYkROHgk4DGOr2kZ9raUJzj7XFYUQKyxYwKs5O0IZ1QEWuzlYCMtUsW
tOM6UH2UM3jtrAS8qDebdbDSgS/WYzPbHCXANSQ2M9lRB2hBsWU3XSWAT4j9
9LifDmTWr5yCqxKg17Sz4EOmDmQZVsc/vy8Buh81uekLOpBra0JObJCAXNo3
zcEgAho9lPwbmyVgVj0hzTWCgKlgtsnfbRLAVjA1sniPAPnsVyUm7yVgvMji
XU8mAY9nxEy5RyVgq5Al51QdAXme4/cCVyXgF18JmwUbHZ6GePOf206BW969
MiqX6TCrczooZAcFoisSrNoC6KD0a99ihioFdo/EbLK4SYc8O+zDiCYFqkRk
Aw7fo0Mueh5vrkcB7andNy4/oUPmyjx+1JoC05TcCoEhOiOOvmgXOwq0jDmw
14zSgeZYxRxhz+A/lbZnv9Ih/WPUWIMzBX7MeelcWaBD6nPlHF1fCnhaHFr/
uRlB4gUXZfW7FOD5kVDJvQPBgPTxVJP7FAg1OL21TQ2ByJA2n0ccBQJULshd
00QQf5hroSCZAlFpwq8K9yCIlcsrkc+jwER/7dDp4wjeD9+VPfCUAqk/o9Uy
TiLAHlyOsy+iQKLHf6jfEkHMpkOX018y3s9qbCtkjyB69KuOeA0FWs8V3B70
QtAZ3/FUq54C9lFblLN9EfAavaKcaqLAi5/aF2z9EERW3mR60EGByFOO5Y+D
Edx+KFPLO0QBXj8O++t3EbQac6srf6aAwsfKN533EXBxLmUZfKHAfsroI754
BOG+taG3pijwu+c8n10KglDTM/qsSxQ4vXjeWj8PQbrhkKX9MgXaRo7FWzxF
UH7I1LVhjQLbQscTThUhWCAO3I1gwSGU/m2B8hKBpaxiryAfDlEsnyfbqxD4
UDOnvAVxiH7idvRIDSNfUYnVXjIOeyXvXS6tQ9DAwyuRJIGDlz8hatGMYOef
BTtpRRy+l6uF13QjOPLT2eumMg5Dh08LFL1H4PhtPGRKBYfII7k24R8RJH/+
mPtkNw63CwRNtgwgeN1vWMajg4Pt4p6V/EEE3T2NLRcRDpShwvPEJwRbGsu+
q+nhYCNTXbBtBAGtWpUp7hAOC1KuN2+MIqCXP+FfMcABo9sqt31BcPKlDM3C
CAe80SqXdRyBZ1GKWoUJDpfkDv+Wm2Donyekh5/AQXirgqjWJILczOgT181x
KHktS9b6imA4PujKflschNqep7JOI1iJWYvIOYuDmZHizjYGY3e8kjkccYhf
u5V9YwaBcuhcgbMzDrJ6wRvbviE4dN2hqs0VBzvrCVTB4LNXP3f954HDcZ9H
TvRZBP7eJ8fueuPQ2VMf9JTBCW5dvxZ9cZCeDo/gnEPw4vxhdjM/HPjciTBT
BnecqRF6HYBDwXV9v0gGz5zW2SYajINFpo5zCYM3nSzR8ruJw6PZopPNDMaN
lQ2Gb+EwsmZ9sI3BWgY5p+EODuVfKfRKBh/Xo7qlR+Nw79k4kcxgN0gI3HQf
h819jfpODA7XEohxiMPhwhVmFxkGZ6lFZDQm4iDvN5rezoi3SnlTiUIKDty5
H3/ZM3hA/lr97TQcPvScc/jGyHdJ6nfv90wcTLlV160YzCfhNm2Ui0N3yfey
KoZeCkJTq8X5ODimXMzhY/B+ftutpEIcXsgV1h9l6GvDNSDhU4yD1bW3Elen
EFxhM/mvvwSHU409z2IZ9YndaAHtUhw2bDTDUhj1K1rZZ5xcjgPBfCI7llHf
5sWKMxtvcaj8ncd/lVH/iTkNb9saHK68aeo4OoaAaarwZk094/4Wu0k+Rr+o
D6U9Dm3DgTnthJrNZ0a8yo7LhZ04qInZVbAPI5gNUD7Q14PDYT3x1eQhBJm0
N+PyAzj09q6kp/QjCPS+rnrsEw4/8y6JbOljzFPDgaDLI4x8f5mctGP0O+b8
Hm+eZPTHat6+acZ8zJcnui5MM/zFi/0ldTHmnce2QnQOB6nQvnuqHQhuFM+Z
Oy/isDLG6anbgmDVj1WfnYkKWlLMSbnVCKayHDwSmalg0PVv2pIxrx/bmxKU
WamM+a/az1KJoJgaPWXGToXc7HeIWorAqVb8Zs5WKoToMi88LkDQz6Xx7qAI
FSwyzBVWHyCoV0uYGhKlgo/2b5fqe4z+O73O6y5OhRNUcQW/aMZ+K6y2SsCp
AH0xKrW3EBw0MVyflqHCbSR6MOcqY34THXdF7KQCpgo2VYz9mF3TYoWrUSH6
pPXE//fn/Vnlm8/VqWC03G13mbFfL9KX3g/upsKUmL7jqj4C+S/XPZQQFXR3
v4ow1WLs520Pn7bpU+HTXFmfD4bg16JeVvARKuQban0Q5EVgWLmQpGnIyKfO
8l8qBwJ2k8O3s4ypMKIxynbrHx28/Vacrp2iQs70l92pjO+HcccJ+e3nGPny
r32efEmHrd5Yxu0gRr7GrPw6h+ngiKoS99ygwurE9salPXSo4XCJWQ6hQrOh
1f40bTpcSam5fvYWFaq8XjW2KdFhusHDRieaCjI/VC7589ChXrRLYjaZoX8K
U+7hDgICqu7E65dSoWsv/eSCHgEzn6rur5Qx/Pn7cyrQCTBbW4zOKacCz/y/
t6bqBChpmN9iraJCmyHrhVs0AvryZa+8qaeCbxKT+ZkNHdgZ99ZC8T0VQk0e
f517oQOTF35SuH4w9B0JG30npANHxEyzmqUlIfbT3Tu332pB/LhylYWsJNiL
CHKvvNCC8adbBmflJOGyzYyOVZ4W+EE5H6+iJCzLTw8KxGrBE3uan4mKJDT8
GzCXddICzqKfxkOEJLgGnXFnEtSChn2RTN/NJKFEd3i601oTdF0bLPhvScLo
D8t5k6ldkCpuJ926JAmeW5/VR19XA+manAdHLaQg7HHGTo8dKhC9vVqhu1IK
yEWJc2f6FMFhcVNXkwINNA+HltJmpMHu2QL1VhQNEr1HnzpelACXIJP1w3dp
4GHtffmOlgR4m7zo3XqPBoW+FpSqTRIQtuQdGf2ABji5GTdMEIcCzZW1uGQa
WIe+ViXViMHKu42P2fk0yD3xWVxfRBSiu7feqW2gwWZZnsSsTjIkZlxwvNlE
gw3ly0MJSWTI8Grfe7CFBiMfhXSSHcnwkhy92tJOgzdnlXy6mMgwZC7o2POB
Bpn55/vmVRj/tWMie7+M0YD7K5oXiBOEHS+uUDInaGDKu1nh7xlB0AoZXLH/
SoM1gUmuPzsEwUAuuWh6hgZdpBdTIi0C4OFMpfz8yeBP69PiTALgp3N9pXiR
Bg/PCh0MaeOHEO4v772WaFCqUR/5N5Ef4gszIpaXaaA7orYkocEP6YGbzpWt
0kCP6YZ0PSs/5B+z3+O3ToNFgxAL/y4+eCFVL0H/R4Mii/E0vVQ+qFyUXdnY
oIH8dd0NygU++B9vsiLR
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {-1.0020597290264634`*^-14, 31.928913615640226`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotRanges", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "120"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "6"}], ",", "6"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "120"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "60"}], ",", "60"}], "}"}]}], "}"}]}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "120"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "6"}], ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "120"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "60"}], ",", "60"}], "}"}]}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotRanges", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "120"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6"}], ",", "6"}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "@", 
  FractionBox["180", "Pi"]}]], "Input"],

Cell[BoxData["57.29577951308232`"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", 
  RowBox[{"ColorData", "[", "1", "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", "4", "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"colors", "/@", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2"}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.368, 0.507, 0.71], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.24533333333333335`, 0.338, 0.47333333333333333`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0.368, 0.507, 0.71]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.368, 0.507, 0.71]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.368, 0.507, 0.71],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.881, 0.611, 0.142], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.5873333333333334, 0.4073333333333333, 0.09466666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0.881, 0.611, 0.142]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.881, 0.611, 0.142]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.881, 0.611, 0.142],
       Editable->False,
       Selectable->False]}], "}"}], "[", "1", "]"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.368, 0.507, 0.71], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.24533333333333335`, 0.338, 0.47333333333333333`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0.368, 0.507, 0.71]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.368, 0.507, 0.71]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.368, 0.507, 0.71],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.881, 0.611, 0.142], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[
           0.5873333333333334, 0.4073333333333333, 0.09466666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0.881, 0.611, 0.142]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.881, 0.611, 0.142]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.881, 0.611, 0.142],
       Editable->False,
       Selectable->False]}], "}"}], "[", "2", "]"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ColorData", "[", "5", "]"}], "/@", 
  RowBox[{"Range", "[", "20", "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.4588235294117647, 0.1411764705882353, 0.1411764705882353],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.3058823529411765, 0.09411764705882353, 0.09411764705882353],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.4588235294117647, 0.1411764705882353, 0.1411764705882353]"],
     
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.4588235294117647, 0.1411764705882353, 0.1411764705882353]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.4588235294117647, 0.1411764705882353, 0.1411764705882353],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.6274509803921569, 0.23137254901960785`, 0.23137254901960785`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.41830065359477125`, 0.1542483660130719, 0.1542483660130719],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.6274509803921569, 0.23137254901960785, \
0.23137254901960785]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.6274509803921569, 0.23137254901960785`, 0.23137254901960785`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.6274509803921569, 0.23137254901960785`, 0.23137254901960785`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.3803921568627451, 0.2784313725490196, 0.20784313725490197`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.25359477124183005`, 0.18562091503267975`, 0.13856209150326798`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.3803921568627451, 0.2784313725490196, 0.20784313725490197]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.3803921568627451, 0.2784313725490196, 0.20784313725490197`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.3803921568627451, 0.2784313725490196, 0.20784313725490197`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.5882352941176471, 0.44313725490196076`, 0.33725490196078434`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.3921568627450981, 0.2954248366013072, 0.22483660130718958`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.5882352941176471, 0.44313725490196076, \
0.33725490196078434]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.5882352941176471, 0.44313725490196076`, 0.33725490196078434`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.5882352941176471, 0.44313725490196076`, 0.33725490196078434`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.592156862745098, 0.4196078431372549, 0.2823529411764706], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.3947712418300654, 0.2797385620915033, 0.18823529411764706`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.592156862745098, 0.4196078431372549, 0.2823529411764706]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.592156862745098, 0.4196078431372549, 0.2823529411764706]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.592156862745098, 0.4196078431372549, 0.2823529411764706],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.8235294117647058, 0.5019607843137255, 0.09411764705882353], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.5490196078431373, 0.334640522875817, 0.06274509803921569],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.8235294117647058, 0.5019607843137255, 0.09411764705882353]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.8235294117647058, 0.5019607843137255, 0.09411764705882353]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.8235294117647058, 0.5019607843137255, 0.09411764705882353],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.9764705882352941, 0.6901960784313725, 0.3215686274509804],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6509803921568628, 0.4601307189542484, 0.21437908496732028`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.9764705882352941, 0.6901960784313725, 0.3215686274509804]"],
     
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.9764705882352941, 0.6901960784313725, 0.3215686274509804]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9764705882352941, 0.6901960784313725, 0.3215686274509804],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.396078431372549, 0.396078431372549, 0.17647058823529413`],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.26405228758169935`, 0.26405228758169935`, 0.11764705882352942`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.396078431372549, 0.396078431372549, 0.17647058823529413]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.396078431372549, 0.396078431372549, 0.17647058823529413`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.396078431372549, 0.396078431372549, 0.17647058823529413`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.41568627450980394`, 0.41568627450980394`, 0.3058823529411765], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.27712418300653596`, 0.27712418300653596`, 0.203921568627451],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.41568627450980394, 0.41568627450980394, \
0.3058823529411765]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.41568627450980394`, 0.41568627450980394`, 0.3058823529411765]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.41568627450980394`, 0.41568627450980394`, 0.3058823529411765],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.6313725490196078, 0.6313725490196078, 0.24705882352941178`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.42091503267973857`, 0.42091503267973857`, 0.1647058823529412],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.6313725490196078, 0.6313725490196078, 0.24705882352941178]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.6313725490196078, 0.6313725490196078, 0.24705882352941178`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.6313725490196078, 0.6313725490196078, 0.24705882352941178`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.4588235294117647, 0.1411764705882353, 0.1411764705882353],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.3058823529411765, 0.09411764705882353, 0.09411764705882353],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.4588235294117647, 0.1411764705882353, 0.1411764705882353]"],
     
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.4588235294117647, 0.1411764705882353, 0.1411764705882353]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.4588235294117647, 0.1411764705882353, 0.1411764705882353],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.6274509803921569, 0.23137254901960785`, 0.23137254901960785`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.41830065359477125`, 0.1542483660130719, 0.1542483660130719],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.6274509803921569, 0.23137254901960785, \
0.23137254901960785]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.6274509803921569, 0.23137254901960785`, 0.23137254901960785`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.6274509803921569, 0.23137254901960785`, 0.23137254901960785`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.3803921568627451, 0.2784313725490196, 0.20784313725490197`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.25359477124183005`, 0.18562091503267975`, 0.13856209150326798`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.3803921568627451, 0.2784313725490196, 0.20784313725490197]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.3803921568627451, 0.2784313725490196, 0.20784313725490197`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.3803921568627451, 0.2784313725490196, 0.20784313725490197`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.5882352941176471, 0.44313725490196076`, 0.33725490196078434`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.3921568627450981, 0.2954248366013072, 0.22483660130718958`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.5882352941176471, 0.44313725490196076, \
0.33725490196078434]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.5882352941176471, 0.44313725490196076`, 0.33725490196078434`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.5882352941176471, 0.44313725490196076`, 0.33725490196078434`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.592156862745098, 0.4196078431372549, 0.2823529411764706], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.3947712418300654, 0.2797385620915033, 0.18823529411764706`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.592156862745098, 0.4196078431372549, 0.2823529411764706]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.592156862745098, 0.4196078431372549, 0.2823529411764706]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.592156862745098, 0.4196078431372549, 0.2823529411764706],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.8235294117647058, 0.5019607843137255, 0.09411764705882353], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.5490196078431373, 0.334640522875817, 0.06274509803921569],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.8235294117647058, 0.5019607843137255, 0.09411764705882353]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.8235294117647058, 0.5019607843137255, 0.09411764705882353]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.8235294117647058, 0.5019607843137255, 0.09411764705882353],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.9764705882352941, 0.6901960784313725, 0.3215686274509804],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6509803921568628, 0.4601307189542484, 0.21437908496732028`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.9764705882352941, 0.6901960784313725, 0.3215686274509804]"],
     
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.9764705882352941, 0.6901960784313725, 0.3215686274509804]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9764705882352941, 0.6901960784313725, 0.3215686274509804],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.396078431372549, 0.396078431372549, 0.17647058823529413`],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.26405228758169935`, 0.26405228758169935`, 0.11764705882352942`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.396078431372549, 0.396078431372549, 0.17647058823529413]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.396078431372549, 0.396078431372549, 0.17647058823529413`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.396078431372549, 0.396078431372549, 0.17647058823529413`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.41568627450980394`, 0.41568627450980394`, 0.3058823529411765], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.27712418300653596`, 0.27712418300653596`, 0.203921568627451],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.41568627450980394, 0.41568627450980394, \
0.3058823529411765]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.41568627450980394`, 0.41568627450980394`, 0.3058823529411765]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.41568627450980394`, 0.41568627450980394`, 0.3058823529411765],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.6313725490196078, 0.6313725490196078, 0.24705882352941178`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.42091503267973857`, 0.42091503267973857`, 0.1647058823529412],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.6313725490196078, 0.6313725490196078, 0.24705882352941178]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.6313725490196078, 0.6313725490196078, 0.24705882352941178`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.6313725490196078, 0.6313725490196078, 0.24705882352941178`],
    Editable->False,
    Selectable->False]}], "}"}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualize results", "Section"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "getBB8", "]"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "\"\<visualization.m\>\""}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"man", "=", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"getBB8", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"sol", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{"sol", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", "t", "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "120"}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 120}}, Typeset`size$$ = {450., {27., 34.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$4557$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$4557$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> $CellContext`getBB8[
        Part[$CellContext`sol, 1][$CellContext`t$$], 
        Part[$CellContext`sol, 2][$CellContext`t$$]], 
      "Specifications" :> {{$CellContext`t$$, 0, 120}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{507., {78., 86.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"getBB8", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"sol", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", "t", "]"}], ",", 
     RowBox[{
      RowBox[{"sol", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", "t", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "120"}], "}"}], ",", 
   RowBox[{"RefreshRate", "\[Rule]", "30"}]}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 3.5500000000000003`, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 120}}, Typeset`size$$ = {450., {27., 34.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$4626$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$4626$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> $CellContext`getBB8[
        Part[$CellContext`sol, 1][$CellContext`t$$], 
        Part[$CellContext`sol, 2][$CellContext`t$$]], 
      "Specifications" :> {{$CellContext`t$$, 0, 120, RefreshRate -> 30, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{507., {70., 78.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{960, 1016},
WindowMargins->{{0, Automatic}, {0, Automatic}},
CellContext->Notebook,
TrackCellChangeTimes->False,
Magnification:>1.25 Inherited,
FrontEndVersion->"11.0 for Linux x86 (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]

