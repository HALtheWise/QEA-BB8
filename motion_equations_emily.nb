Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell["Setup coordinate frames", "Section"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"xhat", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"1", ",", " ", "0", ",", " ", "0"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"yhat", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"0", ",", " ", "1", ",", " ", "0"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"zhat", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"0", ",", " ", "0", " ", ",", "1"}], "}"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", "0"}], "}"}]], "Output"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "0"}], "}"}]], "Output"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "1"}], "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]zrot", "[", "t_", "]"}], " ", ":=", " ", 
  RowBox[{"RotationMatrix", "[", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "t", "]"}], ",", " ", "zhat"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]xrot", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"RotationMatrix", "[", 
    RowBox[{
     RowBox[{"\[Phi]", "[", "t", "]"}], ",", " ", "xhat"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rhat", "[", "t_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"\[Phi]xrot", "[", "t", "]"}], ".", 
   RowBox[{"\[Theta]zrot", "[", "t", "]"}], ".", 
   "yhat"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]hat", "[", "t_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"\[Phi]xrot", "[", "t", "]"}], ".", 
   RowBox[{"\[Theta]zrot", "[", "t", "]"}], ".", 
   "xhat"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]hat", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"\[Phi]xrot", "[", "t", "]"}], ".", 
    RowBox[{"\[Theta]zrot", "[", "t", "]"}], ".", "zhat"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rvec", "[", "t_", "]"}], " ", ":=", " ", 
  RowBox[{"r", " ", 
   RowBox[{"rhat", "[", "t", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"svec", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], " ", "xhat"}], "+", " ", 
    RowBox[{
     RowBox[{"z", "[", "t", "]"}], " ", "zhat"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hvec", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{"svec", "[", "t", "]"}], "+", 
   RowBox[{"rvec", "[", "t", "]"}]}]}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"rhat", "'"}], "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], " ", 
       RowBox[{"\[Theta]hat", "[", "t", "]"}]}], "+", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Phi]", "'"}], "[", "t", "]"}], 
       RowBox[{"\[Phi]hat", "[", "t", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Theta]hat", "'"}], "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{"\[Theta]", "'"}], "[", "t", "]"}]}], " ", 
       RowBox[{"rhat", "[", "t", "]"}]}], " ", "-", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Phi]", "'"}], "[", "t", "]"}], 
       RowBox[{"rhat", "[", "t", "]"}]}]}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"xhat", "'"}], "[", "t_", "]"}], " ", ":=", " ", "0"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"yhat", "'"}], "[", "t_", "]"}], " ", ":=", " ", "0"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"zhat", "'"}], "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], 
   "*)"}], "\[IndentingNewLine]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$Assumptions", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Theta]", "[", "t", "]"}], "\[Element]", "Reals"}], ",", 
    RowBox[{
     RowBox[{"\[Phi]", "[", "t", "]"}], "\[Element]", "Reals"}]}], "}"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "telling", " ", "mathematica", " ", "that", " ", "the", " ", "vectors", 
    " ", "are", " ", "perpendicular"}], "*)"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]", "[", "t", "]"}], "\[Element]", "Reals"}], ",", 
   RowBox[{
    RowBox[{"\[Phi]", "[", "t", "]"}], "\[Element]", "Reals"}]}], 
  "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Norm", "[", 
   RowBox[{"rhat", "[", "t", "]"}], "]"}], "]"}]], "Input"],

Cell[BoxData["1"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FullSimplify", "@", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"rvec", "[", "t", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "@", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"hvec", "[", "t", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "r"}], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Theta]", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "r"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "r"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Theta]", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "+", 
    RowBox[{"r", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Phi]", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}]}], "}"}]], "Output"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "-", 
    RowBox[{"r", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Theta]", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"-", "r"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["z", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "-", 
    RowBox[{"r", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Theta]", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "+", 
    RowBox[{"r", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Phi]", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}]}], "}"}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Setup forces", "Section"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fg2vec", "=", 
   RowBox[{
    RowBox[{"-", "m2"}], " ", "g", " ", "yhat"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fn2vec", "=", 
    RowBox[{
     RowBox[{"fn2", "[", "t", "]"}], " ", 
     RowBox[{"rhat", "[", "t", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Motor", " ", "force"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mtvec", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"motor1", "[", "t", "]"}]}], " ", 
      RowBox[{"\[Theta]hat", "[", "t", "]"}]}], "-", 
     RowBox[{
      RowBox[{"motor2", "[", "t", "]"}], 
      RowBox[{"\[Phi]hat", "[", "t", "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f1vec", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"f1x", "[", "t", "]"}], " ", 
     RowBox[{"(", "xhat", ")"}]}], " ", "+", " ", 
    RowBox[{
     RowBox[{"f1z", "[", "t", "]"}], " ", 
     RowBox[{"(", "zhat", ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fg1vec", "=", 
   RowBox[{
    RowBox[{"-", "m1"}], " ", "g", " ", "yhat"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fn1vec", "=", 
   RowBox[{
    RowBox[{"fn1", "[", "t", "]"}], " ", "yhat"}]}], ";"}]}], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Newton\[CloseCurlyQuote]s Laws as vector equations", "Section"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"headeqn", "=", 
   RowBox[{"FullSimplify", "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"fn2vec", "+", "mtvec", " ", "+", " ", "fg2vec"}], "\[Equal]", 
      RowBox[{"m2", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"hvec", "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "2"}], "}"}]}], "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"headeqn", "//", "TraditionalForm"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bodyeqn", "=", 
   RowBox[{"FullSimplify", "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
      "f1vec", "+", "fn1vec", "+", "fg1vec", "-", "fn2vec", "-", "mtvec"}], 
      "\[Equal]", 
      RowBox[{"m1", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"svec", "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "2"}], "}"}]}], "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bodyeqn", "//", "TraditionalForm"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bodymomenteqn", "=", 
   RowBox[{"FullSimplify", "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Cross", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "r"}], " ", "yhat"}], ",", " ", "f1vec"}], "]"}], "+", 
       " ", 
       RowBox[{"Cross", "[", 
        RowBox[{
         RowBox[{"r", " ", 
          RowBox[{"rhat", "[", "t", "]"}]}], ",", " ", "mtvec"}], "]"}]}], 
      "\[Equal]", 
      RowBox[{"i", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Omega]1", "'"}], "[", "t", "]"}], " ", "xhat"}], " ", 
         "+", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Omega]2", "'"}], "[", "t", "]"}], " ", "yhat"}], " ", 
         "+", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Omega]3", "'"}], "[", "t", "]"}], "zhat"}]}], ")"}]}]}],
      ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"bodymomenteqn", "//", "TraditionalForm"}]}], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"motor1", "(", "t", ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"-", 
         RowBox[{"cos", "(", 
          RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"fn2", "(", "t", ")"}], " ", 
       RowBox[{"sin", "(", 
        RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"cos", "(", 
        RowBox[{"\[Phi]", "(", "t", ")"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"fn2", "(", "t", ")"}], " ", 
          RowBox[{"cos", "(", 
           RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"motor1", "(", "t", ")"}], " ", 
          RowBox[{"sin", "(", 
           RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}]}], ")"}]}], "-", 
      RowBox[{"g", " ", "m2"}], "+", 
      RowBox[{
       RowBox[{"motor2", "(", "t", ")"}], " ", 
       RowBox[{"sin", "(", 
        RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"sin", "(", 
        RowBox[{"\[Phi]", "(", "t", ")"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"fn2", "(", "t", ")"}], " ", 
          RowBox[{"cos", "(", 
           RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"motor1", "(", "t", ")"}], " ", 
          RowBox[{"sin", "(", 
           RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"motor2", "(", "t", ")"}], " ", 
       RowBox[{"cos", "(", 
        RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}]}]}], "}"}], "\[LongEqual]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"r", " ", 
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
            MultilineFunction->None], "(", "t", ")"}], " ", 
          RowBox[{"cos", "(", 
           RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}]}], "+", 
        RowBox[{"r", " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]",
            MultilineFunction->None], "(", "t", ")"}], "2"], " ", 
         RowBox[{"sin", "(", 
          RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["x", "\[Prime]\[Prime]",
          MultilineFunction->None], "(", "t", ")"}]}], ")"}]}], ",", 
     RowBox[{"m2", " ", "r", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"sin", "(", 
          RowBox[{"\[Phi]", "(", "t", ")"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{
             SuperscriptBox["\[Theta]", "\[Prime]",
              MultilineFunction->None], "(", "t", ")"}], " ", 
            RowBox[{"sin", "(", 
             RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["\[Phi]", "\[Prime]",
              MultilineFunction->None], "(", "t", ")"}]}], "-", 
           RowBox[{
            RowBox[{"cos", "(", 
             RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
              MultilineFunction->None], "(", "t", ")"}]}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"cos", "(", 
          RowBox[{"\[Phi]", "(", "t", ")"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
              MultilineFunction->None], "(", "t", ")"}], " ", 
            RowBox[{"sin", "(", 
             RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"cos", "(", 
             RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Theta]", "\[Prime]",
                 MultilineFunction->None], "(", "t", ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Phi]", "\[Prime]",
                 MultilineFunction->None], "(", "t", ")"}], "2"]}], ")"}]}]}],
           ")"}]}]}], ")"}]}], ",", 
     RowBox[{"m2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"r", " ", 
         RowBox[{"cos", "(", 
          RowBox[{"\[Phi]", "(", "t", ")"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"cos", "(", 
             RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
              MultilineFunction->None], "(", "t", ")"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{
             SuperscriptBox["\[Theta]", "\[Prime]",
              MultilineFunction->None], "(", "t", ")"}], " ", 
            RowBox[{"sin", "(", 
             RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["\[Phi]", "\[Prime]",
              MultilineFunction->None], "(", "t", ")"}]}]}], ")"}]}], "-", 
        RowBox[{"r", " ", 
         RowBox[{"sin", "(", 
          RowBox[{"\[Phi]", "(", "t", ")"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
              MultilineFunction->None], "(", "t", ")"}], " ", 
            RowBox[{"sin", "(", 
             RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"cos", "(", 
             RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Theta]", "\[Prime]",
                 MultilineFunction->None], "(", "t", ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Phi]", "\[Prime]",
                 MultilineFunction->None], "(", "t", ")"}], "2"]}], ")"}]}]}],
           ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["z", "\[Prime]\[Prime]",
          MultilineFunction->None], "(", "t", ")"}]}], ")"}]}]}], "}"}]}], 
  TraditionalForm]], "Output"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"f1x", "(", "t", ")"}], "+", 
      RowBox[{
       RowBox[{"fn2", "(", "t", ")"}], " ", 
       RowBox[{"sin", "(", 
        RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"motor1", "(", "t", ")"}], " ", 
       RowBox[{"cos", "(", 
        RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"fn1", "(", "t", ")"}], "+", 
      RowBox[{
       RowBox[{"cos", "(", 
        RowBox[{"\[Phi]", "(", "t", ")"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"motor1", "(", "t", ")"}], " ", 
          RowBox[{"sin", "(", 
           RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"fn2", "(", "t", ")"}], " ", 
          RowBox[{"cos", "(", 
           RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}]}], ")"}]}], "-", 
      RowBox[{"g", " ", "m1"}], "-", 
      RowBox[{
       RowBox[{"motor2", "(", "t", ")"}], " ", 
       RowBox[{"sin", "(", 
        RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"f1z", "(", "t", ")"}], "+", 
      RowBox[{
       RowBox[{"sin", "(", 
        RowBox[{"\[Phi]", "(", "t", ")"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"motor1", "(", "t", ")"}], " ", 
          RowBox[{"sin", "(", 
           RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"fn2", "(", "t", ")"}], " ", 
          RowBox[{"cos", "(", 
           RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"motor2", "(", "t", ")"}], " ", 
       RowBox[{"cos", "(", 
        RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}]}]}], "}"}], "\[LongEqual]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m1", " ", 
      RowBox[{
       SuperscriptBox["x", "\[Prime]\[Prime]",
        MultilineFunction->None], "(", "t", ")"}]}], ",", "0", ",", 
     RowBox[{"m1", " ", 
      RowBox[{
       SuperscriptBox["z", "\[Prime]\[Prime]",
        MultilineFunction->None], "(", "t", ")"}]}]}], "}"}]}], 
  TraditionalForm]], "Output"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "r"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"f1z", "(", "t", ")"}], "+", 
        RowBox[{
         RowBox[{"motor2", "(", "t", ")"}], " ", 
         RowBox[{"cos", "(", 
          RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"-", "r"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"motor1", "(", "t", ")"}], " ", 
         RowBox[{"sin", "(", 
          RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"motor2", "(", "t", ")"}], " ", 
         RowBox[{"sin", "(", 
          RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
         RowBox[{"cos", "(", 
          RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}]}], ")"}]}], ",", 
     RowBox[{"r", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"f1x", "(", "t", ")"}], "+", 
        RowBox[{
         RowBox[{"motor1", "(", "t", ")"}], " ", 
         RowBox[{"cos", "(", 
          RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"motor2", "(", "t", ")"}], " ", 
         RowBox[{"sin", "(", 
          RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
         RowBox[{"sin", "(", 
          RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}]}], ")"}]}]}], "}"}], 
   "\[LongEqual]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"i", " ", 
      RowBox[{
       SuperscriptBox["\[Omega]1", "\[Prime]",
        MultilineFunction->None], "(", "t", ")"}]}], ",", 
     RowBox[{"i", " ", 
      RowBox[{
       SuperscriptBox["\[Omega]2", "\[Prime]",
        MultilineFunction->None], "(", "t", ")"}]}], ",", 
     RowBox[{"i", " ", 
      RowBox[{
       SuperscriptBox["\[Omega]3", "\[Prime]",
        MultilineFunction->None], "(", "t", ")"}]}]}], "}"}]}], 
  TraditionalForm]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Extract the components of those equations into separate equations\
\>", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "fn2", ",", " ", "fn1", ",", " ", "f1x", ",", " ", "f1z", ",", " ", 
    "\[Theta]", ",", " ", "\[Phi]", ",", " ", "x", ",", " ", "z", ",", " ", 
    "\[Omega]1", ",", " ", "\[Omega]2", ",", " ", 
    RowBox[{"\[Omega]3", " ", "=", " ", 
     RowBox[{"11", " ", "unknowns"}]}], ",", " ", 
    RowBox[{"11", " ", "equations", " ", 
     RowBox[{"(", "\:ff61\:25d5\:203f\:25d5\:ff61", ")"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"eq1", "=", 
    RowBox[{"headeqn", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"eq2", "=", 
    RowBox[{"headeqn", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"eq3", " ", "=", 
    RowBox[{"headeqn", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", " ", "3"}], "]"}], "]"}]}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], " ", 
    RowBox[{"motor1", "[", "t", "]"}]}], "-", 
   RowBox[{
    RowBox[{"fn2", "[", "t", "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], "\[Equal]", 
  RowBox[{"m2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"r", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
     RowBox[{
      SuperscriptBox["x", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "-", 
     RowBox[{"r", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}]], "Output"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", "g"}], " ", "m2"}], "+", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"fn2", "[", "t", "]"}]}], "-", 
      RowBox[{
       RowBox[{"motor1", "[", "t", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}], "+", 
   RowBox[{
    RowBox[{"motor2", "[", "t", "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}]}], "\[Equal]", 
  RowBox[{"m2", " ", "r", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Theta]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Phi]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "2"]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
    ")"}]}]}]], "Output"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], " ", 
    RowBox[{"motor2", "[", "t", "]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"fn2", "[", "t", "]"}]}], "-", 
      RowBox[{
       RowBox[{"motor1", "[", "t", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}]}], "\[Equal]", 
  RowBox[{"m2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["z", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "-", 
     RowBox[{"r", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Theta]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Phi]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "2"]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
     RowBox[{"r", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
    ")"}]}]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"eq4", " ", "=", " ", 
  RowBox[{"bodyeqn", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"eq5", " ", "=", " ", 
  RowBox[{"bodyeqn", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"eq6", " ", "=", " ", 
  RowBox[{"bodyeqn", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", " ", "3"}], "]"}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f1x", "[", "t", "]"}], "+", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
    RowBox[{"motor1", "[", "t", "]"}]}], "+", 
   RowBox[{
    RowBox[{"fn2", "[", "t", "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], "\[Equal]", 
  RowBox[{"m1", " ", 
   RowBox[{
    SuperscriptBox["x", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", "g"}], " ", "m1"}], "+", 
   RowBox[{"fn1", "[", "t", "]"}], "+", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], " ", 
       RowBox[{"fn2", "[", "t", "]"}]}], "+", 
      RowBox[{
       RowBox[{"motor1", "[", "t", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}], "-", 
   RowBox[{
    RowBox[{"motor2", "[", "t", "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}]}], "\[Equal]", 
  "0"}]], "Output"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f1z", "[", "t", "]"}], "+", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
    RowBox[{"motor2", "[", "t", "]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], " ", 
       RowBox[{"fn2", "[", "t", "]"}]}], "+", 
      RowBox[{
       RowBox[{"motor1", "[", "t", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}]}], "\[Equal]", 
  RowBox[{"m1", " ", 
   RowBox[{
    SuperscriptBox["z", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"eq7", " ", "=", " ", 
  RowBox[{"bodymomenteqn", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"eq8", " ", "=", " ", 
  RowBox[{"bodymomenteqn", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"eq9", " ", "=", " ", 
  RowBox[{"bodymomenteqn", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", " ", "3"}], "]"}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "r"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"f1z", "[", "t", "]"}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"motor2", "[", "t", "]"}]}]}], ")"}]}], "\[Equal]", 
  RowBox[{"i", " ", 
   RowBox[{
    SuperscriptBox["\[Omega]1", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "r"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"motor2", "[", "t", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"motor1", "[", "t", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}]}], ")"}]}], "\[Equal]", 
  RowBox[{"i", " ", 
   RowBox[{
    SuperscriptBox["\[Omega]2", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output"],

Cell[BoxData[
 RowBox[{
  RowBox[{"r", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"f1x", "[", "t", "]"}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"motor1", "[", "t", "]"}]}], "-", 
     RowBox[{
      RowBox[{"motor2", "[", "t", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}]}], ")"}]}], "\[Equal]", 
  RowBox[{"i", " ", 
   RowBox[{
    SuperscriptBox["\[Omega]3", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"eq10", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"\[Omega]3", "[", "t", "]"}]}], " ", 
    "r"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"eq11", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
   RowBox[{
    RowBox[{"\[Omega]1", "[", "t", "]"}], " ", 
    "r"}]}]}], "\[IndentingNewLine]"}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["x", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", "r"}], " ", 
   RowBox[{"\[Omega]3", "[", "t", "]"}]}]}]], "Output"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["x", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{"r", " ", 
   RowBox[{"\[Omega]1", "[", "t", "]"}]}]}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Eliminate the constraint forces", "Section"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"eqs", "=", 
   RowBox[{"Eliminate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq1", ",", "eq2", ",", "eq3", ",", "eq4", ",", "eq5", ",", " ", "eq6", 
       ",", " ", "eq7", ",", " ", "eq8", ",", " ", "eq9", ",", " ", "eq10", 
       ",", " ", "eq11"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"fn1", "[", "t", "]"}], ",", 
       RowBox[{"fn2", "[", "t", "]"}], ",", 
       RowBox[{"f1x", "[", "t", "]"}], ",", " ", 
       RowBox[{"flz", "[", "t", "]"}], ",", " ", 
       RowBox[{"\[Omega]1", "[", "t", "]"}], ",", " ", 
       RowBox[{"\[Omega]2", "[", "t", "]"}], ",", " ", 
       RowBox[{"\[Omega]3", "[", "t", "]"}]}], "}"}]}], "]"}]}], 
  "*)"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqs", "=", 
  RowBox[{"Eliminate", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "eq1", ",", "eq2", ",", "eq3", ",", "eq4", ",", "eq5", ",", " ", "eq6", 
      ",", " ", "eq7", ",", " ", "eq8", ",", " ", "eq9", ",", " ", "eq10", 
      ",", " ", "eq11"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"fn1", "[", "t", "]"}], ",", 
      RowBox[{"fn2", "[", "t", "]"}], ",", 
      RowBox[{"f1x", "[", "t", "]"}], ",", " ", 
      RowBox[{"flz", "[", "t", "]"}]}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         TemplateBox[{"1"},
          "OutputSizeLimit`Skeleton",
          DisplayFunction->(FrameBox[
            RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
            Background -> GrayLevel[0.75], 
            BaseStyle -> {
             "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
              ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
            ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
            FrameStyle -> None, RoundingRadius -> 7]& )],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{74., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{67., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 43, 20759218728043700935, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{73., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 43, 20759218728043700935, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 43, 20759218728043700935, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{100., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[43]]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "eqs", "]"}]], "Input"],

Cell[BoxData["20"], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Params", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"params", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"m1", "\[Rule]", "28.94"}], ",", 
    RowBox[{"m2", "\[Rule]", "1"}], ",", 
    RowBox[{"g", "\[Rule]", "9.8"}], ",", 
    RowBox[{"i", "\[Rule]", "2.7425"}], ",", 
    RowBox[{"r", "\[Rule]", ".788"}]}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"m1", "\[Rule]", "28.94`"}], ",", 
   RowBox[{"m2", "\[Rule]", "1"}], ",", 
   RowBox[{"g", "\[Rule]", "9.8`"}], ",", 
   RowBox[{"i", "\[Rule]", "2.7425`"}], ",", 
   RowBox[{"r", "\[Rule]", "0.788`"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Variables", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"List", "@@", "eqs"}], "]"}], "/.", "params"}], "/.", 
   RowBox[{"Equal", "\[Rule]", "Plus"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ",", 
   RowBox[{"f1z", "[", "t", "]"}], ",", 
   RowBox[{"motor1", "[", "t", "]"}], ",", 
   RowBox[{"motor2", "[", "t", "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ",", 
   RowBox[{"\[Omega]1", "[", "t", "]"}], ",", 
   RowBox[{"\[Omega]3", "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox["x", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox["\[Theta]", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox["\[Phi]", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox["\[Omega]1", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox["\[Omega]2", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox["\[Omega]3", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox["x", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox["z", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"allEqs", "=", 
   RowBox[{"{", 
    RowBox[{
    "eq1", ",", "eq2", ",", "eq3", ",", "eq4", ",", "eq5", ",", " ", "eq6", 
     ",", " ", "eq7", ",", " ", "eq8", ",", " ", "eq9", ",", " ", "eq10", ",",
      " ", "eq11"}], "}"}]}], ";"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerically approximate the solution", "Section"],

Cell[BoxData[
 RowBox[{
  RowBox[{"kp", "=", "12"}], ";", 
  RowBox[{"kd", "=", 
   RowBox[{"-", "2"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"control", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"motor1", "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "kp"}], " ", 
        RowBox[{"\[Theta]", "[", "t", "]"}]}], "+", 
       RowBox[{"kd", " ", 
        RowBox[{
         RowBox[{"\[Theta]", "'"}], "[", "t", "]"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"motor2", "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"kp", " ", 
        RowBox[{"\[Phi]", "[", "t", "]"}]}], "-", 
       RowBox[{"kd", " ", 
        RowBox[{
         RowBox[{"\[Phi]", "'"}], "[", "t", "]"}]}]}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"initialConds", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{"z", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", ".2"}], ",", 
    RowBox[{
     RowBox[{"\[Phi]", "[", "0", "]"}], "\[Equal]", ".10"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"z", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Phi]", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], 
   "}"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"z", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", "0.2`"}], ",", 
   RowBox[{
    RowBox[{"\[Phi]", "[", "0", "]"}], "\[Equal]", "0.1`"}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "\[Prime]",
      MultilineFunction->None], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["z", "\[Prime]",
      MultilineFunction->None], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Theta]", "\[Prime]",
      MultilineFunction->None], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Phi]", "\[Prime]",
      MultilineFunction->None], "[", "0", "]"}], "\[Equal]", "0"}]}], 
  "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"NDSolveValue", "[", 
   RowBox[{
    RowBox[{"Flatten", "@", 
     RowBox[{"{", 
      RowBox[{
      "eq1", ",", "eq2", ",", "eq3", ",", "eq4", ",", "eq5", ",", " ", "eq6", 
       ",", " ", "eq7", ",", " ", "eq8", ",", " ", "eq9", ",", " ", "eq10", 
       ",", " ", "eq11", ",", "control", ",", "initialConds"}], "}"}]}], ",", 
    
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], ",", 
      RowBox[{"z", "[", "t", "]"}], ",", 
      RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
      RowBox[{"\[Phi]", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}], "*)"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"NDSolveValue", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{"allEqs", ",", "control", ",", "initialConds"}], "}"}], "]"}], 
     "/.", "params"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], ",", 
      RowBox[{"z", "[", "t", "]"}], ",", 
      RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
      RowBox[{"\[Phi]", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "60"}], "}"}], ",", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<IndexReduction\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Pantelides\>\"", ",", " ", 
         RowBox[{
         "\"\<ConstraintMethod\>\"", "\[Rule]", "\"\<Projection\>\""}]}], 
        "}"}]}], "}"}]}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA9xwHa8MPsT4AAAAA5Q8hPVIuok6l
TO8/FN3M6skQmT+dPILS0E4AQLm+QpyT77Q/svFU4o46CEAFQWnsChbCP79p
XTmG/g9ASAJ2saOGyT9LkQoifjUUQLlShPQMw9A/vu/ib8QjGED6zVJ4tXvU
P5fukhdKZhxACbd5MNyD2D92524xdkogQDqipdFRedw/pJhS+8w9IkAWbeJv
XBXgPwUaInJDWyRAj8GKufEV4j9o3C+Nv1QmQDT5Ecd39OM/ig8L+klEKEAD
QPbLk8nlP98S0hP0XSpAuzaGRJDG5z82V9fRo1MsQIRRCqV9oek/wWvIPHNz
LkAr6YCDS6TrP4R4w3yoRDBAMAl0fK+d7T+q20Etmj0xQEQZEF4Ede8/6iY2
tJtLMkBqaoveHLrwP6uSSQ2gRzNAOMtcArCo8T+G5tI8tFg0QHI65mQzq/I/
wPJClc9kNUD+XozUAanzP3sf0r/tXjZAm62BuMiV9D9QNNfAG243QJsiLdt/
lvU/pmn7k0xrOEDAYihyL4b2P1tXBpCEYzlA7h8/Fipx9z8qLYdizHA6QKEm
CvkUcPg/eiMnBxdsO0AQISlQ+F35P+QBPYJxfDxAw7YB5stf+j+tmDkm04c9
QFZm9ojqXPs/909VnDeBPkBj9DugAUn8P1vv5uirjz9At5A49ghJ/T+g18uD
EUZAQDuDhMAIOP4/wpOXp9DBQECCYe2XUyL/P/FDnrYXSEFAj+QGV0cQAEBh
hLQuYMVBQJRHPxzhhgBA3bgFkjBNQkCuP9IAcwcBQJp9Zl4CzEJAvOOKH4F/
AUCHnjq/V0hDQJ4y0cQ09QFAgLNJCzXPQ0AxbHKJ4HQCQLpYaMATTURAPLc6
iAjsAkAB8sFgetVEQM/uX6YobQNAd+eOlWRbRUD60xRL7usDQC5tazNQ2EVA
+ILxKTBiBEDy5oK8w19GQDwFKihq4gRA9/CprjjeRkA5NIlgIFoFQCtXRDUx
WkdAWfx1H3zPBUBssRmnseBHQPpNvv3PTgZA7pv+gTNeSEAtci4WoMUGQH16
Hkg95khAfyj5TWhGB0A7tbGiymtJQEJcUQzWxAdAOoBUZlnoSUAXL9AEwDoI
QEY/MhVwb0pAOrGsHKK6CECSjh8tiO1KQBeqsm4AMglA69FHMCh2S0C16BTg
VrMJQHRx48dL/EtAebcF2FIyCkA9oY7IcHlMQNJMHArLqApAE8V0tB0BTUCp
hY1bOykLQCp5agnMf01A8+El5yehC0BKHnj3//9NQMo/AUSFGgxACYGk+g==

                    "]]}}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 60.}, {0., 3.5129494965440005`}}, 
                   PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "60.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA9xwHa8MPsT4AAAAA5Q8hPVIuok6l
TO8/FN3M6skQmT+dPILS0E4AQLm+QpyT77Q/svFU4o46CEAFQWnsChbCP79p
XTmG/g9ASAJ2saOGyT9LkQoifjUUQLlShPQMw9A/vu/ib8QjGED6zVJ4tXvU
P5fukhdKZhxACbd5MNyD2D92524xdkogQDqipdFRedw/pJhS+8w9IkAWbeJv
XBXgPwUaInJDWyRAj8GKufEV4j9o3C+Nv1QmQDT5Ecd39OM/ig8L+klEKEAD
QPbLk8nlP98S0hP0XSpAuzaGRJDG5z82V9fRo1MsQIRRCqV9oek/wWvIPHNz
LkAr6YCDS6TrP4R4w3yoRDBAMAl0fK+d7T+q20Etmj0xQEQZEF4Ede8/6iY2
tJtLMkBqaoveHLrwP6uSSQ2gRzNAOMtcArCo8T+G5tI8tFg0QHI65mQzq/I/
wPJClc9kNUD+XozUAanzP3sf0r/tXjZAm62BuMiV9D9QNNfAG243QJsiLdt/
lvU/pmn7k0xrOEDAYihyL4b2P1tXBpCEYzlA7h8/Fipx9z8qLYdizHA6QKEm
CvkUcPg/eiMnBxdsO0AQISlQ+F35P+QBPYJxfDxAw7YB5stf+j+tmDkm04c9
QFZm9ojqXPs/909VnDeBPkBj9DugAUn8P1vv5uirjz9At5A49ghJ/T+g18uD
EUZAQDuDhMAIOP4/wpOXp9DBQECCYe2XUyL/P/FDnrYXSEFAj+QGV0cQAEBh
hLQuYMVBQJRHPxzhhgBA3bgFkjBNQkCuP9IAcwcBQJp9Zl4CzEJAvOOKH4F/
AUCHnjq/V0hDQJ4y0cQ09QFAgLNJCzXPQ0AxbHKJ4HQCQLpYaMATTURAPLc6
iAjsAkAB8sFgetVEQM/uX6YobQNAd+eOlWRbRUD60xRL7usDQC5tazNQ2EVA
+ILxKTBiBEDy5oK8w19GQDwFKihq4gRA9/CprjjeRkA5NIlgIFoFQCtXRDUx
WkdAWfx1H3zPBUBssRmnseBHQPpNvv3PTgZA7pv+gTNeSEAtci4WoMUGQH16
Hkg95khAfyj5TWhGB0A7tbGiymtJQEJcUQzWxAdAOoBUZlnoSUAXL9AEwDoI
QEY/MhVwb0pAOrGsHKK6CECSjh8tiO1KQBeqsm4AMglA69FHMCh2S0C16BTg
VrMJQHRx48dL/EtAebcF2FIyCkA9oY7IcHlMQNJMHArLqApAE8V0tB0BTUCp
hY1bOykLQCp5agnMf01A8+El5yehC0BKHnj3//9NQMo/AUSFGgxACYGk+g==

                    "]]}}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 60.}, {0., 3.5129494965440005`}}, 
                   PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "60.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("InterpolatingFunction[{{0., 60.}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "[", "t", "]"}], ",", 
   RowBox[{
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA9xwHa8MPsT4AAAAgqZUYvVIuok6l
TO8/vArOTt1Lkr+dPILS0E4AQNUnVxxSQq+/svFU4o46CEBkrFVkeHC7v79p
XTmG/g9AThOLb02Ow79LkQoifjUUQFS9/iOG2Mm/vu/ib8QjGECl33N+c7LP
v5fukhdKZhxAxurq21kE0792524xdkogQEG+0omvINa/pJhS+8w9IkCqM67s
iQfZvwUaInJDWyRArD+zwxIt3L9o3C+Nv1QmQF1GKe8VHd+/ig8L+klEKECK
GjjiJv/gv98S0hP0XSpA/CynNBiP4r82V9fRo1MsQOm1a1tGBOS/wWvIPHNz
LkCi5ob0yZjlv4R4w3yoRDBAwNFBAOgl57+q20Etmj0xQPAFWPBCmOi/6iY2
tJtLMkDZEE5c8ynqv6uSSQ2gRzNAVZjQpOCg67+G5tI8tFg0QNQLTm0jN+2/
wPJClc9kNUCozlaYAMbuv3sf0r/tXjZAj7NAQg0d8L9QNNfAG243QGDicuzE
5vC/pmn7k0xrOED+cOICG6Pxv1tXBpCEYzlA6NKlSL5b8r8qLYdizHA6QDxz
NjIMJPO/eiMnBxdsO0AdTyaO+N7zv+QBPYJxfDxAulTRrI+p9L+tmDkm04c9
QNFbOgF0cPW/909VnDeBPkBN8bHG9in2v1vv5uirjz9A67qeQyTz9r+g18uD
EUZAQBvZ9irwrve/wpOXp9DBQEDEI0ZDCWf4v/FDnrYXSEFA9PIGEs0u+b9h
hLQuYMVBQPoG5VMv6fm/3bgFkjBNQkB454dLPLP6v5p9Zl4CzEJAnqXErOdv
+7+Hnjq/V0hDQD+S3DXgKPy/gLNJCzXPQ0AtUylkg/H8v7pYaMATTURAW93z
AsWs/b8B8sFgetVEQAE/c16xd/6/d+eOlWRbRUABduvy6j7/vy5tazNQ2EVA
CIh3/ML4/7/y5oK8w19GQM0foN8iYQDA9/CprjjeRkAe8eB3M78AwCtXRDUx
WkdA7V1wo2obAcBssRmnseBHQMDbUyd3fwHA7pv+gTNeSECaBEfl0twBwH16
Hkg95khAv+aO+wNCAsA7tbGiymtJQEMmSadbpQLAOoBUZlnoSUDyjPOJAgID
wEY/MhVwb0pA2yv9yn5mA8CSjh8tiO1KQEhaaEhKxAPA69FHMCh2S0CYOKMi
6ykEwHRx48dL/EtAWt5zl7KNBMA9oY7IcHlMQEcIe0LJ6gTAE8V0tB0BTUBp
9jlEtU8FwCp5agnMf01AO20cY/CtBcBKHnj3//9NQDEjjURNDQbAjyTVmQ==

                    "]]}}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 60.}, {-2.756495032841848, 0.}}, 
                   PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "60.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA9xwHa8MPsT4AAAAgqZUYvVIuok6l
TO8/vArOTt1Lkr+dPILS0E4AQNUnVxxSQq+/svFU4o46CEBkrFVkeHC7v79p
XTmG/g9AThOLb02Ow79LkQoifjUUQFS9/iOG2Mm/vu/ib8QjGECl33N+c7LP
v5fukhdKZhxAxurq21kE0792524xdkogQEG+0omvINa/pJhS+8w9IkCqM67s
iQfZvwUaInJDWyRArD+zwxIt3L9o3C+Nv1QmQF1GKe8VHd+/ig8L+klEKECK
GjjiJv/gv98S0hP0XSpA/CynNBiP4r82V9fRo1MsQOm1a1tGBOS/wWvIPHNz
LkCi5ob0yZjlv4R4w3yoRDBAwNFBAOgl57+q20Etmj0xQPAFWPBCmOi/6iY2
tJtLMkDZEE5c8ynqv6uSSQ2gRzNAVZjQpOCg67+G5tI8tFg0QNQLTm0jN+2/
wPJClc9kNUCozlaYAMbuv3sf0r/tXjZAj7NAQg0d8L9QNNfAG243QGDicuzE
5vC/pmn7k0xrOED+cOICG6Pxv1tXBpCEYzlA6NKlSL5b8r8qLYdizHA6QDxz
NjIMJPO/eiMnBxdsO0AdTyaO+N7zv+QBPYJxfDxAulTRrI+p9L+tmDkm04c9
QNFbOgF0cPW/909VnDeBPkBN8bHG9in2v1vv5uirjz9A67qeQyTz9r+g18uD
EUZAQBvZ9irwrve/wpOXp9DBQEDEI0ZDCWf4v/FDnrYXSEFA9PIGEs0u+b9h
hLQuYMVBQPoG5VMv6fm/3bgFkjBNQkB454dLPLP6v5p9Zl4CzEJAnqXErOdv
+7+Hnjq/V0hDQD+S3DXgKPy/gLNJCzXPQ0AtUylkg/H8v7pYaMATTURAW93z
AsWs/b8B8sFgetVEQAE/c16xd/6/d+eOlWRbRUABduvy6j7/vy5tazNQ2EVA
CIh3/ML4/7/y5oK8w19GQM0foN8iYQDA9/CprjjeRkAe8eB3M78AwCtXRDUx
WkdA7V1wo2obAcBssRmnseBHQMDbUyd3fwHA7pv+gTNeSECaBEfl0twBwH16
Hkg95khAv+aO+wNCAsA7tbGiymtJQEMmSadbpQLAOoBUZlnoSUDyjPOJAgID
wEY/MhVwb0pA2yv9yn5mA8CSjh8tiO1KQEhaaEhKxAPA69FHMCh2S0CYOKMi
6ykEwHRx48dL/EtAWt5zl7KNBMA9oY7IcHlMQEcIe0LJ6gTAE8V0tB0BTUBp
9jlEtU8FwCp5agnMf01AO20cY/CtBcBKHnj3//9NQDEjjURNDQbAjyTVmQ==

                    "]]}}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 60.}, {-2.756495032841848, 0.}}, 
                   PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "60.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("InterpolatingFunction[{{0., 60.}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "[", "t", "]"}], ",", 
   RowBox[{
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{
                    13.165192550725543`, -1.0724080655693625`*^-9}, {
                    13.18350278796555, -1.1532281721902087`*^-10}, {
                    13.456498734771227`, 1.004188678107309*^-9}}], 
                    LineBox[CompressedData["
1:eJwB4QIe/SFib1JlAgAAAC0AAAACAAAAZJ+jZGUKL0CGDGvwd0ARPoR4w3yo
RDBALnUvX+yK6z2q20Etmj0xQDzaXIwqJ5i96iY2tJtLMkBi3Dpvb2fwvauS
SQ2gRzNA6OElLNCv3T2G5tI8tFg0QJgJmszdTbg9wPJClc9kNUC5OVcDxnHK
vXsf0r/tXjZA1zFi0BklxD1QNNfAG243QIdXmZq5y+A9pmn7k0xrOED/GMy2
invhvVtXBpCEYzlA2eBSEBFHEL4qLYdizHA6QKC7SScaW/Y9eiMnBxdsO0D8
c1+vqGvpveQBPYJxfDxAzBP0bqKgpj2tmDkm04c9QPHuCBZPFN09909VnDeB
PkA0LR0ycUvVvVvv5uirjz9AKqHbeEQbwb2g18uDEUZAQLdah9z0Q8M9wpOX
p9DBQEDUkubHccDVPfFDnrYXSEFArjD3X2k/7D1hhLQuYMVBQBhrOz1FL+a9
3bgFkjBNQkCmJ3D1SsLovZp9Zl4CzEJApF0qMV/jtr2Hnjq/V0hDQNPmerB5
scC9gLNJCzXPQ0B5mt69wtzlvbpYaMATTURAyltYFDGK7z0B8sFgetVEQHHG
/2cAs+I9d+eOlWRbRUAkpX5eBr7TvS5tazNQ2EVAfUGHYeY57T3y5oK8w19G
QMAijzFA1d699/CprjjeRkBs7sMgKBfAvStXRDUxWkdAAVosqfmz2r1ssRmn
seBHQNVpcqJz5ug97pv+gTNeSEBkQGbvc6zfvX16Hkg95khAFHDRGPDzyr07
tbGiymtJQAb/DG3ruPm9OoBUZlnoSUC2lnD87+P1PUY/MhVwb0pAYSFauwVv
6z2Sjh8tiO1KQI7IOsLY780969FHMCh2S0DSlcN9QsXhPXRx48dL/EtA7tFv
gByf6709oY7IcHlMQNxLVGFyTdO9E8V0tB0BTUB45K1FyPkCvip5agnMf01A
wUnnSRvK4b1KHnj3//9NQCvslbhNu+E9jKVgyg==
                    "]], 
                    
                    LineBox[{{2.9027337677296057`, 1.004188678107309*^-9}, {
                    2.902733895405613, -1.0724080655693625`*^-9}}], 
                    LineBox[{{6.500253398374848, -1.0724080655693625`*^-9}, {
                    6.500295746381398, 1.004188678107309*^-9}}], 
                    
                    LineBox[{{9.98295959632939, 1.004188678107309*^-9}, {
                    9.984131474248462, -1.0724080655693625`*^-9}}]}}}, {}, \
{}}, {DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                   AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 60.}, {-1.0724080655693625`*^-9, 
                    1.004188678107309*^-9}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "60.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{
                    13.165192550725543`, -1.0724080655693625`*^-9}, {
                    13.18350278796555, -1.1532281721902087`*^-10}, {
                    13.456498734771227`, 1.004188678107309*^-9}}], 
                    LineBox[CompressedData["
1:eJwB4QIe/SFib1JlAgAAAC0AAAACAAAAZJ+jZGUKL0CGDGvwd0ARPoR4w3yo
RDBALnUvX+yK6z2q20Etmj0xQDzaXIwqJ5i96iY2tJtLMkBi3Dpvb2fwvauS
SQ2gRzNA6OElLNCv3T2G5tI8tFg0QJgJmszdTbg9wPJClc9kNUC5OVcDxnHK
vXsf0r/tXjZA1zFi0BklxD1QNNfAG243QIdXmZq5y+A9pmn7k0xrOED/GMy2
invhvVtXBpCEYzlA2eBSEBFHEL4qLYdizHA6QKC7SScaW/Y9eiMnBxdsO0D8
c1+vqGvpveQBPYJxfDxAzBP0bqKgpj2tmDkm04c9QPHuCBZPFN09909VnDeB
PkA0LR0ycUvVvVvv5uirjz9AKqHbeEQbwb2g18uDEUZAQLdah9z0Q8M9wpOX
p9DBQEDUkubHccDVPfFDnrYXSEFArjD3X2k/7D1hhLQuYMVBQBhrOz1FL+a9
3bgFkjBNQkCmJ3D1SsLovZp9Zl4CzEJApF0qMV/jtr2Hnjq/V0hDQNPmerB5
scC9gLNJCzXPQ0B5mt69wtzlvbpYaMATTURAyltYFDGK7z0B8sFgetVEQHHG
/2cAs+I9d+eOlWRbRUAkpX5eBr7TvS5tazNQ2EVAfUGHYeY57T3y5oK8w19G
QMAijzFA1d699/CprjjeRkBs7sMgKBfAvStXRDUxWkdAAVosqfmz2r1ssRmn
seBHQNVpcqJz5ug97pv+gTNeSEBkQGbvc6zfvX16Hkg95khAFHDRGPDzyr07
tbGiymtJQAb/DG3ruPm9OoBUZlnoSUC2lnD87+P1PUY/MhVwb0pAYSFauwVv
6z2Sjh8tiO1KQI7IOsLY780969FHMCh2S0DSlcN9QsXhPXRx48dL/EtA7tFv
gByf6709oY7IcHlMQNxLVGFyTdO9E8V0tB0BTUB45K1FyPkCvip5agnMf01A
wUnnSRvK4b1KHnj3//9NQCvslbhNu+E9jKVgyg==
                    "]], 
                    
                    LineBox[{{2.9027337677296057`, 1.004188678107309*^-9}, {
                    2.902733895405613, -1.0724080655693625`*^-9}}], 
                    
                    LineBox[{{6.500253398374848, -1.0724080655693625`*^-9}, {
                    6.500295746381398, 1.004188678107309*^-9}}], 
                    
                    LineBox[{{9.98295959632939, 1.004188678107309*^-9}, {
                    9.984131474248462, -1.0724080655693625`*^-9}}]}}}, {}, \
{}}, {DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                   AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 60.}, {-1.0724080655693625`*^-9, 
                    1.004188678107309*^-9}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "60.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("InterpolatingFunction[{{0., 60.}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "[", "t", "]"}], ",", 
   RowBox[{
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAAtB5+BXq4JEAcxZPN1yOKPmjcL42/
VCZAuPDp1DN5ab6KDwv6SUQoQL0TntQAr1a+3xLSE/RdKkCs78CvJDljvjZX
19GjUyxALv2QSjI2Nr7Ba8g8c3MuQOFM0eFFhz8+hHjDfKhEMEAJ8OzW0Ps6
vqrbQS2aPTFAC7SNtMcaTj7qJja0m0syQABA8Qt/22a9q5JJDaBHM0AyyfxS
rndhPobm0jy0WDRAnqmc5Y9TMr7A8kKVz2Q1QDDzd3CFoUy+ex/Sv+1eNkBu
vNXSv7pEvlA018AbbjdAowmsj+SQTz6mafuTTGs4QGxBEsvH+VG+W1cGkIRj
OUDxZMW5xrGDvioth2LMcDpAwgo7V/TVYD56IycHF2w7QC7GcR8viWu+5AE9
gnF8PEB+5Viqmi9Tvq2YOSbThz1AiL3F77tIUD73T1WcN4E+QPb2GOlq3UO+
W+/m6KuPP0A3uHQuvrBCvqDXy4MRRkBA5D8mjcE/Mb7Ck5en0MFAQJCaJtGz
cBy+8UOethdIQUClsfcw2d9YPmGEtC5gxUFAmK0Ri+5wcb7duAWSME1CQC6W
TpSK9Ge+mn1mXgLMQkCrXuPiTWgwvoeeOr9XSENA1OthluUM/j2As0kLNc9D
QMxRG5y8Ez4+ulhowBNNREBUxGxK6YB2PgHywWB61URA6HMOeS+9ZD53546V
ZFtFQMPpjKfqVle+Lm1rM1DYRUB0O+O+5OdVPvLmgrzDX0ZA64mh6e1mWL73
8KmuON5GQAh0HR6C4vO9K1dENTFaR0A5MLDpEAc3vmyxGaex4EdA2tTErAL9
Sj7um/6BM15IQNjDWr1fe1O+fXoeSD3mSEDAzOJh1JsbPju1saLKa0lAxzLX
pfukYr46gFRmWehJQDJhZo6HbXw+Rj8yFXBvSkAEmiDJ4XNsPpKOHy2I7UpA
CSrdSEn+RD7r0UcwKHZLQBzn5QxhMiK+dHHjx0v8S0A/bbwjt8Rtvj2hjshw
eUxA9+RaipBMUr4TxXS0HQFNQBAmSPGhYIO+KnlqCcx/TUAJwyVlGjOGvkoe
ePf//01AhBSxteDpYL6wRIFL
                    "]], 
                    
                    LineBox[{{3.403408093221676, 1.947582635507434*^-7}, {
                    3.4037065155011423`, -1.8993306985951797`*^-7}}], 
                    
                    LineBox[{{7.062294343819194, -1.8993306985951797`*^-7}, {
                    7.067961403620184, 1.947582635507434*^-7}}]}}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 60.}, {-1.8993306985951797`*^-7, 
                    1.947582635507434*^-7}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "60.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAAtB5+BXq4JEAcxZPN1yOKPmjcL42/
VCZAuPDp1DN5ab6KDwv6SUQoQL0TntQAr1a+3xLSE/RdKkCs78CvJDljvjZX
19GjUyxALv2QSjI2Nr7Ba8g8c3MuQOFM0eFFhz8+hHjDfKhEMEAJ8OzW0Ps6
vqrbQS2aPTFAC7SNtMcaTj7qJja0m0syQABA8Qt/22a9q5JJDaBHM0AyyfxS
rndhPobm0jy0WDRAnqmc5Y9TMr7A8kKVz2Q1QDDzd3CFoUy+ex/Sv+1eNkBu
vNXSv7pEvlA018AbbjdAowmsj+SQTz6mafuTTGs4QGxBEsvH+VG+W1cGkIRj
OUDxZMW5xrGDvioth2LMcDpAwgo7V/TVYD56IycHF2w7QC7GcR8viWu+5AE9
gnF8PEB+5Viqmi9Tvq2YOSbThz1AiL3F77tIUD73T1WcN4E+QPb2GOlq3UO+
W+/m6KuPP0A3uHQuvrBCvqDXy4MRRkBA5D8mjcE/Mb7Ck5en0MFAQJCaJtGz
cBy+8UOethdIQUClsfcw2d9YPmGEtC5gxUFAmK0Ri+5wcb7duAWSME1CQC6W
TpSK9Ge+mn1mXgLMQkCrXuPiTWgwvoeeOr9XSENA1OthluUM/j2As0kLNc9D
QMxRG5y8Ez4+ulhowBNNREBUxGxK6YB2PgHywWB61URA6HMOeS+9ZD53546V
ZFtFQMPpjKfqVle+Lm1rM1DYRUB0O+O+5OdVPvLmgrzDX0ZA64mh6e1mWL73
8KmuON5GQAh0HR6C4vO9K1dENTFaR0A5MLDpEAc3vmyxGaex4EdA2tTErAL9
Sj7um/6BM15IQNjDWr1fe1O+fXoeSD3mSEDAzOJh1JsbPju1saLKa0lAxzLX
pfukYr46gFRmWehJQDJhZo6HbXw+Rj8yFXBvSkAEmiDJ4XNsPpKOHy2I7UpA
CSrdSEn+RD7r0UcwKHZLQBzn5QxhMiK+dHHjx0v8S0A/bbwjt8Rtvj2hjshw
eUxA9+RaipBMUr4TxXS0HQFNQBAmSPGhYIO+KnlqCcx/TUAJwyVlGjOGvkoe
ePf//01AhBSxteDpYL6wRIFL
                    "]], 
                    
                    LineBox[{{3.403408093221676, 1.947582635507434*^-7}, {
                    3.4037065155011423`, -1.8993306985951797`*^-7}}], 
                    
                    LineBox[{{7.062294343819194, -1.8993306985951797`*^-7}, {
                    7.067961403620184, 1.947582635507434*^-7}}]}}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 60.}, {-1.8993306985951797`*^-7, 
                    1.947582635507434*^-7}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "60.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("InterpolatingFunction[{{0., 60.}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "[", "t", "]"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], ",", 
      RowBox[{"z", "[", "t", "]"}], ",", 
      RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
      RowBox[{"\[Phi]", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{"n", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "60"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "sol"}], "}"}]}], "]"}]}], "}"}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"x", "[", "t", "]"}], 
     RowBox[{"z", "[", "t", "]"}], 
     RowBox[{"\[Theta]", "[", "t", "]"}], 
     RowBox[{"\[Phi]", "[", "t", "]"}]},
    {
     GraphicsBox[{{{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
k5Mktm/zY5w2p+D/AI1BRBE=
          "]]}}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 4.3941433337021246`*^-14},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 60}, {4.3941433337021246`*^-14, 3.5129494842645803`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
          "]]}}, {}, {}},
      
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, -2.7564950231932457`},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 60}, {-2.7564950231932457`, -3.16574159464969*^-14}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJwUV3c8Vf8ftpKd7Oy9x73GNc+5b5JKkjJCCqGErGR/kUqUGZklldEiK0Ln
Xtkkkb23Itkk8+d3/zmv53Xe7/t+nuf9nPP6HJGrHhecqCgoKIboKSj+f90Y
aa4Tf1SKajikHfyaiV2ZPAG6fY+J8eF25KbkZiJwfr/K0/eS+ENkiPlubDOR
a/AoPav+e+KP2TcqDHeaib4mb3up+4qJp27ZCGe6NxPtS76+3Y8pJ4qbe9H/
d7GZaMT157/t45+Jz98bekxqNxOf6jx4vR1cTTw6KSrKxN9MPLrA/fhfbw2R
RoHiJG6ziRjx/HXQX+V64vEvn20etDcRd0w0ndZjGonPLovonsxpIv4qsdZY
Pt5KtAlemWnXbyJecfotspjZRuS7M3Jz70gT0YWRdH8juJ3ofMXByqavkTj6
2dhjrfcHMS/fksLOvpGYzsnteOtQF3E8w/bCZdFGopn7qOWKcjeRzk5UT2u8
gdgi5Km3FNNL/OjHfFzZqoFYFp7AOX98iOimNBwmTagnGojPDS/3ThA1vPJX
ratriNkmxpZF7pNEFw9G/eMeNUTK/4p/eB6aIppRJdOvCdQQP3cHNi4qTxN3
PO6HUAZ9IeIfMBb9iflJLLY+MtSnVk3kn5O/N3t8nqjxWugsr38VMZArYe/1
wDzx9LfPze9GKom9euv+zl5/iNesFmwzDSqJjzOwmz8zF4hqMV0ss7wVxHuS
ee9WgpeIQtf4v+T0lBH/9ao/WepdIfp6h8QxZxcTPynT2eXJrBINTP9lDfMV
E31j+mSvBK0SjfL2+CmTi4gregHVXwXXiEaS9qdMEgqJc/mVv3Od1okJhJAr
0afyia/pHpVdLl8nXrjxgXL48nviNYdLdzjoN4jKJgulM37viJM8O1zh7zeI
NparuVyVb4hDdxG9y6t/iRv3IgzO+OYS00eYmTlObBJjvTGa74U5REvNkd6W
5E1iZMGrop7FbGL3QshNDa1/RLmWxZhTQa+IbVbVqex3toiBo4mUtxuyiNGl
8Q4tP7aIU79etA2KZRENj9gr3hHfJr76YuvQyvCc2FhHWbfQuE18P9MxZ/3m
KbFa6fhiM8suseRMq12ffiox5CF7ZZjdLvHEb/nDRWgKUWd68p568S4xjfU8
NkFMJlak3+PNMd8jvjo5Gdp5MYnov242fSlvj/jic5OUqXsikWAiUcj2b48o
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

          "]]}}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 60}, {-0.0025998470823816785`, 0.1999999999996136}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJwUV3k4lV8XNWWqzCQyz/O913XN527zPA9J5nkmSSgRKsqcEJLQnEIS4VxK
hpI0IpIiP0mSEJV8vvef91nPs/e711p7n/OeI+EX7RjIQEdHt85GR/f/9+pE
f7f0mSZ0MuT81tNKfV0pmGgwUkhVDD9lzFnSSgX+536CI9VUw6M5J87ntVIF
xrjZuIxvUWWM0hrj0lup8fY3hhlHGqlHSjMjx2Jbqb53n97YzLlPnekWvsLs
1Uq1FviW/MeonZoyu16mYtJKrdA7de3P0U4qZffg+An5Vir3wq7C9eGH1Ked
eQ5GrK3UkxevHflFekydUajWKp1uof611w5cyemldspdULvX0UKdveuu9cNo
gMoVcbmNPriF6hX4VeJ75SBVWc6g+LRmCzVsOz6xenSI+j7ccnfuthbqh3bb
6OXhl9Qm1Dtxpew+tYx/V8DBba+pqQ8I+9n87lOdoz64LZHeUHvJ7kzH5e5T
n4jFGC7mDFNXnYZndeqaqc1pBfzzRuNUH9nOYY+r96im0nPvfwx/og5JxXw6
GXWXWmtv69YQNUXNjte+81f6LpU+ufFlzLZpasao8GfFsUZq+5uk3u+kz1Rj
8xXTVdNGKvHU9oZvOf9RJSLGm5lEG6h75pQzvhjNU813M9UL36yjJgkU/Lv2
bp46YPPEKnRPHXXYcCUh5MA3amT5YGtT7i1qYXlH5H+VC9Si+jCf1Pib1AzZ
qzeXji5SjUw/Ou5zvk5dH9Y8tzi8RLVnyTmx4XCZ2kJi9bmq8JOqfyJM3m6w
lhqfM6LodeQn9cOJCt0j1rXUJcPEzqeiy9RpcYNz8bY11Lm6B1+vBK5QnT8F
iPuFXqJeYz3T7Hl/hdpRbWa1vFxFDfLff5yPbZXKXumpkphWRZ0S/CuQdmuV
6naXI/mB6UXqeLq+oefPX9RAhSHz7evl1LKJnTv5TNao8v7GHPZq5VQ37Ynh
J8Vr1DM7D/dHhpZR3ywci9TSWacaZ27Gi38ppQ7u6yzlPf6bqmAf1NjKX0zN
bsr3f/LyN5X5OqFDIuwc1ZLTV/W49B9qv4/mU5WHRdTebvruhd4/1JcM8cyc
yWepnWpG3/s5NqjN4SufF/YUUI+d5n2Q6rNBtdLt6I/NyafqfZ7K0GzcoF5V
XP9oTZ9PbS3LELrs8o+qTz4sVf85h9q4rccktWKTGnHXIV1sLYt6wKeYS3Nh
k1rrPWEkuCOLWup599uqGB1MPSgwYpHNpLq2pLfUHaADgXnh6ZDwk9SXkdK2
wvz0QFIKiC7XTqcSy7PvrurTAzmtRPhaUho1v29Z8GUQPeyas/0113mcaiv1
eCqzhR4if9iuN3qkUuvsVSwCPtIDy7VAY66AFOqOY+duU9kZgGuXCHew4DHq
k5HAxNX9DHCjNlnc48IRqgLz4MSLDAa4vceeviIyiZqpTjGuq2OAx8Zq156a
JlJNc5k5AzYZ4HVZ8zPgPUx9ZHS19kU1I4imct/L4DxIJeTe+fKrjxFWtfqe
0Yix1MqR+6qi3xmBvaAlIcf9ADUhsq8lTJcJAkacCq8di6bO3B/ayPdlgr6c
0iNcq5FUJ4ZRw/unmIBhnDKYmRhBVS35MsD4mglWLa+FVdaEUis+/uBW/M0E
a2aphfctQqhsyr9d7cW3wWuzX59HfgdRpzvZP1ZEbAPJ68xj5OQAatmc0orG
Nma4pa4qz/HLm8qqQdbxUGKG1OSZAYkZT+qhFL2UNAdmoNM5fuLQf/up9nw2
bM8vMMPboUY9ATE3aoeXi+3KI2ZIazMkZDi7UhWve54VnmOGTrlDUnFlztRt
KEokhMICS98unVJzdaDGZsb75XqwwKrsxb3OxXbUyZfHrjalscA7P+Yw9kpr
6oPgPCL9cxb4vevSkwpGM2pMQb1JWTArLAtFtN6T1qFOjLWc7sxhhbiD5xuO
3NCgWsl2PZ+5ywp9WQ0/WH2IVNm2F/vU6dhgWuZ8C7ohST277V3lPlk2EKQ/
dYVoLkCls/80lWLNBuJyvgknSzfR2PRS5EApG4yQq3JYf/LQzNX+NC5hNmDl
yAruPChGa05kXBP8zAZ0oqs67bdlaPkcfGmBRHZwvbNTLt2bQPvntqf3zF52
EIwmc0Z/J9HCa6R3NCazw7dgge9MXho0Uy2N4n/97PDpbEmxy5g2rSlNf0x6
kR1II/q7+Od1aRLPTMStBLaDntd+xcwP+rTcXbaBB/S2w1QRR1d1M5X219f1
RonfdghtOF2s0Aq00Fte3zsyt8OjJwNCXVkGtLerQeTp29vBdYW+OMvGkNZw
5jAm/NkOJ135bwXVG9FE36Yw7pXYAXSngu0c7I1p2eKZ5slmO6D+mDjn7s/G
tPWw/JyayB0g6VSSKRltQgu6V/qy/+wO+HS1eez5ggnt9WbVrsXWHcAvNdKU
GmBKM7C87iEwuQMM/x10LRwypd0uarikx7wT9j2rrPZWN6Pt+dA646e8ExrO
2Ukb5JjR6H4eKO132Ak/7DkPsL03o00zK1oSDu+EP9uY7k1Km9P6hD79Ka7Y
Cb8pfox8gea0OtWyuo2unTCncChw4YI5rdDQ0Tvgv51QFEecanluTot3Zed+
uoMDmsoL8h78Nqe5hz18SCRt4Uyvs1piFjR0LCmudC8HuPVdpMTrW9AkC0my
m0c54InM3JcmFwsa85W54cBqDjjJVmhHDrGgzbVWZw30ckD9/S5j0iEL2uAz
d131b1v5WQfn5o5a0Bo/8nw7z8MJinr2t0tTLGjFK08q6bQ4YeHgAae4ZAta
Elu6fbAnJ2Rnsf5piregeYvoMgymccLgwy/K+eEWNGPiz7vka5xQzPH3g7aH
BU3e5GZg+TNOmPXJSZs2t6Dt2Oe/i+EnJzg/OcPQRbSgJTTnBJB3cIF8UM2b
fwIWtLDO0I7/RLlgh64B/cCaOc3jiYlAOZELghSOSLoMm9NsX0tE2xpzAQPj
+0OPG81pMLHRS7+XC278J/TB9Iw5jTQ7Kn4vlAtm6K8v0vua06SX7iWGHOWC
aprWTxGyOY2VOUrp+SUuEO08c53zlRnthcpEbsU8F+j9jspv/mVK69Z88J/d
JhdMez+b8Go3pTUbFAMjDzdEJqoFHk4xpZW52C6FanLDvF7EaDi9Kc0vGbto
pnHDlUeVjLa/jGlLA5V7Xu7igX47zQFHmiGNL8L7BosRL0TN2Pgnx+nRFFlq
euz38kL9d6kV8ntdGlTPfDofzguv3F5/lTLTpUWMRAorF/ECnWrxg3lRHVq3
8dFs+8+8cGvy9vPBD5q0dx9o186v88JpbNG74KRJW0xifPxpJx8sUPNGmvop
tD0NpzfiKHyQtJG76fZAgxYncj7q/Ck+SFiX139fr0473TJ++lM5Hxgd3cnM
pa5Oq3ISv6pUzwdF4h5t4vdJtIGsqx86RvgghVPpx1w3kSa9es/+kwI/bD6l
eQwvqNFeDb4kKQ3wQ+tzycJzBxRos6ECdnGT/HCo0CRF7K487R+Te3jHMj8M
ccT9jFyToynqfqyxExGAeW6LZsiVpaVd/c4XFyUADke8Pf58lqKVGqoTO9IE
4MN7GfevxlK02+/jbZhLBMAu/rlawFVJ2jvefydKaQLwormK4Wm8BI2UuuNX
O9cuGIi5eeL2UVGaubA9L7PMLlAOGv63HCNC82o+q2anvQsOicnTrofvoZ2e
Fwr56LsLhh4+dGGKE6J9clMY3XZ3F/gvc5T+fiZAW/sZsWLbuwvUvkkWk37y
0zjy6rlLx3bBNGOJq5goP03nsaalIpMgrNs+Tr6fwUsrJJq22boIQiXj77uG
hVw0tbF9ZvohgvC955udwjgnbSAj8pXSEUH4+pn1XmwFB415pOgr6yVB4Did
bbOfsoN25NiU8KN5QWD1m/VwfMpCE5T/dbVhUxD8PwYKLj5ipjW/YCdX8ewG
N/XVzwzd22iL0iTrZK3d0BNsw7o8ykgLeJp6VDNjNxyIOFCwfR8djf5QEats
yW6o7Bmyu82ziStFrxXx3di9Vb/V6UfKBh458PzWj+e7wfHQ4FBIym98SHhK
a/LTbnA+PywpwL2OeR6vdg+u7IZ5Q28m39u/sI2g6PubwkIgKRZd38++gue6
iKFlqkLgxplSHNT/E2eGm6xkGggBZ9hps4uFS/ghjtgZFCwEm7vn1L8aLWJK
YJu++F0hWC0NqSinzOJXHM/7OXqEwJt2fNzMfgbHtHxy2RgRAucjPJ0Hj0zj
G9vZo979E4JWKbr8XKaP2OyeyO8+bmGY19h3yezRBJ72Ip68Ly0MwdE3MPuF
MSzW6FZZZCkM5/fMj+6+9Qa3749QTPcUBhJr5+9nH15i922pzQdihOE1mwH9
V7UhXOR2ddC2WBji7wwq3TLuwUSGNnf968LgnrmH2f5kFx68OTij1C4MA4JB
oTdWWjHr5so/1k/CkL+6+SZ17BK+fI3tzK9lYQAOwfKML1HY0FFk1wzLHqji
Z39TVFCGjl42VnuksgcmVWMpn980od12bm0NsAf8e04/eBzThprXws2qnPbA
aJ7XzfT3nWjR6qx3cuIeqKjPdrt0twflrFz5Gp69BwRNg7J/BvUjxYsPDrtf
3APjV3/vvrT6FAUsfczTfLwHAjWDLB7sHUL0FSvCsiN7QNM3R9878gWqNGG7
xvd1DyyfIyy4HHyJRksJnT+4RKCbfe2rruNrVPbqJme8jAik8RcqP9J/g9w5
5Lx/a4tA/Vtpeq3db5GwRfXtY7YiwD6hEUT4/BaNp4v8Y/AXATNW7lxUPYwu
4FKbU4dFoLNJ4vui/QjyWue9sD1bBMgn9jq+/DGCxMh583lVIkCnd+5j6IlR
NBnFrsd3TwTYbOQpujveoUvXT5wp7ReBgHtmwT0n3yG/abqxPRMi8LWuVDBz
5R2SEjuqeGlJBGYH7meuu42h6X2/EmVYRGFJ8fHF/IYxdLkotv+6sChQxJY2
aJtjKOj5N0FVgiggOU72X0bjSI49NKTRWBR8cgXpqo+No1nj6fuUfaLAFdq5
qVA/jq6neLO0RYrCnoRloZWRcRT24J0rNU0UODK9AoLWx5HSisuVR8WiMDz5
fuM993s0r/ZixeymKEztW5NtlXyP6sKsTQZootBxxcDKUfk9irrcW2T/WhQO
x9znold7j9QmDadfz4rC1+dcQUJK79GiEFbftyEKf9o38xfF36MGF+3099xi
wMHir/eK6z2KzW966SsrBm/Cgk9y/hlH6k/VJGd0xCB3XzHH4odxtLzt5oEw
OzH4uO0FYwdtHN0D2a4FfzHIsaSQ2svGUfyRS1wHE8Tg978fXMQD40izeY/P
r2wxmLRZfu6x5cfaYsmdI5fEQKE6L/AY9zhqVeLd3LwnBhr4T/nLsTGUFJRr
m/FEDCoL2kWLqsfQ37GMb9k/xeDWiE8kVXYMeW1PrWRlEgeefBxZNPUO0a7p
91hyiMP8dVd9lcp3KHWqhf+5pDhMjAW+/rr9HZpMjdfnVhGHvbfFpyJpo8hA
lBzopLmVrxkSMh8zihj23WkathIH1euTNzMGR1DG4GWnyThxCLHLSXZMGEbT
4f5HJFPE4fUptmvLYsPIhE2iJiBLHK7NHNa/3/MWMRtXLM1eEAcmivYYH89b
lNlaWPCjRxwCNi8xqNW8RmdqU54z7JaANqNnuaKPXiBLcigPv5QEXLr65CBz
2AvE2u3oIqciARy3diYGc79AGVMyY1YGEiDQcIrY7zuEjkoOzBSFSsDCeVn6
q3yDKKpK8J/sAwlwl6roT9rWj5QJDAba3RJb+41iFVdEH5qjfU23GpQAk+Rf
rHWve1HwB8wW80kCMrYbNAre6kE+ooH8reySwHiVzcw7rhs5VDQoW+2XhJN5
TbxikZ2IS7k82jNQEgZFj8xtm6ehwbaMxuhoSegp5H4tykBDlmN7tYrSJcHL
wNBLTbcDGQr9M3p/UxLURB/W7J5sRXQ3/jv5/Z4kSKxt7Ma8rQhrv+in75QE
0VDPuqNWLUh3X62d7GtJ+KVSICbT24zIpZb7o/9KQpTT0hnxhbtoSY5ceZxZ
Cg61Fp06Z3AX1d8X+XiWSwqiJxwUR0sbkcrwYlCLtBQUvypYrXFsQLICJbH0
NlJwRoaU4TBdh6Yvp97j3SsFMwJuJ748voWqNcLWZHylwPKeLF/S7ZtI1EX/
mOUhKcg+fZuZWHQd7Sqayjp7QQqGMyqvX7tzGQkq3ctYuyIFB33u9yi/rUVC
D0+meNZLQcKQ8VM1hlokuqhwSO6RFBTYy81HhFUjGesYn7ZZKXh8cCL6zs9K
JDtlsF98SQpKhOk0nhddQPJJvK4n/kjB9UfmRS+oFUj5WrOVHYc07LLaIzTf
eB6pM21QptSl4YMdc0UI2zlELh8kmutLg/4tmnfeyllEIVUp15lKw52DZbsi
5gqRjo+R5OF90pAZp8p541s+0vvFJzLuJw2OxV+MDv/KQyh3ZpdBhDQEQE9Z
r1QuMmjP2rk9RRqQhY36tZunkaHTftaYTGkw8zt0qZA5CxnPKTO+KZCGcxUW
tV4xp5C54NBaZa00bPtWkGIWnYHs4gSmSU+k4UqsMfOYxDFkv312ouSVNHBz
az1YbTyCHKtbR/+OS8Mb1/2LIR6JyHXI43nPd2lwt/3xOmclDrkFqz5RWpcG
o4ZYgw9Tscj932Z3PoMMHF0+afD4vxjkqVzzwJ1fBvhs5U/J7w9DXo/i7tFE
ZaCwo2zNdDwI+bib1kvLy8AY25/tCun+KCDzy+UFHRnAc7+styW5oyCxtion
Yxmo3+Wg/aHMGYU0Z5e32MhAkFr+BPm3DQqfVitI85GB2QIZFskfRBRxhD77
v1AZ6Bwm/KYN/e6I4nl10vqgDFS4mW0rDCXjWIg/KnBSBh6hvwMht61w3LDZ
4SN5MnBZtPp47KwDjo/aHTtZKgPxRx7SSH0uOLGiPfjGza3v1Sb/LFj2wEnq
uX6c92TAmH70+YKYDz76xNszDsuATOURtZs3ffExX6LbaK8MCG6kd6bt8cep
awxO6IUM6Fu78+49EIDT8l7b1Lzbwh5dz1auBeIM2SvmrNMy4CimFir7MAif
7DhsFPlNBkL4hfKa24LxKWcL9HJVBlzHroqdKArBQk2DQgz0srBKic8M3ReK
b/M6/yJul4XkJ8NHD6+EYsODo698+WXh3SU7kYHgMPz2pVd9gZgsdP4tiOu/
E4bDSNPZXQqysJta0CnyLAxvFISG/lCXBfeJOI5+WhjO/7FgIoFkISHZhyqR
GYalHeIkHcxlITb4x5nXsmG4pX79X6qjLESVuVXMVYRia66UsXoPWeg7+8uy
+2sInoxmapkMkgUTjiA5If4QfPB5VhHXAVmYm+p5vi4UjJnVOA/AEVlwMHKk
PNwMxGW5RTYxJ2SBO/zPrGhPAH5oc5F56LwskBa+T15k9MOuddJTmzWy4N2/
+7L/cR88t+MGTe22LNwkCHsPj3li7oGmhLyHsvAmx4jKbrIX1yrpuNAGZOHM
NhGrtWknrHWGRvz+dovvdO29D8ftsY/lkznbr7LwckxWn/uKEV6+btd7bEV2
a39vE6Z46uBTbG9qbm/KQos+l5TrIyUsFOqeOsEmB6m7nlUZH9rsuN33wYOD
Tw4EpVonXpyWRIbygdpIVA7+rmw//6FVHb09NccfJS8H4glPLvjZ6KOw/6KX
LpDkwPSqhl/3siHaMF0ZfKYnB1FJJ0UpHaYo/0rSzQ1TORjMCsmN/WWBpJnp
MlUc5OBTf8QO7wpr1BJ4IsBzvxzY3r4VcuCKLbJ+zG6QEygHas98aR9Z7dGk
dL5IR7Qc8Nrax3JH2aODGfy/5xPlgHPESiU3zR4xT5e93ZMhBwbT2Y70Zvao
zEj8rnWuHAi9TkpYTLRDqjWX846WyoErvYrY42c26CGDUsSt6i2+CSNpwvlW
yNWv3nz8lhyQ+ppBt98cfenSkNlxXw6w8fkDjOkm6KhEG71elxy8y6YfHOwz
QFzHYSL8qRzoLQfVXbLVRVpgVfL0gxzUxwl2rJVLoIGLQwf/fJEDunO8pi2K
Pzt8Nl3slZblYDI727qZWw6fwj5sZ1jl4bbPCf7L+wALic58fsAjD/MdyONp
jQm+nRz+cG6PPAy6/Pp3ctQSv9WLP2JJlIfLr8vNm0IdcVjFn71JuvJwdC2y
QrPLGW/8SSXfMJEHSy8bkaV1V5y/n5n7nZ08xEwxzwTw7MPSbWe+sbnLw7KS
4k4e9v24RYj7iXaAPLSL1lh+e++BrZOKr4RGyYP/V75QliwvPDkqnH4+QR74
6izvZjP64IPal7z70+Sh5yx3Gs9NH2xZxbFslS0PT4cNJRtIvliS5Wjm4Dl5
yM58Jvjzqi9ej/yyx+GiPIx0HbiWt9MPD712bXh1TR46BwWe/wnyw9d0u01c
G+Vhne9VNEuLH06pJr4baZMHHYWR6Ggmf6was4NxYlAeLv6z2gwq98fbhhNL
fEbkwdv50o8TX/zxuP5/SlMf5eF6h+DsXe0A3FTr3Bn4VR5SQm9cKD4dgM9s
f+g8uywPd+PYvr0bDcB+sWpfwv7JgxR3slO3dCDWGa1I/saiALxpmu85QwMx
N7DzxHArQDeHgHXz5UA8e+XwlSUhBVi0ivj0byQQ03Z+1jkkrQDPL+0Mf7S1
novjHJ//UlGAanLVzT6BIBw1RvNP0lSA9Q2zli7hIGxiqLL2FxTgVbii5n87
g/Ce62XZKZYK0NDSjEkLgXiZk1WCwVkBStUuJtrSAvHT+EP3MjwVwDovWtfi
RCCufv/JgiVYAVJotwhiJoE40dh+IitGAUK2h7nIMQVi+5sdsTuStvL54P2h
3gAsz6PEkpeuAISGgvtGZwPwZkJpOXeOAtycZd8fHhaA337YRigqVoAlA1PG
7bYB+LbpwW6BKgVwLc4446EfgE/UTbqdv64AwhX+3K80ArAHn+034bsK0LU/
5XSuegBWP9J2vLJdAfQfzR3WIAVg9k/yAhI9CiB/O5jdWDUAfzIvvlHzXAH+
een6sEoH4NY7jFTZUQUIqHq1v5cpAOcLHHh17ZMC1AvHEZ61+eOQ5IlgpXkF
uEPYYUnV9cfUaau/dSsK8FJ7bntxmh8WsGrNJ2wqgNxae8Ppi774W4OszF1W
RQgcN305f8MHdwsWtWrwKAK5y4b5yglvXJFCb9sirAirNho6ZBYvfHAm6pOO
jCKMSOuCDYMntrQZj+9QVYS5XQWR99M9sGSTxXbQUoRZl1v18YkeeF3o/sWH
BoqgMuPJbdrigYeOS5NNrBShq/VhOHGnJ746W9DX66wIxzi/KisMe+Fjdpse
ll6KYB1Qw+vs449dmyN+DAQrQhLrFXL7Vj9VRN6dsDugCAWZdwteGQZipgwz
oZdJiiCmn3T2bkwgHp9ruu2coQjjbsyDoVFB+K6DpNFwjiI8NmpQeM0bhE+3
5A3vK1EEwciuJhntQOwrthE+XqUIUHU2qvhkANY6GUbnfWML/7I/KSAZgLm+
DRd9vKsI7RJaRfDHH//nZKIQ0LHlh9ezyYUX/hg/aOyY6VGEl9IeaWeC/HGx
hLhj6JAixJ7vF1m64YcjM3Nmvo4qgsD+5w8qnvhi4++/k6KmFKGxMv9j1zcf
nGhepNg1rwjEitTHHBI++PYllXe8q4qQE2MU6Dvkhad+92QFbSqCtmj/Qtw5
Tyzo7KPdyqoEeduCCdvKPLBN3frsdh4laDTQPn/n/X6cxny21EtYCSYzrX49
cN2P73srmzdIK0GVZv3z8p/ueL7l8S9GVSWQOSB+mHbBHUvweF911VSC8Wqq
9W59d+wavuZ6HZTArrUi7lvbPnymu4D5r4USeDifSXZm34c7RZSabZ2U4LP5
d4Of4m54Jb478JKHEmx28MX7MezFikOe/MuBStCkfken64ELPpuWH3c+QQmM
3y09/PjXEfeNKUjPH1eCDvbl7uyrDvgv+dErdEYJJHb9w+xh9piY65FeUKQE
mWIuRq5ttjjovxXS9AUlUIkcWsxWscHlkPeJclUJvvkt6IwQrPHQefnCrHol
WOSKuddTY4W3/ewyGG9VgogL+/6VmFphHev9P1QfKcG7pogUu2eWOPryctXx
ASW4/VH1oNKKBa79l2P/+o0StBflveMpNceje+Xo5D4oQdRVA66cFlPM0dB5
J3FWCXrFx6+8STXGRuzu3gM/lMCb+S26qGaIE/x/coj9UQLDajoD7SUqrmvP
xgeYlEHnC76Z+kwPf+KXjereqQxHuk0e/0jRw7uiaSK7dimDzaGS7VFAxdZ9
bs9CxZVB6+O6dNUjA3xcYulou4IyhLXu3isbbYSbk84oc6orQ+zPW9yTZUb4
6yvpcV89ZYi/d8D80DZDLK6CzzSZKMODcdfK77cRdjm5V5fFThlGfnDua9/U
wqc/LM7tc1MGwlt6vSETdUzTOl12y1cZJteufpC/p4CXC6QsN8OUwW3n2ILT
OD9W+Nq+7hCnDGtKkguVFxmRl7Hr9dpkZXAUL8ojfJdCZy98d/t1UhlWNc4s
TMsTUN9qJqtlvjJ8VvrK97iGjDbsJFsqziuDs+SE8cUeTUS63hb8vVoZUqVS
TD546aBgBpddhre29NT/HB0Y0kMV+xd6iu4pw3vdu5ckZaiImUNCVqdPGSbq
p6fteg2QbvCDN9kvlIEHTbwcGjZEMZ1OJz68U4ZDI0qdvtNG6F3syemMb1v8
Lo/ErC2ZIM4BsaLhVWXgmKOzHlwyRcYyrUaKdCrg1eCVVDNnhhKPOf48yqYC
sXWMC8HD5uj28Nfq5zwqcC7Z/tWzexZoinDCUXKPCkz/HTCsTbNEgqdFGQ7J
qECMXMUHNV0rZD11v6FXVQXqCncLJL23Qsf1HHyFtFTgQrzq7bwQa2TuVbmk
aagCQkrad1I+WyOO1K/pLtYqYBfQRUe1sEFvLmnxH3RVgZe5nvx7SmxQxaMT
V/J9VKBFwWDC/ZUN8v/8UvN2mAo0idgKejHYIkUW8f6ncSpQEez9NlzOFv2Q
j3T/ckwFiiyN4yqNbFGL5YOvzFkqQOwkVY+52qKUCJZk6bMqwJvUu1bqY4tM
c505DC+ogL+ohcAfb1u0s/7SRe+rKsCa5rH4zckWvX6xQEhuUIH7w6RJHV1b
VP5T92FZmwroiX9IrOCzRX78WU4tj1UgSymVOjRhgxQ0306/ea4CDxLm4Uqp
DVp0k4r/OaoCF41yWjgMbND9pBgW7mkVCOAQaJYZtkbHKjpKVRdUQGPl8X96
7tbIBLMrWq+pgLLwZOFUvxXaMbm3LZRBFTKPsQ7My1ihV/SXrU/tUIV7aSS6
uChLVCa19L5WQBVKjg1OfKixQHLB2XSTiqoQ4f/IPmXEDC1kjhZskFXBS5gp
bGPUFDXdkJUSpqoCZ3Z01+KACTJc6DRxdVKF0P0X+57nGiGvQyunB46owurq
7XWfU/pIpsRwz9wJVZj9tpn/VkwXzbfk1bHkq0LQ4cyswYdaKOmvwpBhrSo0
C/RITyIyMhA97OtzWxXq1C5xv5YkIVboXkpu+X/94oxeWQIa9OXOKH+oCr1l
QvwRlcroXLoXf+uAKiS0siixgwLyuHzzytu3qpB0kpHxiZYskuxd01yeVIW5
Z8YLfjlS6MusST/3V1WQ3s1XVg0SqJ79rLvaiipMG5yRdbsiig4rT3613lSF
I0zfz0ecFEbIViU5jE0NzGYK3xUJ7kbbYpI4MnnVIML3pAmT7S40UNB78bKI
GqjS9E9ncwugs3f5iI/k1KCGtI91jxk/cn/j+3CSqAYPO1mf6z/lQxK/bjv9
01WD2eSsGxdi+dCs4N9pYVM1yKSdTOncwYfu6FjEa9urAfzndNHmIC+K9yhm
2euuBnQdvgmv83iQ3rGp0rgANTDP8w/LceNGjFUExcIoNchPTJbyLONET7qS
2+4kqIGPfOhvu9ntKH/qifWzNDXgMieFp9ezoL3bBCfmstVgUe7VP6WdjFtX
o8Bo1pKtegWOa5nqf/U/mzfSyV5Sg6orYuk1kz/0b4VtFhjd3KovZco2r/1e
X+f2+aZjtK34kiU1WZX5DuPhwY2FPjVIZVapseJb67ClYzLzfrnFZ/6J0jo7
PfZ3jBqlft7ic5M0f46yHUcdqZGsX1ADt1/10h1ULpxQOxIuvrbFr4rUcIeB
F5sekUhJ3UaAzDQblnL+3fgpZ3uNFjsBSsm1qmmpe7B9rWvfIgcBjp5/1eYt
Jo7fav2Yv8ZLgPY9IscHVSXx/mdnuH0FCXBtRrrxVpw0nvSVpewWIUACB+mZ
3aosDlrtdH8hQYC+vI5uhhYF/PX0/pQsWQL8bfho8KRdGceIrdYYKBHgW+e1
oV2MBLxyN79vXY0A8YxfiOxPiDjJXOlbA5kAfxJKPps1quMTB3wokogAFptj
qSITmpid+Y/7O0MCFGC9Ti5hHZxfdi6l0IwAvim8DPwRerjs0ZM+BgcCFC2/
PzNwHrCYW+C3By4EuMSQ6VQ8aIBr5ze5D7pv6RN7PX6LzggrHi+jKHkTgOHO
xOcMZWN8h19j/5Q/AX6/rTe9Z2uCyTeep5SHEGDK+QuWDTDFD1BYrVMkASJq
xL5oh5lh6ium/u2xBOg17LpurGGOu4MvfnsUTwBrJtn39N/NsMVfbZ6jRwjA
10W9ofrGBA/mv6aQUwkQ8+qVTSyrIXaWid4/n0GAqtRk+TPiuni0lS21NosA
TyKdvnTdU8detrW1HrkEePDre18XPwFPf0L9fGcJkP8z4OfFPgIOPTz6baCE
ALH80TPZLmS8sD2O50QFAVI2ZjQIx7TwwSoOTf1LBLDLG+eWlNPFa+Tr+1cu
EyCxPDS/XkYLH+s3Sq27QQCvd5cyAtIUMKPXRG3gHQJwtRRSx2b5UeZSQr9I
EwHK/gR8qLbURhyneBfetBCgmYlIeSFtjM4K3+bJ7SDAP5nXpVUsZkiw3lzT
9CEB1CHJWUXXBF0wntr/r4cAnNLgO9MHSHI0ObX5KQHqH3w8UuhJRNciBS9H
DRFA5ktBUtoPZ6zCcLdf9g0BJlJbX0xkB+LGYpuFidH/zx/b8cL1rfOt0ixP
yQQBGlvPH2iv8ccdtDRNuykCZJzqczvn6ocNnUU8WGYJoCIkOW8n4ot7Z++n
0uYJ8H6ZGkMb98bWyY6XD/8gwOJDX9GgDE+898qphf9+E8B857RG9Dc3PK4j
yVu1SYDIE/S8Ni9csd/zdk03JiKgePz+7ntn/J//Xg8uNiJY/5HntWNywhFr
P1L7dhJhjhBMkiM4YJ0DQQIzPER4cFn7WeqyDWade3eTUZAIhv7Zs/dCzfFb
PzsDCREiBB18t6bqaYAvjz16iySJMGTkRH++h4jjnLUiPOSIABHC5FDSgr7h
s1v0ScpEOBa/4hlQr464TCVKSohEqGh9eNcYDNEEPqd8j0IEkjeloXjUHN3S
ZH/4UpcICukfGwzkbVBS/bG9i0CEgMP0X0rV7JC5ws/5naZEOPfuUs3Rg3ZI
oDo4TcmKCOPl974m9tuiaaHxXRb2RIj/6F8g9c0GNZ61rwtyIcKAWmnVAyUb
lLrjsWGGOxHmuw09et5YI7sT2iOXvLf4/seXHeFsg0T/1UXSAojgQZ3pqWe2
Q/PxkozvQ4kgWy5Bx8nvgB58Ly79HbXFrzxpJ3+wE8oM2a4qGEeEhprHv51D
XJHrx5RHGolEWHm0THq7uA9Juy+7OR0jwsJmrHVWjydaehmyEJNOhP8cMQ/n
Sx/UafU+PTeTCNLBD8+eqvJDud0Ou2/lbPlVwx/PrBKAPPR7bvcXEmGKR4qW
5BGIFJt1jP8rIQKHZJdWl0gQWle9M8p0gQjNi7kn5sODUN9VqWjJaiKku4iP
8doFoWLxUia4SgQ7DZ1N/bFAFHB+R5nnLSI4PPWR+acciEg8x9WONBDhSPq6
hZt/AKI7s9Jd2kyEacrm8aPF/miQMcy9uY0IxncTR3Z2+qGKoxPfX3USQdWq
h6c90xeFrzie+PGYCItvPP9TeemFdKJ6hTifEsH8R/x981d7Eet/uvXKQ0QQ
ZyqIOKFshd5615tYviECXe13vtNfZvVrR6THgt8RIW7Xj9fD++xwrMP5mBMf
iOB2RSw4KcoHw5OdzDXTRPA5I7Fa/zMEcxillXd+IQLjQYIa2Mfg922rhIkF
InhlHa8f8T2Ib5HDe/78JMK7G+K2blGHcFLdh/2717f6SzElPXSLx+ayzj8o
/7bijS5d0FKJxwIX+046M5KAlekBrUbsEJ7epb8nlpUEPO3nkxSPH8SN+Q0N
eTtJ8DR51TvpxgFsl1Y2/mQXCQrYviW4q0Zg0T8csbN7SCC8Mlr5814Inj+Y
zsIsSYLs9fvEEKNAnBkYQTJQJoFkUZcTX7Qndp2Y7PUikqBnppg5smwvlt7r
4nmUQoLU/KqQcjtHvPS8f+m8LglkzKrPPx6yxJ3mKPM+kIDvnCEb7aQBzu1q
FHljQgJ7oTOXpvuI2ENH7u6SJQk6k640/gjf7FhX4ppQcSGB4iGwTh7TRasX
hI6ru5NgcLd8zCk9E7TMKSOt7U2C02du+d20tEY/jqv1ogASpDcaVSkqO6CF
n9phxqEkmMs7pXuV3wl9DTTeaRlFgvzkTWAiO6PZYdt6u4MkILxK+8N/0QV9
ttjn5JJAggb5WrY929zQpzb/VffkLX5me9RpS+7og0rUeZ80EsxEimiqDHui
8YsJekGnSCAqcrWCVOKDRrnTP4RnkyA0M66v7osfepuek3aggASxdBxlcWpB
6NVKiczhYhJE1n9yVYsKQ0PB1X1Hy0nQrPPH85VXNHo2eis8rYoE+3K9D5yk
xqInVvc5Mi+T4E2x2pu+0jjU29HVkHODBN0S6Q3xsfGoW23A+ewdEuzKWONX
rjiMui69/VXaRAKVbb1LvNsTEOb9WFbZSgL/0/4xze8Po7YTX/Vr8ZbecEtD
GcfDqOXXyuT1RyT4MMkkbncjHjWOscvde0YCDuH+9nveh9AdG/4nD16SwPXm
mFdTRxy6RROL7BwmwS3FZrpDInHoSg357tOPW/4AsJdMxaKycC/qpxUSqPOz
CJ6+EINK3od8+u/3lj+Gj37RBGJQkd3BE982t/QcvZbpLRuNctUzn66xqUPb
pzQhN/lIlPanYS+nqDpE/VbiK7YJRSmR7b/5pNSBq+BdgOreEHT0Q88FIXl1
iG0o+vDTOxjFPxqbkiGpw3DakVT2A4Eo/My2GD1TdaCZpFZ+uueLQjY4eQ2t
1OFczt77kSM+KChaqNnMXh3YZXKvO2zzQf4fpffZuKhDi7F13fUjXsjHSe2v
o7s6VDxNmana5ok8H2tfdPNWB1bfoHjt6/uRu6axoVeAOtiL1nDuCHJHzsL7
MkOj1KGTXjwvUNoNOeT4K0UfVIeQhJAgFfG9yHYzcjAuQR0KFthyjBRdkflU
Gl9qmjoExJ9Kb93vjExccu6fOKUO+0vO0J4mOyHD3hL3M9nqwPBoh+3pMkdE
1a7eyC9QByFc7pRe4YD0bt6qKi5Wh5pugWcDYfZoTPzmRZNydTB147lYJWCL
koqvVy5fVIfBY3VSuH3rvrnj2oWaWnUovFnk3dZmiu4fv1LheF0d4sNDJ58I
GCLXX7Xl9LfVYcc5Zro9XdpoOaKmrL5RHSLUmzanZ5QRya2qlKNdHaYPrzM8
r5fEL55VlnR0qsN3RonAw3/IOMboQnHEY3Woz36t0TRKxZyt5eeEn6jDyCjt
eWa3Mb6tWlb0ZFAdMsdbyfPD5timtvRs4it1iCk5+X1mmzWe311SKD+y1U9m
uecLurb4dN65guFxdfAvNPgycdgOK2wryj/5cUuPe8ZiWp8d7ksqzNOYUQe6
OfHeEms7HLSYnzs9pw4amuH2G2q2eFtQXs7Z7+rwbvByxpsr1rh2LCfbcFkd
BLdte2I9Y4mNHLLP/FhTh6Pbf57rFbLAn3pOn67a2JoPSe7vYSQzfFwvK8uO
gQwLv5HAorsRFm88lfmPmQwMXExdj4P0MU3u5Km67WTIdJaxsXPRxl4XMk56
cJHBXDpLdEVDE//lST+xnZ8MiyBuxUkh4PLM4xkPdpNB/G0jwz2/nUjnX0p6
qCgZjs0/PB2SZYhGDh5LE5QiQ/aDl0wHnzmiw1+OHu+VI8P2Z174laM7EvA+
khqvTAaFdYfjPpc80b3XiSkyRDIsWSju8P/pgZwtE4691iCDu+1et7ESd/ST
Fp+crkMGa53d2hIKbqhQ49BREpUMCR9rrh875YKINw8e+WhEhmXNIAM7W0c0
JB6blG9OhrdiNPk30dYoqjgmkWpDhiCPD1kyKYZo547ohAUHMoRcVzCoIKug
W8cjD19w3dJHeS2kOCGOLX+Fx1vvJ0O+43vVhgl9/CUi7NAfbzJcJK54+Q+Z
4cxPIXE3AsgwUhM7nqVgi+Xcgg/uCyXDjS6tHp0v9rjnWWAsaxQZCq4uTdys
cMCBRgEH7seSQZfHSzz9ogNmavWLCTpMho3tGvZ8oQ64RtU3mv/oVn1TX0F5
VQdsWOsd1Z1KBqokHv64YI8nd3tFHjxBhrOczFk/rtrjlDyPCMnTZBj8pt3y
y80e/w50DZmoIIMDMz1yBVt8fsw5OOcSGf5uTmcm9NlgLQenIL0rZHil+2Og
cp8NHu5xCPx6gwxsGTEaj79a43g9+4CyO2Twu6o1pXzEGvM32vpbNJGhnE5N
4DG9NW6Ss/FbayGD4kjhMZ/DVtjxgpXv1Q4y8Og11Yq/tsQ/eCx9XB+SwbO5
75k8jyUeiZAcCuslw+TbN3WTuy1wZ89vasoAGX4birfs+2OGr4m/unP2BRnm
zV8Jnm03xflJN8Wuvd3qj3FixeNgE5zwOj2vfYwMSuGsLSbsxthH1WNzaJIM
m88nD/HcNcTmmeToz5/J0Bcwz651wAATPu34sD63hbu5h5UdAQvqfbblWNzq
h5iL/MVOhOmKO7DkytY8II9v7kb6ePb7OVXN32R40Z7GHKWqh59bRFVabZJh
SrC1hS9RFzfXmHL4MGnAUlh08U8uXVy5IXosjk0D1Gw9c+fGdfDJvb++ZXJo
gPPesuQ/XTo4quG55wVeDejUDnlacEMHu26/9qxBUAOGunyCQ/N0MApM1e8R
2cKuvDov43WwLM2t7p2kBlwbal57E6GDd+4minyX0wDrasLOD6k6eDmWLYdR
RQPc5D3/GHfr4PGBj393kTRg9vGYOruFLu6WfRChrKkBVV83nvWJ6+FbqYXj
oKcB0xIJ1U/36+Oid2HWLgYaEKIWBw6sVHyUbNQeaqoB4m0Own9KAQfkCisf
s9KACPs1vupFA2w1+7O80F4DRMfvn2/IMcIkw4HtV100oPLDuZSVGBMsVFF7
pM1dA+rjWgpDzpthhtWjX597a0Cm4e492kyWeM7OZf90gAYITfCnjN6yxi+v
qzxdC9UADpG6G8I5dvgBI7PuzmgNKDpUsfOmrQPOut8sREnUgBmJwQbPImcc
w5132vKYBrC8xW8PmLlit/Dg317pGlDWILLUtrEXy4sJvjuVowGSg4Ef6T32
Y67ERYuKQg2wek3/ftuaB1572ddaX6IBO/oeHipK8cKTypcUHldoAD8p56rl
N2/cdzLx/OglDSjw4Y4VrfTB9ZMObAtXNCChsNmQneyLS3UUExluaUCsbqzO
uWZfnFrE8EWgQQPij+ip20n74eCFd25KzRrg++Mug8ZRP2xrfreP2qYB7iUN
Lfc7/DCl+oyWc6cGpC5pa3TN+mHRv/7XQh5rQG3iZve9DT/M7KonmPxEA+wF
bhyM3cILd/gyC55v6a/e9cjsix9+y/bt1+XXGmBu0R+/+NAPY//HwQ9GNUD/
coNkRrYfvtJxYXhwQgNoOSXKgeZ+OHdXvNnU1FZ/Qwy+K6z74vgDtvd/zWqA
4lzF7dRLvthEZrNY/KcGbEy43TCZ8sHKKcPMGmsawPSk7I7ecR/MN3on3mJD
A/5sPH5zSMwH/yVlzngyUODQfwE+XMneeDrbxzWWhQIJ2TLJZ5q8cNScsiRh
BwUMmp2N58c98S+z9W/fuCggnjFqdGnIA6deftx6k58C2Jr8uPzofszOWHgi
VIgCSnZ/K/JH9uEiHy8HOTEKdF/8tsz/ZS8WwYoin6UoYOIkdlGP5oIJiY+a
fFQoMFOczFKg5oAfvM1LFSVRYGSQPcFbxBYbkT2sxykUOPBl6fSLYEs8UCAv
WKZLgd/tw5uMMWbY9fvy1F6gwObnhzzMDiZ40rrrDr8JBWKrzfO/bu0fYTdy
jryyoACMzNeYpxnhZRZ3swJbCgw+1ZjoyzDCyYGyvHZOFOgPd5+lf22EmR8t
Texwo8Aoa9L+ak1jnC9Ou/HEgwJOstsjcouMsdCxM/GZvhQQdXrmzvfZeOt/
vNfQNIgCFaoJyf6SJlhVW5qDKZwCD0RnGAJNTPD94sXRrmgKUCzaBuUsTDAs
t19OiaMAa3VBvK6yCX7ikHVAP5ECLy/5Lcn8MMbOd1z0/yRTwFjrvwKxSmP8
fockW2saBfhyrvSBnjEOClt4HX9qi59khJ/NWyO82PugipxNgXPf3zeYHzbC
STKnIpbyKfBjY87yn7wRZkx30qo/R4EPCk/f3VgyxNmTYkxRZRQozDa/szhs
iAXQ/HOlixTgV9qeYjRiiKvKW8q/1FDANuki068FQ6ywnhF89RoFPlotbgjz
GeFGVwf1wDoKHL4/L7EXGWG9JpFNyUYKhJYO3R4PNMI93HNPJpspsK/qLL/F
SSNsH91cXNlGgQvtRo5qxUb43UCan0cnBcwyUrJVtvz3V7RTFXpMAe9bL83n
dIzw/Cnh38P9FNB0K1kuqjXE8Z//e3xucMt/zm3StXUGmM6oqcDpFQUefd7v
/dEU8OmqVE/uEQosPCS31D7Tw3z/rBWej1Og2nnfP1F+LXxh/+6V7I8UaJJk
YVeLIGHZ1s+dljNbeJKlsXNIDtcLNGazfqXANfvEnaJ3eLBO3DG3nu8UqP9C
vm3xmRU9emEpnbFMgWVtM+tr8bLIWm3XosE6BTTc9pzKilNHb7On2jY3KGBo
my8RkqWLfObunOpg0AQRpZCnsRcM0Bezo05HWDSB8D7SLFrWBMVeNhfT3qEJ
+dOMWaeMzdFfBv6vq1yaEOoldOPLpCU66fOxuYlfE8wPjZabz1kjTlyXFiuk
CakFG0FvXGxRqXCSLUFME1QLVTm+idkhyURToQUpTfBL89cIt7ZDt97yzNyU
14QYg4CGghlbRCF/aAhV2aqXnyR5iM4WdRbcTJYjacKLNf+OiQZrZPH9sMVn
iibY/zsXeFbACu0hip5k1dMEfsFKcS9pC7QQ2/1QyUATYu9Xf6gTMUNdTWGb
tqaacOjBC9aLIiaoaJVLL9ZKE4wZ/xRf5jZCQVr3E87Za0JTYlJf8R2EtJM8
77W4aMLduuJtFDYi2tHOuDTmrgnXDos/Dyxc0p/YuK666a0Jy9zUdxdrpXA9
1T5cMlATrCe/c/0zVcTpx1evmoRpghvlIQvLRVns+qhiOiRaEx4UnORprHZG
8tuMJLLjtvxKJz3VlXZCv02/eN5J1IQLVAW7IDF79Cwzr+zlMU3gqqzgb5O0
RFVPNIZX0jWhUtvqZLCMEYrdMc67O0sTajVFBWvO6SFj2zR7vVxNGGp2EJM/
sxvtypfP8T675f/6XEmNgTyaezHYn1aqCX/9Twx05Zmidt5DzFcuaELv8b/H
l2i6KNdF2Ki/WhOqDHqvW/sII9+SrpT5q5qAH+cWy3x2xeTR4HbOOk2w27f3
5m9WH8wszLFOatSEyemsL8W5XnjEo0nD9b4mPJl87Prf1v/tZqV7bGK7Jsxe
KJ5qPbsf20te/Urr0YSeneOOOo/dcJkCTFiPaULU8HH2G1edcET4jFDMpCb8
YpMrLi1zxNS67L1nP2sCs1PMzZZkB8zznVTUPKcJvx26Jy7r2+NpwujQ6HdN
UGz+2Nt51QY3x6bs3FjWBKXTH7/7nLPEWU0yluK/NeFt4TaGQ3Fm2GP16Umj
TU04brfaHZ1mjFW1Yh8FMWnBVMJBxoJfW+szSZDuNJsWcCy3zBh9peJXbViv
jkML/MgOXwLX9fCVjYDEIV4tsIw0Nj3xRgcnULc3/xTUgkMTMeERAtrY6njD
koCoFnx6qh8/EauJRR/tVdOR0gIn4bbDNxY08CLTv3BPeS3If0GR1Gki40em
tddSVbRgrFZz17u/6rg40/JzDUkL1jKL42QZyTjkyaJEr6YWcC19rhpeI2Pd
HSVec3pa4H/859mKTQrmsNUv32moBWG/nrXXS+vgybypYYKZFuyza70y5oXw
3RdZfM7WWmB4UJ9q3GuAT/ISHA47aEHHw7sDL2jG2M3lbU6ZqxaoVQxyxq+a
YcWSo0869m/Fh4ZuqBta4Y0RSZaPPlpw/shZfud4Wzwk1G/EFKQFO6TezlY3
2uNqj+hUuXAtsLkYd/fpDwccV8nfYRmjBXsVN+IjPztis8m29chDWvB+Bejk
jzlhIUk/SkGSFuhcOR1V1OCE5/1ZDzalbOmj6nNLHHHCC5XGHbQMLUB3/4Xt
m3TE30dTWZ5maUGRq9+NyVkHvMjX4fA2VwuaPsw6LV6yx0t26+Ufz2qBe9xi
V5uOLf55WmNmvlQLjnLGb4hPWuLlxwcIaxe0gI7j0d8ibzO8Snc7ibFGC5SO
cnwPmTTCv3TnujmuacGpndhW/hjgtXhZTqE6Lfg33TV6sF0T/27w2yfTqAUj
US5c4tns+M98ZQ3hvhac0331O35cDf2VG/um264Fy26K19yuaKB/fru0zLq0
wGLn9/PRhRS0ecEpzbFHC0pmUp4a+CghutG8Ac+nWiB6IWDGwWNJn4FvQCB0
SAvkxRot94b36TPZsfrGvdGC+qpXP9xtedC208Y3U95tzcs72+Htf3gQ8+PU
ldMftABeCh/t2iOGWek6qMXTWnBFLqn3HIMhZtddz7r0RQsGijdvKCc44u3x
Gq9vLWiBcOyGYI3Dfryj4YBoy08t+CiWDu6uPphjvi7k0ZoWlIpaiiY1+GAu
ubnGwY2tfAvJxP56L8ztJ7sxyqANvS5nDLfv3I95LviZfWbRBoHqG3MTdnsx
30hlweIObdhuyfj5wKAj5ucdG/vDrQ2WpKWJvuuWWMB2lyzLLm3giCt/vxCI
sGCWUwzPHm1g9jId4u+Swbu78x6ISGhD1Znu9vp4JiS0+ZRJQVYb7tGnyefI
yKI9Oqx2ZCVtEM82diz4S0Qih4zPUwna4ONdEhxZQUGi9alTlhraQLdanlN8
iITEv7aruOps4Y7mUO4iBiwhu37Yl7oVH7IUeeKWKZb01XgYYawNr2Nzwy4x
eWDpigM7Eiy04aXpDHKaDcGyw3Wu6bbacCVsgOtcSyyW45mrynXShlXi6kSq
UiKWt5H9et5tK1945Q+rUApWzPTTuOypDVHM6gfSFo9j5UeVKfV+2hDq7/Pb
6UQ6Vvn3rr8tWBuaq52aS0kZW+erXXy9EdpwWPFnyCxzBibEOXm9/B/F1R1P
9ffG0ZJKkUpCdmXvee+5z91WsvfOJtkjKglZWUVIe4lCKiocUglFhJIQJSGr
b4okfp/fn8/rc8857/U895xggt9Pz4VgjZNYtTyzeCBCB/i7a67ZccdjtYlX
/43F6EB/zlnh8RdxWNOVcWolUQdKtHj2/3kci/WMNSrkC3VAyrm+iXc2FJNO
BS9qXdKBTpaPYDlXCEaNdxn06zoQ3hlmWq4YhEFb5oNdmQ5Uzo/rf1L1xSyp
HVynGnXgncFJf+675njcnV2s91IHVhaWDmeuGOL0K5Ems68IPoPsKJtkGlYe
ujV3vUMHtKc4fxpZ6KIu0d5Cux4dyP835b5ptRGKcOKm8vbpQHqH+1WJJ2ZI
qEj7W+OgDrzIcCz+V2SB6vp8Tkd+IfAa3eh8Wm2NXHcWqMmP6cDGiYrwf/q2
aJVty4ehSR14c+KUxFqaHbqZ9+d47g8doHg7yt+MsEcGPftkDH8T/GuHLHp4
HNHkVvvXy4s64N7tei6t1AllmqeG3F/Rgek/sz56n5yRavYTQZ/VuiCwV5jn
5EkX9O7NBBZerwsDOTz62765oGjeXZ6dm3Rhdb/IicHdrkh4v9GGJH5dELTt
8hczdkUNaTH3dHfowjb9ftnqo67oYGupzcwuXQi6//Ej/yNXtHZ9/79rYrqg
svr6EvOvK7rN3njdVlqXwKva9o3uhoyTSIabZHUhxy716ViaG5p5HjD7VFEX
zmwteML52g3lrLqQF6GmS9wn9eu8/rkhDVobSU5bF16dHh/03OWOeuP+ff5E
0oWL6iKi56XcUWy9QspZqi64hXp8ciO+7152UjJg6UKsx7Hn8mvcUSMpo+ef
IYEntDY3YMwNecXgmMoDujD6SvkZR4sburMg2rzLThcyxn3xcIIbOqB1ILDD
SReeG6Z8MHFzQ/+FHxdIdNeF4qgJz7NkN6Tz85PrtL8u7LivacKx4Iqapi7/
aTimCyUnNjUsEHr4yndeCj+pC0NGO29TDrqijf6cLNlkXeBxy8yMM3BF5mNu
OWeydaFVIclxZLsr+iWTo62fpws/kn5lX//jgvI9GweXCnWBxquzs7HRBZGu
/5dw75IuFEWtZn885YI+fZaQ87quCzcsH/xtZLugeHGLTqHbutBRyMoJ53RB
Mq4nI9/c1QW+3TINex44o5aL90USKnXhutiZDRYuzihg4Msz7WpdiFk7JV7P
5Yw2Cwv4TdXoQqStuM2pi06o0p6x5WqDLtStSji3S80JLby/7rihVRdEtLT+
Ths4ovPbe7ga2nXBgz0QcLjdASGrNbfDunSh2VBp9zZTB5T41vPXQL8uNPzt
m/5xwB7t5cs7nzOsC1Imh2K3ddih1weaqOxRXYhrquW8amqH+NtkMipmdOGs
Dv9WWyNbtDyjfKN1Thd6HT9/LLhngyb49WpH/ugCR0zL0OJaG/ROg9m1vKwL
tUGzXC/o1qjR9sCE4Go96Je206p1sUJlMXacauv14PJ5M7Nwc0tUePGg4H5e
og7x47y21QIlPT2k5L1VD4aSxQPtzpuh0JFI1glBPSi+9jkv+/kB5Lou3um8
iB5sEfh+Z/CZETKWTQ97KKEHHG2l6kn72Eh7f17amz16kPXU5OWtSSqSCrp8
dVxeD+K2dImc26SNtpwpebxKldj/zYKgdIc0Wnr4oENEi/j+Xb56qG0jHuvF
37RIeuCquv/y1zA13P23edmMSpwvwmGaaErDDaJd2wJYejBy7y+XVrIRvkMd
kE8y0oNKZtLy2jvmOPHUD/snVnqg3mvMvcBywppbhaol/PRATSzjv2hnPyyh
KdVOOqwHLd2h5CD/Q5jXTvGrdZgemB5IyYkiBeHRi7Stacf04PudtMIoFIrf
PjWWvXFSD3zlslYfvR+G8Yg1tT5ZD9pPPRTwEI7A52T9D//M0YNxrTNNX+ui
cML+8KRN+XqQs0PlQM9sNA4KOn5hzwUC74k5Do+NMdjxTMoD6lU9+O954jt1
3lisX3XmlcMtPTB2e+YsOxdL3JcvfA6/owdSfjHugbVHsdjSrT+Z9/RgZelY
V5TnMbxxd+WWkiqCb/Gz79umj+EFau2e5zV64HeeddDf6jge8WhCgw164H3Y
89pS4XHccarDauGFHvAHug7excdxbUlfAP8rPRATf/LjRcNxfLtt5KR8B8F/
/d7F6SvHcd7sdCGrRw+wefNxjYPHcfzWP/dc+/RA3tlUfO3a4zhQc1XLkU96
0Pj72/V96cewvd2mobMjepC30dOqfv4oZsXumC8b14O1r87naBgdxaqXxHlb
pvXg8+eIGEiJxaKNctJffurB/Ke0/PYHMZjnqwbp34Ie3HT7dOhvxxH8ex1Y
7FjWA33e030rQ9H4s6yhn8oqEkwKrlMQG4vCNUHO+Z6bSPDkgVBK/FgEFk4u
N9XUJEFWi+MGyotAXFJ299kfXRLwiP90x+sOYe2eUs06CgnSI5oTbGn+uOnv
7dtxDBLEOhSa1x7zxZYSxcIMAxKsfTdrs6bVG3/Wv5m5zoQEmkbMDRQVLxx0
+DrXK3MSrBnzCvtU54GXc6+GZ9gQ+7nMsnhDD+L02stjZo4keN999fhpY3cs
9OWiwzY3EpQ2RZ8RBDdcvP5Ce68nCR6uihNZR3PFmsrnqUV+BB/Nk6t45Z3x
c+uCBy6HSUDPyypS1LHH5kfP7ZEMI8Gi6hNt0X3WeOhabuFoFAk2Jyz9M+O1
xIGtZzaVHCXBl5UdKo4L5vjvbHbcoXgSDNxsTIv3tcTJO7J+Kp8iwaizcrO9
lx3ejjK85tJIwCV0c2BFzRFf90j/UJ1FgpmaFOHFx/ZYNS3VOCaXBBPSD1qk
ym1xw73kelRIAhue8yG0JzbYpDdJlesSCVxu3j1/YJsd7l9OuPHiGgkkLt/9
hf44Yj/pk4IpxSR4HDkDC3vc8ILRiTTjuyTwZohe2FhwECeFHF/eXEmCn/1u
SZ9HPLBAwdHgrioSqP52OMJb4IGv1seM5NWQII/qeuz0b3esPBptY99AAiO6
2+LEM1eMN0a1irwggbr1visN847YWC2CPNxC+JUo/2yDmzXuswuruN5OAqmA
Q4raJDb2iQuR9OkiQVyO+gL3H0n0+2ZQnlwvCWbbLrc/CDRFCW2B62f6SfBU
KEy7kJi//HMBsZXDJDBrsWDlpjujy0L+M+GjJAivFO6h/HJGilRfd53vJCDd
uDYileGMar29e5ZmCP+uJAfb7HFGhhme+g1zRN7MRNxZL51Q74ODNSf/kKAE
eRgfCnRCXh/dFNnLJFjiLigS2uGE4vc6C7SvI0PcbJqgoqkj2nLA8VT2RjK8
jOUoThlwQBfD7Rct+chwYexC5yVvB/S40XrooxAZbia7RgTE2CPWuKXFpd1k
cNXbw12+xh51b7Zocpcig4DNv10xWXZo1vHAnXEFMlz/sGxHKbZFe+fZUfNA
hkANyr3MIWuUL6ezZas3GZab/9we8bFAVkZtWdifDN8khb86rJgjfn83Pr8g
MmhZ/A1azDVHaSUp/E+jyZCVhbt86syQfqvImYBjZODklT2429AMrZ64t1Xw
JBlshdc6aLwxRcf29QkcTidDbMVVK9+wA0jPIDBXKJsMPheuBFnomKAFH67t
TblkkMmjcKYOG6MHyXl5wYVkcFQNOvnE3wgFF8vuELlEhvZX5Jlz7w2QYjM+
13yNDMXHuOQ+S+ujiW/mgmHFZLiq+m+fhy0LeeyJ2fnqHhm+GJmTFSJoSJy9
uTCiigwDluepDb6ABr2uCUnUkEFW32+x9xoJ2dx8tSv6ORmqHph2/1VSRwJN
LkVSLWSgxweNpK1RRh1ffwp3tJFB25PxyXl6DzKUFhbd854MTU+bOtXS+dA6
ZsXFtx/JYCp85VZ3zTT5uQdj97EhMgjmjQh3WHHiEwm9l/Z9JUNMlW7H9ndb
MboeINYzTgbS4P5wg3QR/PcZx5W4aTKY5cpVj36UwI++nBWX/0kGaElZNy0t
g8NW7bv6fp4MBsMrSZeu7sUqknUSJ5eIvKzwLjtZyeJpmtk1RU4Exnysykss
OVzi/lWybw2CWfFO8aGTctg7Pvp6Ig+CH8q3aX675bDU1U3SKpsRjDfDhXkl
WTz89MqN/q0IQrNSCsU69uKLwxoyyYII4jcpORWK7MEOnK031UQQbO75fBRp
S2NBcec9n8QReLvmcX0ASdwD/91KlUGgnKjzaOWqOM5xTdqrKYdALMc402xC
CpvECd0eVkKQ7KVaUNitijdcLtt3Wh1B3ltaw0MbGm6up5Vo6yDYO8JI4Xpw
ACd8eic7QkYgH7WGk/O5Daau+JVm0hAstT9d8/eQC14WXZHTYyNYVxC04d4d
d1yDztwZNUJwfHpsKYXmgaOc9yjkmCKYk8wf8fDwwOrHau6SrRBMJB+vsQ85
iH9cOKA4boegs2WYxrfZHZfVfSk760zgtcmsSip2xX4DkUpwEIHFxht97cHO
eM+/DRXfvRGMnH+X1UF1wCPCl5XPBSC4fsDJjrPCBl8hqd+jBSPgXr+2rei7
BXZ2bFaZDkfgYC9yQMPEFAvFOlYWHEHEPK76JOluiN+fn1VlHkeg5P0n7/NJ
Jj5bk3B/9iQCg84D8wnvqNj0o6B6UTKC93dnG89mkvGmv3cesE8jWH3mx/IZ
QQXcKkTV+JmNIOrXS9eKAg3UIVous/ocguCt9e1R//TQOwkRwW1FCLJUzbvE
vVioXyZtvcwVBPcCGA5ns/ejYdk/i5o3EXy4v35blZMxGlX0nmSXEvjX7Rf9
QPTbpGrPgG0FghLhhPk7k4boP036G9+HCDSPb1jd7W+IFnTvNRx5giAuWXWI
GWGAltHuyrR6BM32iW4mWvpoNf30taLnCCplcx6tX2YhHvbfs3dbEGScKmOv
6mOizUa+SbgdgUKnv0nXOwYSOPA+8k0XggeJVmf2/6EjIQum71Avgp3ac6cN
SXQkZnPf/scAguJ3+rICOTQk4yBuzPUFQdqGnF2vxqhI3iWTvHUMwfN4hQc7
lalI9eA/RakpBL8GvbRTnAFpe/uLafyHINFkI+PCOEJk/w98rHkELj8Gz75c
JCHaYfYqmyUiX82B7Sc36SH90Idz3pwU2Pv01OmyPTrIJFJyNGotBR6sRq+M
/mkiy5js9ykbKBCvrmHqyq+O7I+vNBduoUCWVaJzH48ycj156EnpNgoUc/SP
VZRKI69TH0trhSjw3M6T49YAP/JPM7jQtpvYn8ngph5aqgvKrM4YlKIA/+fU
zzbvd+OIM9JxM/soIMj/WgYsZHHsuTPBHEoUuBRg//DxsDKOP895kE+dAmm1
l45qjKvi5EuHLSV0KPBUpfr+uKcazrg2wFRDFOg6MsoKb1fFZ28ZaTHoFPiu
IPn8LlbBBaWP91rpE3hGBiiXbynji+V7hLz2U8DrW8XIi0dK+Pr93A2R5hSo
MNInZc8o4ZLqVf9O2VBg23PyTnKaCq6oCZ7Od6RAx3jaj6kudVxV/+nTbTcK
fNoTs1B/SQfXPtvf+cSLAi1rd/+WsKHgxpc1ja/8KXDPrqrXMYuGX77a96A/
iAKZm3PIo+uZ+PWbczemwilQonJMHVWz8NuuNeeWj1DAfKtltbU7G/e+D03e
HEeB/wIkn5rwsvHgx+FosUQKeLR+j908z8Qjnw74q6RSYF7uyp6qWAae+FLn
SMukQHSMV4/yFxqe/SZnYnGWAlKSWylfx7Xxr+8FFI8CCjwx0f/RySeEF2fW
qYRfpBDzVgH0irZgjrlwiaRrRL3hV1z2TxG8duHL1nPFRG3S8OnfJjLeuGS2
pvguBWplQoTu2ppjfo6G348qKdApxTXikeyMBVcrjrVUU0DpiQVL/507FuUu
+tBXS5x/lCS2NOOOJTfyvPr+lMAvkd0hFu2G926Jql1qosCKeev7iQ8uWFFg
9O6m1xS4avdnfY2PI1YXtLwk2kmBd2pd1+qLbLGucGOW0juirqsfKf5niT9L
Sg2O91EgMXlJLopkjlPkkuSuf6JA+rhzccVWU6ysNhblPELomXNBc5RkjHt1
DZsExymwvXoNf7saC8fR7mztmqIAF4ODsrNMA+815HU7/R8FhhyyfnG82Yo6
zILK2PNEXlWe3bnM1kSRdm//ci5RQH3QaJEip4cylQulnDkAYoMlJ35lkdBB
dSOjGi6Ax4sryUnRVKSlvRQsuAaArvGqWOizAdpAupsfvg5g9NtdJa1PZmiQ
4lz/dj1AiTj7/vMgS1RJ3zyqtBHg90Cd9VFtS5TEbth4mhcgaOdHPwVrC2Rv
FKw2sQUgQn//ieVIc6R4QMKevRVAgeL6KLvQDHFZdMVd3wbQw47wOfHEFN22
12h3FgJw2CYv9d/IfhTrPDpXIwzQWLIuYZOkMTJ1P7dr526Ajjt6bQOhhkjK
S58WIQ6wQ/kgI29YHy34/vHpkgToLPERFwxho9eHSjKVZYg6rCuCS5qFLgc7
VJ3eC8D5/eHig58MFBa+cWBCluAzM6Iv3E1H7Oi6VfoKAHKpilZamIaEjgbK
3lACoJ7uXBS8TkXTcbvNuFQBBvrt3nzyANSY0BHpog5wPSVo05tKMspLPnGx
VhNA1+q/l9sadZBfuuqLnToA+PZGrv1d6ghlffkeoQcQUOW/ZUe7AuI/e5a/
m7g+nO2Vj8xhi6Gv55g6KgDQQLK7LCs/QX50/rdLBg3gjnjkIScshNMv3Ur6
zgDQF5ibv/FZDrtes72rzwbYfDz9zetEdax+a333DQMAEfLH2vkNupi79Mki
lzHAzxrM9VwP4f4yf3FXE2I/D+vgrkjAFZXC+nWmABp2XEl7tlHxyaq2QCEL
gCN98gb5G6jY+smx3EgrgELP2CKDeMCyWKm22wbg+ZfRgTYrCl5+OvRZxR7g
5qWz7XYBZPz2Rfb6TEcA4/Tu1p/JevhmC0150hlgLPOo9rFpHXyk7ae1gRtA
XNDVs3l6Otik8/rRmwcBKtgGZG1NXSzeY3V9lRehh//TQyUpZDzXu/aVqw8A
S+uUl2g7FTf3V/+o8wP4zzrgRxeJhYuGfAR3HQLwuB+zyu2bEQ4a2UmJOgyQ
IjJh004yw4yxVs+eYIKP39WhuHpLLDgZk64aRug7ubPLWNsWT87I38+MADhW
9s812t0B1/8c+DAZRfgj/VmTzOGMc+YzOAxjAMKUwqMNPrtgr7+UPbeOAlx4
TAqZiXDFuiuz+1fHATAF9fONs1wx76qrYW7xAJrgH5Kh74rX/qm3+JEAUPzy
0nldE+I+ND2geuIUodeIaO7dG07498hfPr5UgOVj6VsCPzngmb6dPy6nA4gd
sW5vFLHHYx1aHcqZAPE8N1C8gC0earIqb8gGePVSrsrZywr31oZmmJ4FKH+p
HGnLNscdldmHhvIAeE6ltSo/M8HNxeXGQQUAd03meL4VGOKGi21yHEUA42nc
m1ck9fGjs995si4CVBmsaU9wZOF7qesndl8BuHzEtVU6g4JL4va0lF8DII0t
aLV1S6OrEcxiyk2A1g/bZjPYxqgw4OCpN8UAogdFFP0szVCO+wkvl1KiP+6Q
ux/LHkCptpeYM3cBJh652hZzG6F4kzqp4xUA1sO5quUCLHSE8XHV5vtEvrxz
7fbpU1Go7p/PFx8CmN1ROEI5qYcClHc0Kj4i/Lgh8/7CuAbykNG4gp8Q+T1/
5nGwoTJyFLaIM6kD4H4y6n1HRBJZ8ge7DNYT+XKKujXJ/Z1szJ2JAhsBen0H
aOlFkpixfEdk+TnAAgJauKcGJs21Lp1+ScwD51ntIyqANSbGPoq0AqiKF5X/
LWZgxaG1NXdfE+clJT4urWJjmXdSheQ3APZBVL3lIwZY9DUtuq0T4F/HsM2O
BEO8vdHV1qkbYN1OmcchDkaY99Exral3AE+DDPdErDLGa8uKth/9QORb2Tzf
kGGMl689+bWxn+gP16PbOjYb4/mC3u6iQQKv39UJ73NGeDbz9335YYB+Pc2q
zSpGeCxR4EztF4KfN5YckzHCQzGqIcajALZJPuGq6Ua4N9jUrH8MYGpzPGeH
qjHu8A5UDvhO+Le8cqOgzxg3O6VvXpoCoL2zW9Xgsx83WJRMp80CFGXozM/U
7cePDZrbdv0EYHDkliZX7seVlNE7pb+IfOa6F8ZI7cclGqvT9RYAXkQ5Kypw
GOOrchL+rxYBDO9XyU4wDHGhOBg6/AO4aronq2SNPs7Z4bzv+wrAXPDmqj4v
Jk7dFMsdw0WFZAduky8FNBy/qvAbzxoqjMzw8pmXUXDMn+qmwnVUKLy0VyK6
TBeHzfTckOWhQvVPTZVv5zRxwNefCU82UiHpR7s++4Ea9vjI52G4mQqMXdkV
gftUsWOnEr2PjwpBK2Mjd3+qYMuX+yX8BKjges3E5fFXVWxc58+5uJ0K3W92
FZ0vV8eM+ylDKTupMK+37pX4tCYm375Vv1OYCmO5NufUGTpY89KLi7dFqXA2
XSG5I0gPK+Z+OaojToU7yfxHu++RsEwap1OLJBV6iz++f+Orh0VP7CbZyVAh
6+28MnVGA5eFcksM7KXCLIvhojkgg5HXj3VuckSt3SxeqceH2m37pkYUqPBa
69NYd6I2cjJ61uWjTIXrnrN+O9+y0ST5zuNJVSrwdjyO3/3ZDMUq514K0qDC
zlBHdlC4DdooeSxxTosKbWf+M1ATcERF27z9o3SpsInD1DfBxAXJc5uaLZEI
vc4ric+HuKKaRW2tOAoVLIxyLMIDXJHhlLjIahoVnh+yTmF4uKC+TzyrkhlU
sF734wh93hH5vf05toFN1G0K35J32KPF5/3tmQZUOChw0rdMxQalVr94sNWY
CmZLmQIfj1uinSVlhedMqNA82sOlGm2OiovOxe0yI/xN+lsl/doMaWfGeV2y
IPy5L3hSl9cCNZ/wNZa0JvybfHrwYYo1sg0zV71lS4UyMbXPoXsc0ZiXnqCc
AxWGZP8d7652I+4zUstlToQ+btRzIu2eaK3xphFVVyrEpwWV1H/0RXnod0uV
OxWW7oqFrnU7hGRUPpXrelJBt7A0UW3qMKqSbM7F3lTwYxo/2p8fhFjb78XQ
/Khwr+HnffXEINTDXejWFECFvprAo96Zh5HH33i24WEqCKcd8d637hCam/JX
aA+mgtDAp3fz/b4oYchyq3kYgb/tnlPfCS8k0EX+0xNBBYncvYy/lIPo+guZ
T3bRVJAqs1/5tN8VqT3a/GIghgoa3N8Ftso6osaShRK3Y1TwevV41eNBO2R+
YTjraxwVdj+LdBsasEOfM1sjfE9SIbU7v7z0igMKib/vOJVI6L9qQ3mRqDPi
Ci+iBSdT4cq9Ab+Gda4o2ztx769UKtTkvLn0dK8rErMP5I0+TYVa46Jwbh1n
VGFsM7eUSYWJpLseCy+JhzUF+uJyiH5rKvokVGaBOlT2NazOJfQWcd1gvWCA
XKX4byafowLH1pYBs/XaaGb737SNhVRYMKzp0JlUxcfWjwRnFVFhWWbTaCOf
MeZdem0jcInIPyfXQYt/5vji9ENy/hVivXCCXMJRK6w4fFFS+DoVtlMWdXv6
rDHuOrX+8k0q/LVaOaDM44D3NwXNSN6mQhy7c494lgvuf2TXc6uUCj5+lw/c
c3XHAaW0GrkyKpS7FXNe9/DESxfkrpRXUOFtTY53qaMPTs8SOKV2nwrZu/Nv
hlX4YeGT/wKqH1Lh9ovaeS/NAFwaPmqu94gKVuLAem9xCOv6vNGuf0KFPQ6/
mrIdA3Gr/SNReh1xXunWVnG/w9h+/5XVL+upEDVpfpTBCMITlNQJw0Yi3zNG
Ac+7g/AR1dCO9udUKP2uLrjWJhivl3asMn9JhS7R/HBeHIz9dlIMS1uoEKbn
PZ25OgS3bpIYXPWaCifVi0dO6IVgOa41IY7tRH9syftu5R+C039/W/Owgwpa
cU6iODcET060FmzqosIajefidTUheP+nuwpePVTQed8g4T4YgnmbQ6129FEh
WFtYo0g4FAfWWo8f7qdC7tvZuErtUPymQudo8yAVbL/ox3uZh2LlG8J84sNE
vmv7VDl9Q3FWwcr16C9E3nz2+J+NCcWzpz9rv/1KhScb46PEUkKxWfyL17Jj
VGC95u6tyQrFlRHFricnqPBsZE/xo+xQzO+fNvdxkgofJynuz9JCcYhLYLL6
DOHP0rrA38dCcZeFmfDpH8T8yGOIDfqHYnV99YqvP6nALx5Q5WMRis+SdjDQ
bypMtnQO1WmG4l/Ki+/zFqiQXzQT8Gd7KLaWHvCfWSTwu8Y1ts6F4B28185c
XqHCxcRklfUlITiKuLb+4aRBq21AWMeJENz726fGbDUNarbWW/+wCcGFnxS/
cK2nwaNYs9DFlWAsfO+Jqic/DbhepZVV0YNx7I0LTXUCNOh6U/Ogjz8YDxTE
2W/fQYO72d+SooeD8MV4VvzLXTS4nGBO9T4ahMUs33buk6aBIm1cstztMJae
Hw+a1qKB2HBF1fd1AViRvLM80okGKuT7STqdHvi+pO9fLlcaaK7mmVSw8cDa
PI/ZGe402BUsY9M+cBDT3tsOXfemgZ/14IlXE+7YOjif720wUTcimeuzrvij
zZiTUxgNFk5YyZn6uWJXpF0yFkED/jGBap4GF+y3oZe2EkODEKtdu2ePOuHj
N3aEySfRYN9pufyyS7Z4dbp3Q3UyDYQO1wlO2tvg1JDqjfQ0GoSH2gh83GqN
z1Jsbthl0WBji/ARmyQLvFPm1o+RHBpEdKi1L9CJ/t04Tw7KpUFfKVq2X2eG
iz/kvUsqpIExj+tUxYH9WKFhVIL/Ag3+ld8TW+EzwpU3NQ9fuEQDBSUFhdcz
+ljrdFLN3qs0kHLJVbGeZOHa0HfrHlynwZJax31XHiam2stYUm4RfjiOnhE3
puMmiLjcepsGaSk3BpXvU7HRnqZJqzs0qFIU44wlnlEdm7brDJfRIGE4tTZ6
jIyt5jwTA+7RQFslP3PivB7u63vYOX+fBvbp1tWD+TrY5eka0ZNVNBCwrc5I
+qiFR25Z+fE+poGWqvbIC2dN7Jtxo6qghgZ1cmOitsIaeDrsF5c0psH5h86a
XJvUcagD80BFAw2kX+2M69qrhheouef1ntFA+esjywhvVXx079dvTS9oIEFN
zcxuUMFcmzXUzZtpoL5uaEJPXgVv7O9+7dNGgzNu5zI4xZVxdqPUzrk3NCjM
yLeQpyvh7bfDPI+/pcH2yeHDGmxFXJT5/B5PDw1KfjXEVCgrYPEIgeXc9zRY
KRDuDX8gh286ehiK99FgVKfEL8l7H5anP8i7008DPRZFarRNGt/bt/qL1qf/
43sowvAWw5pbLJWeDdNgP3n59O5QPlzz+1qMyQgNzGfYDVZeE2QY+Pnywyjx
/eW5PjVhUfTiGV3Ac5zIa1OIL/2REjIsOeM6+50GX9r/TF0f0kFvsr7ciZmm
QZhKG9OkhYYsI9X+rP1BA582tX9PDxugD04nmTk/abD2jslzCV9T5Mzoyhb5
TYNDvEu7e/0t0RdZycHiBRrstmdyDZbbIh++UFn1vzR4/Hi36oy4EwoZ5H9m
yEGHvS3+nia7DqLmJse6Ei46DP3revZW0ROJlt+s5llDh6Negh8/yHujsHOz
9/zW0WHu8oauNzy+qPW47p3W9XRQHXnU5Ib9kJhPwk3ZjXSw2HjJpYEcgCJM
2y+n8tLhol2X9vDxQ+i1tuD5iS10MDs0/rYuNhBJiLvnGm6lw5ENx4YzFA6j
qPV3Mku20eG+PK2G6/Rh1P7jVwqPILHf2MGHh84dRlJ9lAQ/ITpENKiq/TQ8
jI40phxrFabDww/9qjdvBaKOkq4o2d10uHZTQuxyOXEfOSMSmipOh6XswYcb
vQNQbIz3oQlJOhxSQtX7uv1Q58F73oYydCg8mmqgs+KDZIz/upXsJfjUO1Z7
/ueFYtWZjjxydPgQLeKV+9gD7V3zwbRViQ61ixsEkn+5oGNTEkayqnTYGFz3
IkzaAXX3BDBT1enQXNGqkx1qjWRxFWVCkw4PPvrfGFg2Q3E3OXQNdYjzbnMp
MFqM0LsMQ/USPTrQXOREJ44ykHzkWUUeRIeoCZX9pHQSincZ3OsHdBD/+GXq
6lFV1MveK9lKo0NeDB5a2yaNFJVDRGSZdIg1DLRObNyOEgRrd6SyCb1tX6ZK
RqxGfRxr+ScM6LBzIYu1TmmarDx+YKOhMR04Ltvv4DyZUJfUWbC2xISohV4b
054O1/U//sLBY0YHuGRtyFexQFa9qvDX14IOvX3vpe53iqPk1MhfLVZ0qGJu
KG5z1USDIU9n9tnSoeN8ZOEvFQZSd9gwkWJPhwu3xX7uaNqPUulWI+OOdFDY
8cmA67c5GpK7NGjgQod4fWHTlSQrpCkw3nvbjQ6Vj2nPco2tUfqSatd6Dzow
DjYHyhVZoc8jsW2+XnTgG799rFnXEmm3Nb1s8aHDaGqaJH5pjjIebmnc50+H
xBxXEytNMzRywb425RAdMpw3TKgfMkG6Sderxg/ToXHolLIA0wBlBU5XGIQQ
fOc2Pxai0tGotXbp7TA62KtsjEm01EUkSvyN9ZF0yP915/H7OiWUs+f1Jd9o
OjzfecH03LwYGtu8vbAlhvAvZq+LTxwfQgsuZ/cdo8PEevHlbdWr0Nmh2xkp
cXTgDEfzzfJ+eKL5Z/J4PJGnoXu7P5l5Y7hHPmmQSIffFJUR6QIPnFdw6ujt
U3TgbVFIPjrmhidPdEauT6XD5qv7cn/kOuN8c8+Algw6LJwyGDBfb4Wndcu9
9mXT4XJK8/liaxPMkPzjmnKGDnJBjYk/r1Bx4Qa6w3gu0c/rDDrmVsvhmZ/p
Vgb5RB7fFdSpii2T+3uvWF8opEPA8xxZVrAcaq2rsvlRRIewisy1agnaqPrq
K1vmJToYieBjQwaArp8asiu4Qgf9Dcmhx7qoKCfgl/3UNcK/mxf2DbIAHTfj
caTepIPDpC89u0kLBWjudsotpsM/a/mv0d0yyH6XuvN4CZGnE8Dqsfhdp89h
4EK+S+h98vsR2k0ZrPHVyTW7nPBf9HrYgyNKWKI1xO3rPTo0Hf+wfuiLLN5S
fspd5wEdhJ8IrZLTEsD/zhQdPF1FB+7STq9f34TRRNQ9j+FHdFB3OdjPfV4d
9To1eWrUEPtdCBBwLwH0gvbRK6WODtORw67dr5iocs+s90A9HUS3VzV9DtZH
lzeu8VVpJPwV0Tix/I+NTv/Y6Zf4nA5cIYr/gocY6Mg7Rf8PTUR/K0V8eh0N
yKeGHqDQQvRrb6P3PYYOsrpse+jEKzocWwWXGVs1ES3xUGBPGx0M+69/Z4MO
UvaLP7yvg5g36noUYTIViR44F3T0LR38GyeGL1Sy0Qb1O8Gd3UQe5j0+hpww
QQuCT0Ok3xP+ZnFPXmCao9F/PaHRH4j56P+t/covC9T1eSKs7SMdrqf2xZcs
W6CGlyvh4oN0SKi5v/eLgwUquyMQGT5EzCcp5dP4jAU6n70vquUzHeoN8nml
Y61QcgSKFvlK6LV0iIsz3RZFOFgcCf5G5Leo/8COHAd0EHxiXowT/heZ5ly8
64hMpY/G7pykQ8UltyDxQw4I8eQcPTRNh9Jtn8QurnFAcjM3jz2dpUN6Qpl5
vq8TEuyuOb7tJx0EnO8JDrJd0drHHXG+v+hAkas0K7B0RXMXvp6om6fDynrh
Hr5XDmg4fjGeb5EO4+7S7qr1Nqjde3OC5xIdbNxe2pj526FaY6nEx8sEvqq5
nKsXndBtFZ2kTZwMuF2Z/TLQzxXlbTc55baKAR8OOiyZf3ZFCX/dkx+uYYDN
E/mWAA43FDwUmbKemwHaYWxTB2535PwiPdWJhwGclLVT8zMHkXHJlbR7Gxng
fWJxOLHfE+lkVqWv2cyAwSZ3wa1p3kgm7NVpOz4G5L7RcVXs80ECdkMZd7cy
4F9j0JRYty/iRL8yObczwDqHcmHijh+aluDJthJkgGLf2g/Hr/ij/nW7c24L
McBC89Xcps4A1DqpduafMAMEas3HePYFoupO/bNmuxkQ8i7raWnsYZRzPiTv
jySBL5V/kxtfMDoed+rcfhkGGO6XmnrWHowCPIvyr+xlwNP6lC7TzBBkb3iv
4JcsA+g7N3fakUMRW6mp0ECBAdJvwnZGvAxFtmv1LTuUGCAfUHohUC0M+Q20
bLJRZUBPZrViblIYin1g9HJAnQFlc+Wb/nsThjLS2uI8tBjwQ3PNz0a+cHTZ
/YDudx0G8BeSYjP2h6NKnc6fwSQGDG/nVqxJCEfPt1jcXUAM6Pr+94nyo3D0
7lu313EqA+LXb1mvMBaOxrC12FoGA3CWphZdIAIt5vZ+SGcxIOqc6cgRvQi0
8ZD9ma0GDPjm27qQ6BiBRBj9xoVGDNA4uld9VUQEUtzlvFbchAE6Bu31z5Ii
EPz3qf6WKcEP6XPzZEQg8xa3aEULBsxscBd9lBaBPC5/UX1oxYCHQebDB+Mi
UESk56SeLQPgGVONfSgCJZt8u9FoT6w/nBXNZRmBCqV9XQycGMB18e3tPZoR
6M7ShGCHC6H3gIxLIYEXdwW8tXZnwNiD5ObimXDifjGdNuBB1MmXYvNfhqOf
tv8tT/gy4JiQbzIcDkerlcMeBQcw4FN/96ZUSjjavu538EIgA1ZfMWh6uykc
6T78M7ImjAEejfNfLG6EoXg+zldixxjwtuHDid0vQtHZsfiEW3EMWKAO8hSm
hqKb9auR4kkGmCe3FWodCEWth7jv6SUTeZSOfTzRE4L4Wjefs85hANPo4bnn
vcHocrzowfSbDJh+/6ryuethVGl3WXjrbQask/7DL/gmED1XlnhXUErg+ayn
40oKRGOD0ga3Khhg9Sefxb3tEFLSU1BqfMIAOe76029e+iH8U+/vfDsDYqZK
S0uYXujK62p3i04GTH1iBZs+8UQJN9Ray7qIPFb+gD9ynsjARq7As5cBode+
cCyu8kDyyrc4nvYxwCHRt0LX9yDiXS/pIzzAgLt/GjKtWtxR9xMhra5hBrRf
yGw5GeWGqs/kXVQcIfzyu96z0OSKCgP416aOMqAl75ca72ZX5CLK0wPfCb98
cg5G7XBCEyf+hJTNMeBiiFrvzRBr1GYf3rd+ngFxRfsK6+9Yogq1H1TPPwwo
7BHYtNJvjsK/jm0RXmZABWdAzUt9E8Rh0FuWso4J6Zr+NGYXGX0Rt9z+dT0T
PAJulMsKaKKmxTdHYSMTtmwVztj9WB6l3XlpPL+FCRyXHtBixr7Xbd9SPeEh
xIS9AcEzhXVk/GdM1bxBmAkV/05eoOnRcP/Tsse7djNBU8xs14NIJsaFsuKR
4kx4f7lhiT9bH18JvZn8VpIJu84mvElMMMIJxhKzCjJMMFS0fH34gAn2kr5o
k7KXCdVK9S9rIk2x/PtcGVAg1v/3nhnVZY43V/BlnFdigu3xnfGFAxb4v+TT
v36rMKEsfVum5BtL3O223slcnQmiosGPqm9Z4WrdxOd3NZmQlKH7QtbbGhdu
5ZRfr8MEp6A3Y3GbbHDsZOwZDz0m2O/6qztTaINdXiws1pOZ8IJbr/zjZltM
uxjmvguYcEJi+8n+AFssHTnbEkFjAiiG7aqutMXcpgEqbxlMiIz4rO/82RZP
7B3LV2Az4fn7yomZJVvcxunBkWLAhA82n8furbLDFX2fvEeMmFDg9yCWd8EW
59x3eEMxIdZvmK3P/GiLw9Pfa543JfZ/U3qkr9wW23paXPxtzoQLAnl7iiNs
sR56s8bcigkhkTdlGlRssegOo0N3bZgwf0d6++xnG8wx29TNbc+Em1MLBqvS
bfCXZhrJw5EJdnyido8VbXDTFXyt3pkJ4wnMxzWvrXHxEd0Nu9yYMKwX6ZpD
6BMor9rX6Unsd909ezzfCofPCy26+DBBL/PVz/K9Vji2cZXQtB8TnpZINKs/
tsQJpyd1Yg8R/LzV574YWOI02x47niAmjE70XrJossA5kjg6P4TwO2Dz+Yw5
c1w4fbNAJpwJcts1HaMLzPCVx5mPiZyAb0D465NKB3BxQtQH2hEm9CjxVo4u
GODyA25/OmKZMOXrcnz/Ih1XCRnudDnOBIHYhDOR5XoYf1XVmTrBhG5ziV6L
HGX8omKXXUwCEyxc6B9jUnbj1zGro9efYoJb4+iDb2GrcDdrKv9cChNMj2eJ
Bi+9q/vI9+6RdDoTBNNvzVJO/6j73I9772cw4dsoRbuHtRGP37q1QM1mQuNX
swezH3fi2ZAswY4zhL7nTbPOv+RGC+Robec8JvjYU9c1nK0kr3C7207mM2Hy
BH2LXg0Vre02jDpyngmrjW7X2CMtxHtJLZ/7IpFfca5rPm1SaJuf8KO8y0zQ
UagZPkeiYWGNNb1S15iw57vTzuvJdCzJMT1feYMJVM1dAS/V6Vj21bsd1GIm
nGyOKb33kIZV8+q13pQwgVXQH2WmDljHrdjG6S4TJPLmmj9MAAb57Mjv5UwI
lfvK5yJCw/rz0eeiK4l8/7ocwwqn4gON7tXrHjKhV85WwS+UhK1PG73PrWaC
UsEP7nJndexkqz4v+YQJhyiksuOblLGHpMiOylomlH+VsIi+qoIDptdoQT0T
fv83/zt7nyYOfTxt3f6UCU3Oxr1PYnXxkYT3EY7PmYB/9NXFzJBw/IGGvIkm
Ap/BommBgR5OEbpdFdXChMJOgfyHXWo462v2u7WvmRDluOeu3wFBfK7iyO+z
7UwY+hphHbewD12MObhdspPgG6AqtDqLim6yjDXvdTEh8dffax7Fxugun4Y1
5R0TvLZvtGzeYYEe9ItEtPUy4TXfudvHva1R7a21eQ4fmRA753tzecAGPQuZ
eTg+QOBLN3NcCLVBreTensghgm9Wi4nJSSvUyf3015ovTBBbJ6joddcc9Xbd
3nb2KxNsZma63ugcQEMXczQkxpjA2VaYy+eoj775xlhVTDBhmlFO4rqviabV
PcLRFJG3EySu7T7y+PeKce7rGaJ/tluZXwpk4n+tGg/t/2PCv1cu8mcTDfHq
PNGesTkm9JnO1hXbGeINbut+RcwTfMI8lTOfUDG//KzAmkUmbGxyi/W8ScE7
53vVzywR80v1oiJ9NxmLNT61FF9hwkprQbBULgnvOV0SVs7JguyAhr3192Ww
ou2Zs+TVLNjVyXJ1ixLGmpKxD16tZcF/UZUvf29RxuRpj2679SzwkDsfELVG
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
W3/9+0f7OXUd+XbSHf8PK1E6mg==
          "]]}}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 60}, {-0.0007781501304878803, 0.09999999999982565}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solve for x\[CloseCurlyQuote]\[CloseCurlyQuote] and \[Theta]\
\[CloseCurlyQuote]\[CloseCurlyQuote]", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"textReplace", "=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"m1", "\[Rule]", 
     SubscriptBox["m", "1"]}], ",", 
    RowBox[{"m2", "\[Rule]", 
     SubscriptBox["m", "2"]}], ",", 
    RowBox[{"i", "\[Rule]", "\"\<I\>\""}], ",", 
    RowBox[{"Kpx", "\[Rule]", 
     SubscriptBox["P", "x"]}], ",", 
    RowBox[{"Kdx", "\[Rule]", "\"\<\!\(\*SubscriptBox[\(D\), \(x\)]\)\>\""}], 
    ",", 
    RowBox[{"Kp\[Theta]", "\[Rule]", 
     SubscriptBox["P", "\[Theta]"]}], ",", 
    RowBox[{
    "Kd\[Theta]", "\[Rule]", 
     "\"\<\!\(\*SubscriptBox[\(D\), \(\[Theta]\)]\)\>\""}]}], 
   "|>"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"m1", "\[Rule]", 
    SubscriptBox["m", "1"]}], ",", 
   RowBox[{"m2", "\[Rule]", 
    SubscriptBox["m", "2"]}], ",", 
   RowBox[{"i", "\[Rule]", "\<\"I\"\>"}], ",", 
   RowBox[{"Kpx", "\[Rule]", 
    SubscriptBox["P", "x"]}], ",", 
   RowBox[{
   "Kdx", "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(D\\), \\(x\\)]\\)\"\>"}], 
   ",", 
   RowBox[{"Kp\[Theta]", "\[Rule]", 
    SubscriptBox["P", "\[Theta]"]}], ",", 
   RowBox[{
   "Kd\[Theta]", 
    "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(D\\), \
\\(\[Theta]\\)]\\)\"\>"}]}], "\[RightAssociation]"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rules", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "''"}], "[", "t", "]"}], "\[Rule]", "xdd"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Theta]", "''"}], "[", "t", "]"}], "\[Rule]", "\[Theta]dd"}],
      ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"z", "''"}], "[", "t", "]"}], "\[Rule]", "zdd"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Phi]", "''"}], "[", "t", "]"}], "\[Rule]", "\[Phi]dd"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"eqs", "/.", "rules"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "xdd", ",", "\[Theta]dd", ",", " ", "zdd", ",", " ", "\[Phi]dd"}], 
       "}"}]}], "]"}], "/.", 
    RowBox[{"(", 
     RowBox[{"Reverse", "/@", "rules"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Apply", "[", 
      RowBox[{"Equal", ",", "#"}], "]"}], "&"}], "/@", 
    RowBox[{"sol", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}]}], "Input"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"",2,56,5,20759218728043700935,"Local"},
  "MessageTemplate"]], "Message", "MSG"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"True\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,56,6,20759218728043700935,"Local"},
  "MessageTemplate"]], "Message", "MSG"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"True\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,56,7,20759218728043700935,"Local"},
  "MessageTemplate"]], "Message", "MSG"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Column", "[", 
   RowBox[{"sol", ",", 
    RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}], "//", 
  "TraditionalForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<eqn.svg\>\"", ",", "%"}], "]"}], "*)"}]}]}], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"Column", "[", 
   RowBox[{
    RowBox[{"True", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
    ",", 
    RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}], 
  TraditionalForm]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Symbol", "[", "\"\<I\>\"", "]"}], "//", 
  "TraditionalForm"}]], "Input"],

Cell[BoxData[
 FormBox["\[ImaginaryI]", TraditionalForm]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "/.", "textReplace"}]], "Input"],

Cell[BoxData[
 RowBox[{"True", "\[LeftDoubleBracket]", "1", 
  "\[RightDoubleBracket]"}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Linearize equations", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"motorPDRule", "=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"motor", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"Kpx", " ", 
      RowBox[{"x", "[", "t", "]"}]}], "+", 
     RowBox[{"Kp\[Theta]", " ", 
      RowBox[{"\[Theta]", "[", "t", "]"}]}], "+", 
     RowBox[{"Kdx", " ", 
      RowBox[{
       RowBox[{"x", "'"}], "[", "t", "]"}]}], " ", "+", 
     RowBox[{"Kd\[Theta]", " ", 
      RowBox[{
       RowBox[{"\[Theta]", "'"}], "[", "t", "]"}]}]}]}], "|>"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"motor", "[", "t", "]"}], "\[Rule]", 
   RowBox[{
    RowBox[{"Kpx", " ", 
     RowBox[{"x", "[", "t", "]"}]}], "+", 
    RowBox[{"Kp\[Theta]", " ", 
     RowBox[{"\[Theta]", "[", "t", "]"}]}], "+", 
    RowBox[{"Kdx", " ", 
     RowBox[{
      SuperscriptBox["x", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "+", 
    RowBox[{"Kd\[Theta]", " ", 
     RowBox[{
      SuperscriptBox["\[Theta]", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}]}], 
  "\[RightAssociation]"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"zeroMotorRule", "=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"Kpx", "\[Rule]", "0"}], " ", ",", 
    RowBox[{"Kp\[Theta]", " ", "\[Rule]", "0"}], ",", 
    RowBox[{"Kdx", " ", "\[Rule]", "0"}], ",", " ", 
    RowBox[{"Kd\[Theta]", "\[Rule]", "0"}]}], "|>"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"Kpx", "\[Rule]", "0"}], ",", 
   RowBox[{"Kp\[Theta]", "\[Rule]", "0"}], ",", 
   RowBox[{"Kdx", "\[Rule]", "0"}], ",", 
   RowBox[{"Kd\[Theta]", "\[Rule]", "0"}]}], 
  "\[RightAssociation]"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"linearizedEquations", "=", 
  RowBox[{"MapAt", "[", 
   RowBox[{"Simplify", ",", 
    RowBox[{"Normal", "[", 
     RowBox[{"Series", "[", 
      RowBox[{
       RowBox[{"sol", "/.", "motorPDRule"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "t", "]"}], ",", "0", ",", "1"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], ",", "0", ",", "1"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "'"}], "[", "t", "]"}], ",", "0", ",", "1"}], "}"}]}], 
      "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 TemplateBox[{
  "MapAt","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", \
\\\"2\\\"}], \\\"}\\\"}]\\) of \\!\\(\\*RowBox[{\\\"True\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) does \
not exist.\"",2,62,8,20759218728043700935,"Local"},
  "MessageTemplate"]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{"MapAt", "[", 
  RowBox[{"Simplify", ",", 
   RowBox[{"True", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"linearizedEquations", "/.", "textReplace"}]], "Input"],

Cell[BoxData[
 RowBox[{"MapAt", "[", 
  RowBox[{"Simplify", ",", 
   RowBox[{"True", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]], "Output"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{960, 1029},
WindowMargins->{{0, Automatic}, {Automatic, -3}},
PrivateNotebookOptions->{"FileOutlineCache"->False},
TrackCellChangeTimes->False,
FrontEndVersion->"11.0 for Linux x86 (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]

