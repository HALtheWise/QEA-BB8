(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    291559,       6051]
NotebookOptionsPosition[    287254,       5902]
NotebookOutlinePosition[    287669,       5920]
CellTagsIndexPosition[    287626,       5917]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["The simulation when the cylinder rolls around on the ground", "Title"],

Cell[CellGroupData[{

Cell["Define equations", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eq", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"m2", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"x0", "''"}], "[", "t", "]"}], "+", 
         RowBox[{"R", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"\[Theta]", "''"}], "[", "t", "]"}], 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{
               RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "2"], 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
        ")"}]}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"f2", "[", "t", "]"}]}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Fn2", "[", "t", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"m2", " ", "R", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{
            RowBox[{"\[Theta]", "''"}], "[", "t", "]"}]}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "2"], 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}], 
      "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"f2", "[", "t", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Fn2", "[", "t", "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{"m2", " ", "g"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"f2", "[", "t", "]"}], "-", 
       RowBox[{"f1", "[", "t", "]"}]}], "\[Equal]", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"x0", "''"}], "[", "t", "]"}], 
        SuperscriptBox["R", "2"]], "i"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"f1", "[", "t", "]"}], "+", 
       RowBox[{
        RowBox[{"f2", "[", "t", "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"Fn2", "[", "t", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], "\[Equal]", 
      RowBox[{"m1", " ", 
       RowBox[{
        RowBox[{"x0", "''"}], "[", "t", "]"}]}]}]}], "\[IndentingNewLine]", 
    "}"}]}], "\[IndentingNewLine]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"m2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["x0", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "+", 
       RowBox[{"R", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Theta]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
      ")"}]}], "\[Equal]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], " ", 
      RowBox[{"f2", "[", "t", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Fn2", "[", "t", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}]}], ",", 
   RowBox[{
    RowBox[{"m2", " ", "R", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "\[Equal]", 
    
    RowBox[{
     RowBox[{
      RowBox[{"-", "g"}], " ", "m2"}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Fn2", "[", "t", "]"}]}], "+", 
     RowBox[{
      RowBox[{"f2", "[", "t", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"f1", "[", "t", "]"}]}], "+", 
     RowBox[{"f2", "[", "t", "]"}]}], "\[Equal]", 
    FractionBox[
     RowBox[{"i", " ", 
      RowBox[{
       SuperscriptBox["x0", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], 
     SuperscriptBox["R", "2"]]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"f1", "[", "t", "]"}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"f2", "[", "t", "]"}]}], "-", 
     RowBox[{
      RowBox[{"Fn2", "[", "t", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], "\[Equal]", 
    RowBox[{"m1", " ", 
     RowBox[{
      SuperscriptBox["x0", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}]}], "}"}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Define initial conditions", "Section"],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"initial", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"x0", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"x0", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], 
   "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"x0", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x0", "\[Prime]",
      MultilineFunction->None], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Theta]", "\[Prime]",
      MultilineFunction->None], "[", "0", "]"}], "\[Equal]", "0"}]}], 
  "}"}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Define parameters", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"params", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"m1", "\[Rule]", "28.94"}], ",", 
    RowBox[{"m2", "\[Rule]", "1"}], ",", 
    RowBox[{"g", "\[Rule]", "9.8"}], ",", 
    RowBox[{"i", "\[Rule]", "2.7425"}], ",", 
    RowBox[{"R", "\[Rule]", ".788"}]}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"m1", "\[Rule]", "28.94`"}], ",", 
   RowBox[{"m2", "\[Rule]", "1"}], ",", 
   RowBox[{"g", "\[Rule]", "9.8`"}], ",", 
   RowBox[{"i", "\[Rule]", "2.7425`"}], ",", 
   RowBox[{"R", "\[Rule]", "0.788`"}]}], "}"}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Control equation", "Section"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"goal", "[", "t_", "]"}], ":=", 
    RowBox[{"Piecewise", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"t", "<", "5"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"0", "+", 
           RowBox[{"5", 
            RowBox[{"(", 
             RowBox[{"t", "-", "5"}], ")"}]}]}], ",", 
          RowBox[{"t", "<", "6"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", 
          RowBox[{"t", "<", "40"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"5", "-", 
           RowBox[{"10", 
            RowBox[{"(", 
             RowBox[{"t", "-", "40"}], ")"}]}]}], ",", 
          RowBox[{"t", "<", "41"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", 
          RowBox[{"t", "<", "80"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "5"}], "+", 
           RowBox[{"5", 
            RowBox[{"(", 
             RowBox[{"t", "-", "80"}], ")"}]}]}], ",", 
          RowBox[{"t", "<", "81"}]}], "}"}]}], "}"}], ",", "0"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"goal2", "[", "t_", "]"}], ":=", "InterpolatingFunction"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"goal", "[", "t", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Time (s)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(x\), \(0\)]\) (m)\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<\!\(\*SubscriptBox[\(x\), \(\(0\)\(\\\ \)\)]\)as a function of \
time\>\""}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ceq", "=", 
  RowBox[{
   RowBox[{"f2", "[", "t", "]"}], "\[Equal]", 
   RowBox[{
    RowBox[{"10", 
     RowBox[{"\[Theta]", "[", "t", "]"}]}], "+", 
    RowBox[{"1.5", 
     RowBox[{
      RowBox[{"\[Theta]", "'"}], "[", "t", "]"}]}], "+", 
    RowBox[{".1", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x0", "[", "t", "]"}], "-", 
       RowBox[{"goal", "[", "t", "]"}]}], ")"}]}], "+", 
    RowBox[{".5", " ", 
     RowBox[{
      RowBox[{"x0", "'"}], "[", "t", "]"}]}]}]}]}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQrdT/d/E8uYN2DFCwnUNTPjdjvj2Mf7Bi3RKNjPVw
/jGDwnS2jP1w/omeSx5f08/D+Setmne+Sb8P55+aeLvwRfp7ON9rL7vfs/T/
cL7h/6SvYh8Q/B6F+HPKNgwOMH5J0q7SkCMIvsuzgiNbrzDC+Y/e3k2s+MoM
5yv83T7nrxkHnC8yL/WDaDWCz2Ev7KK3H8F/35D3Os6dE87fx6JqdSCcC86P
5Zl0vamCB84/y2vGyRIrAOdf8haaca4Gwb/R+U5t5hwE/wnrche9Owj+n7/i
DRHRgnA+k80XPuVqBJ+j6sLct7MQfOFvHbubbiH4Wu9+flsTKQTnG+hcay2v
RPDNsjaJOM1E8J2eZRldv4Hge6i4H1z4A8H3S1IOyJEQhvMj793OZYxA8ONk
dvw5XY7gp0RN6Z42HcHPmlEglbgdwS+45rNS+zqC33Hs14WI+wg+AOr8ijU=

       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBmIQXWHJqr9cQcKBAQxEHJz6XQ8s90fw2b7LvGMxlYHz
U/V/8RryKsD5vpqpH8XcVeD8TVdqS09aaMD51kJa61nqdeD89N+T5i6NMIDz
8489N17vawTnd0Wxqf7NMYHzk49XpxlmmMH5B9klA7MjLeB8Q8GGaS9LrOD8
hM+2On45NnD+wnlHZb732sH5m/usbl8KcoDzS3bZBsz1cYTz959a+qkz2gnO
F+l8f/3nTQQ/091yb2aEM5y/Ld7c+tUcBJ+pwnRn1kMEn8f664lfLxF80X9b
bnR9QvBn3Z/y4NI3BF/uYMkLqd8I/sUIeanXSHwAT99ngQ==
       "]], 
      LineBox[{{40.03188775510204, 4.681122448979593}, {40.06210328098255, 
       4.378967190174521}, {40.09555148532526, 4.044485146747405}, {
       40.16244789401068, 3.375521059893174}, {40.29624071138152, 
       2.0375928861847825`}, {40.32968891572423, 1.7031108427576669`}, {
       40.36313712006694, 1.3686287993306223`}, {40.43003352875236, 
       0.6996647124763911}, {40.56382634612321, -0.6382634612320714}, {
       40.59727455046592, -0.9727455046591871}, {
       40.63072275480863, -1.3072275480863027`}, {
       40.697619163494046`, -1.976191634940463}, {
       40.831411980864885`, -3.3141198086488544`}, {
       40.864251183276394`, -3.642511832763944}, {
       40.8970903856879, -3.9709038568790334`}, {
       40.92992958809941, -4.299295880994123}, {
       40.962768790510914`, -4.627687905109141}, {
       40.96811224489796, -4.681122448979593}}], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQrb/8wVORFhcHBjAQOXCOYaL1jXYE/5fhYT+eHgR/
1bfu2XfmIPiRu0NerFmL4O9wedboex7BFztXLv3uA4J/5cEsP30TVzh/4ue9
jQXlCL7NecmaN18Q/GerSssyitzg/CNuk2Y0NbnD+Yz+tx71N3jA+QyO2xgX
VHrC+R3i330vtXvB+QVRyYe+N3vD+Q8bTVLsp/rA+SKTZ97qXOgL5y8T0Ko8
PtsPzj9YJO+qvtofzp+nsEDGNiQAzt9b84sh4wKCr+jN/kc5PBDO33Jes/vm
FQS/59g/A4XYIDh/cvHLrIQ7CH6NqBy/UmQwnD9p/sSc03MQ/JWarKdKHiD4
ft++9EW+QPC/HHoSbPcBwXdfGbPN4AuCP6v/ioTyDwT/SJOAl8wvBP9tqU+1
6B8EP2MNf+/Xvwg+AGs0pHI=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQA2IQPSP4QxGXU4gDAxS8nvVthqQrgi/SZ3RKyB3Bt2vM
+83tieCnl6zSYfVG8HdFKfV/90Pwn/jGHfgQgODzOs76+DIIwU9QFwq5E4bg
s31hlDwYh+D/2DCj70kCkvty9Vk4khH8C89j3vulI/izbm8/eicfwdc7nFv0
owHBD5t087T+YgR/ucHGunnPEXzNpFV+f3ND4fzbnjs3hb5G8C8trtK1Lw5D
uG9zoI3SJwT//46irW154XC+t4Gba81XBP94rH5mdnEEnC+UnLF7bimCH5ex
kPdCOYL/rUh4k0kNgq/S8f3X3xYEv2HT/p4J0xB8K/aADVt3IvhtPJ1ML3Yj
+BcFD4VI7UPwM2RMftYdQvCnG0o4eZxG8L9EP7h86w6C75AoqcZ7H8HvTguq
sH+I4CsVHpFZ8hTBD2xbkZr7DsGf0/1w+/wPCP6LCVJclz4h+Wd2zzqz7wj+
mQVHGTJ/Ivjiy/4Fzf6N4CetNl969i+Cv25Dwff//xF8AK8erRw=
       "]], 
      LineBox[{{5.031887755102041, 0.15943877551020336`}, {5.084312032780538, 
       0.42156016390269}, {5.115358167912872, 0.5767908395643584}, {
       5.146404303045205, 0.7320215152260268}, {5.208496573309872, 
       1.042482866549359}, {5.332681113839206, 1.663405569196028}, {
       5.581050194897874, 2.9052509744893706`}, {5.612096330030207, 
       3.0604816501510346`}, {5.643142465162541, 3.215712325812703}, {
       5.705234735427208, 3.5261736771360397`}, {5.736280870559542, 
       3.681404352797708}, {5.767327005691875, 3.8366350284593764`}, {
       5.829419275956543, 4.147096379782713}, {5.860465411088876, 
       4.3023270554443815`}, {5.89151154622121, 4.45755773110605}, {
       5.922557681353544, 4.612788406767718}, {5.953603816485876, 
       4.768019082429382}, {5.968112244897959, 4.840561224489797}}], 
      LineBox[{{80.03188775510205, -4.840561224489761}, {
       80.12381808847167, -4.380909557641672}, {
       80.24715605746877, -3.7642197126561427`}, {
       80.49383199546298, -2.5308400226850836`}, {
       80.52466648771227, -2.3766675614386656`}, {
       80.55550097996154, -2.2224951001923188`}, {
       80.61716996446009, -1.914150177699554}, {
       80.7405079334572, -1.2974603327140244`}, {
       80.77134242570648, -1.1432878714676065`}, {
       80.80217691795575, -0.9891154102212596}, {
       80.8638459024543, -0.6807704877284948}, {
       80.89468039470357, -0.5265980264821479}, {
       80.92551488695284, -0.37242556523580106`}, {
       80.95634937920212, -0.21825310398938313`}, {
       80.96811224489795, -0.15943877551023888`}}]}, {}}, {{}, {}, {}}}, {}, \
{}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Time (s)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(x\\), \\(0\\)]\\) (m)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"\\!\\(\\*SubscriptBox[\\(x\\), \\(\\(0\\)\\(\\\\ \\)\\)]\\)as a \
function of time\"", TraditionalForm],
  PlotRange->{{0, 100}, {-5., 5.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f2", "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"0.1`", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        TagBox[GridBox[{
           {"\[Piecewise]", GridBox[{
              {"0", 
               RowBox[{"t", "<", "5"}]},
              {
               RowBox[{"5", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "5"}], "+", "t"}], ")"}]}], 
               RowBox[{"t", "<", "6"}]},
              {"5", 
               RowBox[{"t", "<", "40"}]},
              {
               RowBox[{"5", "-", 
                RowBox[{"10", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "40"}], "+", "t"}], ")"}]}]}], 
               RowBox[{"t", "<", "41"}]},
              {
               RowBox[{"-", "5"}], 
               RowBox[{"t", "<", "80"}]},
              {
               RowBox[{
                RowBox[{"-", "5"}], "+", 
                RowBox[{"5", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "80"}], "+", "t"}], ")"}]}]}], 
               RowBox[{"t", "<", "81"}]},
              {"0", 
               TagBox["True",
                "PiecewiseDefault",
                AutoDelete->True]}
             },
             AllowedDimensions->{2, Automatic},
             Editable->True,
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{1.}}, "RowsIndexed" -> {}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.84]}, 
                 Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
               "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}, "RowsIndexed" -> {}},
             Selectable->True]}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.35]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}],
         "Piecewise",
         DeleteWithContents->True,
         Editable->False,
         SelectWithContents->True,
         Selectable->False], ")"}]}], "+", 
      RowBox[{"x0", "[", "t", "]"}]}], ")"}]}], "+", 
   RowBox[{"10", " ", 
    RowBox[{"\[Theta]", "[", "t", "]"}]}], "+", 
   RowBox[{"0.5`", " ", 
    RowBox[{
     SuperscriptBox["x0", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "+", 
   RowBox[{"1.5`", " ", 
    RowBox[{
     SuperscriptBox["\[Theta]", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}]}]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"goal", "[", "t", "]"}]], "Input"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"0", 
        RowBox[{"t", "<", "5"}]},
       {
        RowBox[{"5", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "5"}], "+", "t"}], ")"}]}], 
        RowBox[{"t", "<", "6"}]},
       {"5", 
        RowBox[{"t", "<", "40"}]},
       {
        RowBox[{"5", "-", 
         RowBox[{"10", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "40"}], "+", "t"}], ")"}]}]}], 
        RowBox[{"t", "<", "41"}]},
       {
        RowBox[{"-", "5"}], 
        RowBox[{"t", "<", "80"}]},
       {
        RowBox[{
         RowBox[{"-", "5"}], "+", 
         RowBox[{"5", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "80"}], "+", "t"}], ")"}]}]}], 
        RowBox[{"t", "<", "81"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solve ODE", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExportString", "[", 
  RowBox[{
   RowBox[{
    SubscriptBox["f", "2"], "\[Equal]", 
    RowBox[{
     RowBox[{
      SubscriptBox["P", "\[Theta]"], "\[Theta]"}], "+", 
     RowBox[{
      SubscriptBox["D", "\[Theta]"], 
      RowBox[{"\[Theta]", "'"}]}], "+", 
     RowBox[{
      SubscriptBox["P", "x"], 
      RowBox[{"(", 
       RowBox[{"x", "-", 
        SubscriptBox["x", "0"]}], ")"}]}], "+", 
     RowBox[{
      SubscriptBox["D", "x"], 
      RowBox[{"x", "'"}]}]}]}], ",", "\"\<TeXFragment\>\""}], "]"}]], "Input"],

Cell[BoxData["\<\"\\\\[f_2==\\\\theta  P_{\\\\theta }+P_x \
\\\\left(x-x_0\\\\right)+D_x x'+D_{\\\\theta } \\\\theta '\\\\]\\n\\n\"\>"], \
"Output"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ceq", "=", 
     RowBox[{
      RowBox[{"f2", "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"10", " ", 
        RowBox[{"\[Theta]", "[", "t", "]"}]}], "+", 
       RowBox[{"0.442", " ", 
        RowBox[{
         RowBox[{"\[Theta]", "'"}], "[", "t", "]"}]}], "+", 
       RowBox[{"0.0884", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"x0", "[", "t", "]"}], "-", 
          RowBox[{"goal", "[", "t", "]"}]}], ")"}]}], "+", 
       RowBox[{"0.648", " ", 
        RowBox[{
         RowBox[{"x0", "'"}], "[", "t", "]"}]}]}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"sol", "=", 
     RowBox[{"NDSolveValue", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eq", ",", "initial", ",", "ceq"}], "}"}], "/.", "params"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"x0", ",", "\[Theta]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "120"}], "}"}], ",", 
       RowBox[{"MaxSteps", "\[Rule]", "Infinity"}]}], "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "5", ",", "15"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`b$$ = 5, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`b$$], 5, 15}}, Typeset`size$$ = {1494., {40., 52.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`b$1532$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`b$$ = 5}, 
      "ControllerVariables" :> {
        Hold[$CellContext`b$$, $CellContext`b$1532$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`ceq = $CellContext`f2[$CellContext`t] == 
         10 $CellContext`\[Theta][$CellContext`t] + 
          0.442 Derivative[1][$CellContext`\[Theta]][$CellContext`t] + 
          0.0884 ($CellContext`x0[$CellContext`t] - \
$CellContext`goal[$CellContext`t]) + 
          0.648 Derivative[
            1][$CellContext`x0][$CellContext`t]; $CellContext`sol = 
        NDSolveValue[
          
          ReplaceAll[{$CellContext`eq, $CellContext`initial, \
$CellContext`ceq}, $CellContext`params], {$CellContext`x0, $CellContext`\
\[Theta]}, {$CellContext`t, 0, 120}, MaxSteps -> Infinity]), 
      "Specifications" :> {{$CellContext`b$$, 5, 15}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{1580., {116., 128.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output"],

Cell[BoxData[
 TemplateBox[{
  "NDSolveValue","pdord",
   "\"Some of the functions have zero differential order, so the equations \
will be solved as a system of differential-algebraic equations.\"",2,42,37,
   20756742300420509111,"Local"},
  "MessageTemplate"]], "Message", "MSG"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "@", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", "t", "]"}], "&"}], "/@", "sol"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "120"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Position x\>\"", ",", "\"\<Angle \[Theta]\>\""}], 
      "}"}]}]}], "]"}]}]], "Input"],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Plot[
    Evaluate[
     Map[#[$CellContext`t]& , $CellContext`sol]], {$CellContext`t, 0, 120}, 
    PlotRange -> All, PlotLegends -> {"Position x", "Angle \[Theta]"}], 
   StandardForm],
  ImageSizeCache->{930., {211., 223.}}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\n", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"p1", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"sol", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "120"}], "}"}], ",", 
       RowBox[{"ImagePadding", "\[Rule]", "45"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "None", ",", "\"\<Cylinder position x\>\"", ",", "None", ",", 
          "None"}], "}"}]}], ",", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "C1", ",", "Automatic", ",", "Automatic"}],
          "}"}]}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"All", ",", "All", ",", "None", ",", "None"}], "}"}]}], ",", 
       
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "Automatic"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "6"}], ",", "6"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "C1"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"p2", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        FractionBox["180", "\[Pi]"], 
        RowBox[{
         RowBox[{"sol", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", "t", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "120"}], "}"}], ",", 
       RowBox[{"ImagePadding", "\[Rule]", "45"}], ",", 
       RowBox[{"Frame", "->", "All"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "None", ",", "None", ",", "None", ",", 
          "\"\<Head angle \[Theta]\>\""}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "120"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "60"}], ",", "60"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "C2"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"AxesOrigin", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"120", ",", "0"}], "}"}]}], ",", 
       RowBox[{"Axes", "->", 
        RowBox[{"{", 
         RowBox[{"False", ",", "True"}], "}"}]}]}], "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"Overlay", "[", 
    RowBox[{"{", 
     RowBox[{"p1", ",", "p2"}], "}"}], "]"}]}]}]], "Input"],

Cell[BoxData[
 OverlayBox[{
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]]}}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{1., 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{
      FormBox["\"Cylinder position x\"", TraditionalForm], None}, {
     None, None}},
   FrameStyle->{Automatic, $CellContext`C1, Automatic, Automatic},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->45,
   ImageSize->Large,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{1, 119.99999755102041`}, {-6, 6}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}], 
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwUV3c81e8XN7JHNlnZe17jXvNzXPveaxYiIYVCCJFRRElJZSQRZVQyCmVk
3aeSlbSNjCLZK+MbZfz8/vq8zuu8z3neZz7PR9I72NGHjoaG5iETDc3/v/+N
dLbKpLQaz9/nPoppQHOEfWkfff8rrC+ea+UFDzRzLwimb/R9wiYt54esz2PN
m/Z6PmupfVjUxkcM24M1Tz1zI/w2HcLuLguvHg02bvbwmZVczB/BzrDwtyeJ
Gjf7s7Vc+i/2Bxbz4osR9xuj5u9NtsGrfWMYi9me5xeZjZpz+AWPhzGMY8Et
p4VrCw2bDwZ9P7SM+4Wx8l5Pl8EbNnftDyEupU5ikxLHBOopBs2XzhLwwY1T
mGqTy5Xgd/rN8JFGZWFqGmP64xX73lK/uTYhjX/OdA67xYVLk1HTaw4ZdGUN
OD2Pfc7VKJHLIzQra0vtTOcvYBI6B7l+shKaP4S6rq7ELmE4h++F7eO6zRYy
M8O/+5axuU4jm7Y07eZie9tDVUErWOP2igP/hlYz7bnqTyEMq9iqJ8+xkCNa
zU1fo9sXcWtYfmXLWX1hXLPmZbaq+dQ/mG3diY3tYrXm68+ClStk1rF4PQYy
q5Rq89z3zw8CG9cxfIJJq2yGcvNDwt2c2akNLOiGGqXQRaFZdEbl4rTpJnaq
v8WfqV6yOVogbbvk2ybm51dVkSgk0dxHXDt74vQW9q+VDh9MK9acntt8ajJ/
G6MyM2fDkEDzUrvk1EOdHSw0re7zrxneZpvVS96+3TvY1Z1O8SRu7uaLco/K
lmNp4FHB1ni/A1NzteHACccOGsD0T1EUtOiaRx3Z5Kp5aSHluzFOP/lvk3Fc
8P3TpbTwBi+fV3L4e9NGH/7WUh8dGFdx75tV/GtYj2P2eqRID/8kDv585U9r
FJHar+QRQw/2jtyKR54yGC0To9Bb8T1QIl9kpyHJaTRT0TD70IcBEpE6b+dz
QaOhRCPikRUmYG69XonY5IxyRjg4+MyZQd/HR5kmQd7okN5IX1cWMxQkcPuR
aBWNvi6cP0XQZ4FIyYJAEp+KUaa1HWExhQXOXpKaiCxSNXIs3k//cJgFsu/b
U27i1I16XFE27wVWIAeIhM5JaBpde37zWNcnVphc0xW/MaxpRNp7VO2CDBsY
t7x3bc7AGTH7a27gI9hAe3h46yxRy6i9lbZ1oZ0Nrs7tfJyf0jJK2v/p+oN9
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
       "]]}}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, True},
   AxesLabel->{None, None},
   AxesOrigin->{120., 0.},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->45,
   ImageSize->Large,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotLabel->FormBox[
     RowBox[{"{", 
       RowBox[{
        "None", ",", "None", ",", "None", ",", "\"Head angle \[Theta]\""}], 
       "}"}], TraditionalForm],
   PlotRange->{{1, 120}, {-60, 60}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    FractionBox["180", "\[Pi]"], 
    RowBox[{
     RowBox[{"sol", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", "t", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "120"}], "}"}], ",", 
   RowBox[{"ImagePadding", "\[Rule]", "45"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "None", ",", "None", ",", "None", ",", "\"\<Head angle \[Theta]\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "Automatic"}], "}"}], ",", "All"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "C2"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"120", ",", "0"}], "}"}]}], ",", 
   RowBox[{"Axes", "->", 
    RowBox[{"{", 
     RowBox[{"False", ",", "True"}], "}"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwUV3c81e8XN7JHNlnZe17jXvNzXPveaxYiIYVCCJFRRElJZSQRZVQyCmVk
3aeSlbSNjCLZK+MbZfz8/vq8zuu8z3neZz7PR9I72NGHjoaG5iETDc3/v/+N
dLbKpLQaz9/nPoppQHOEfWkfff8rrC+ea+UFDzRzLwimb/R9wiYt54esz2PN
m/Z6PmupfVjUxkcM24M1Tz1zI/w2HcLuLguvHg02bvbwmZVczB/BzrDwtyeJ
Gjf7s7Vc+i/2Bxbz4osR9xuj5u9NtsGrfWMYi9me5xeZjZpz+AWPhzGMY8Et
p4VrCw2bDwZ9P7SM+4Wx8l5Pl8EbNnftDyEupU5ikxLHBOopBs2XzhLwwY1T
mGqTy5Xgd/rN8JFGZWFqGmP64xX73lK/uTYhjX/OdA67xYVLk1HTaw4ZdGUN
OD2Pfc7VKJHLIzQra0vtTOcvYBI6B7l+shKaP4S6rq7ELmE4h++F7eO6zRYy
M8O/+5axuU4jm7Y07eZie9tDVUErWOP2igP/hlYz7bnqTyEMq9iqJ8+xkCNa
zU1fo9sXcWtYfmXLWX1hXLPmZbaq+dQ/mG3diY3tYrXm68+ClStk1rF4PQYy
q5Rq89z3zw8CG9cxfIJJq2yGcvNDwt2c2akNLOiGGqXQRaFZdEbl4rTpJnaq
v8WfqV6yOVogbbvk2ybm51dVkSgk0dxHXDt74vQW9q+VDh9MK9acntt8ajJ/
G6MyM2fDkEDzUrvk1EOdHSw0re7zrxneZpvVS96+3TvY1Z1O8SRu7uaLco/K
lmNp4FHB1ni/A1NzteHACccOGsD0T1EUtOiaRx3Z5Kp5aSHluzFOP/lvk3Fc
8P3TpbTwBi+fV3L4e9NGH/7WUh8dGFdx75tV/GtYj2P2eqRID/8kDv585U9r
FJHar+QRQw/2jtyKR54yGC0To9Bb8T1QIl9kpyHJaTRT0TD70IcBEpE6b+dz
QaOhRCPikRUmYG69XonY5IxyRjg4+MyZQd/HR5kmQd7okN5IX1cWMxQkcPuR
aBWNvi6cP0XQZ4FIyYJAEp+KUaa1HWExhQXOXpKaiCxSNXIs3k//cJgFsu/b
U27i1I16XFE27wVWIAeIhM5JaBpde37zWNcnVphc0xW/MaxpRNp7VO2CDBsY
t7x3bc7AGTH7a27gI9hAe3h46yxRy6i9lbZ1oZ0Nrs7tfJyf0jJK2v/p+oN9
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
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{120., 0.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, 
     FormBox["\"Head angle \[Theta]\"", TraditionalForm]}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->45,
  ImageSize->Large,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1, 120.}, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"fgraph", ",", "ggraph"}], "}"}], "=", 
   RowBox[{"MapIndexed", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"#", "[", "x", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "x1", ",", "x2"}], "}"}], ",", 
        RowBox[{"Axes", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{
          RowBox[{"plotRanges", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "#2", "]"}], "]"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"colors", "[", 
          RowBox[{"[", "#2", "]"}], "]"}]}]}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"f", ",", "g"}], "}"}]}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"plotRanges\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,18,29,20756742300420509111,"Local"},
  "MessageTemplate"]], "Message", "MSG"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"colors\\\", \\\"\
\[LeftDoubleBracket]\\\", RowBox[{\\\"{\\\", \\\"1\\\", \\\"}\\\"}], \\\"\
\[RightDoubleBracket]\\\"}]\\) is longer than depth of object.\"",2,18,30,
   20756742300420509111,"Local"},
  "MessageTemplate"]], "Message", "MSG"],

Cell[BoxData[
 TemplateBox[{
  "Plot","plln",
   "\"Limiting value \\!\\(\\*RowBox[{\\\"x1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"x\\\", \\\",\\\", \\\"x1\\\", \\\",\\\
\", \\\"x2\\\"}], \\\"}\\\"}]\\) is not a machine-sized real number.\"",2,18,
   31,20756742300420509111,"Local"},
  "MessageTemplate"]], "Message", "MSG"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"plotRanges\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,18,32,20756742300420509111,"Local"},
  "MessageTemplate"]], "Message", "MSG"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partd\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,18,33,20756742300420509111,"Local"},
  "MessageTemplate"]], "Message", "MSG"],

Cell[BoxData[
 TemplateBox[{
  "Plot","plln",
   "\"Limiting value \\!\\(\\*RowBox[{\\\"x1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"x\\\", \\\",\\\", \\\"x1\\\", \\\",\\\
\", \\\"x2\\\"}], \\\"}\\\"}]\\) is not a machine-sized real number.\"",2,18,
   34,20756742300420509111,"Local"},
  "MessageTemplate"]], "Message", "MSG"],

Cell[BoxData[
 TemplateBox[{
  "Plot","plln",
   "\"Limiting value \\!\\(\\*RowBox[{\\\"x1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"x\\\", \\\",\\\", \\\"x1\\\", \\\",\\\
\", \\\"x2\\\"}], \\\"}\\\"}]\\) is not a machine-sized real number.\"",2,18,
   35,20756742300420509111,"Local"},
  "MessageTemplate"]], "Message", "MSG"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Plot\\\", \\\"::\\\", \
\\\"plln\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,18,36,20756742300420509111,"Local"},
  "MessageTemplate"]], "Message", "MSG"]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindDivisions", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["\[Pi]", "2"]}], ",", 
     FractionBox["\[Pi]", "2"], ",", "Pi"}], "}"}], ",", "5"}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "\[Pi]"}], ",", "0", ",", "\[Pi]"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["\[Pi]", "3"]}], ",", 
   FractionBox["\[Pi]", "3"], ",", 
   FractionBox["\[Pi]", "6"]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["\[Pi]", "3"]}], ",", 
   RowBox[{"-", 
    FractionBox["\[Pi]", "6"]}], ",", "0", ",", 
   FractionBox["\[Pi]", "6"], ",", 
   FractionBox["\[Pi]", "3"]}], "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "TwoAxisPlot", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TwoAxisPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"f_", ",", "g_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "x1_", ",", "x2_"}], "}"}], ",", "colorList_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "fgraph", ",", "ggraph", ",", "frange", ",", "grange", ",", "fticks", 
      ",", "gticks"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"fgraph", "=", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"f", "[", "x", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "x1", ",", "x2"}], "}"}], ",", 
        RowBox[{"Axes", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "120"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["\[Pi]", "3"]}], ",", 
             FractionBox["\[Pi]", "3"]}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"colors", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], ";", 
     RowBox[{"ggraph", "=", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"g", "[", "x", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "x1", ",", "x2"}], "}"}], ",", 
        RowBox[{"Axes", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "120"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "6"}], ",", "6"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"colors", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"frange", ",", "grange"}], "}"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"PlotRange", "/.", 
           RowBox[{"AbsoluteOptions", "[", 
            RowBox[{"#", ",", "PlotRange"}], "]"}]}], ")"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"fgraph", ",", "ggraph"}], "}"}]}]}], ";", 
     RowBox[{"fticks", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["\[Pi]", "3"]}], ",", 
        RowBox[{"-", 
         FractionBox["\[Pi]", "6"]}], ",", "0", ",", 
        FractionBox["\[Pi]", "6"], ",", 
        FractionBox["\[Pi]", "3"]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"gticks", "=", 
      RowBox[{"Quiet", "@", 
       RowBox[{"Transpose", "@", 
        RowBox[{"{", 
         RowBox[{"fticks", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"ToString", "[", 
             RowBox[{
              RowBox[{"NumberForm", "[", 
               RowBox[{"#", ",", "2"}], "]"}], ",", "StandardForm"}], "]"}], 
            "&"}], "/@", 
           RowBox[{"Rescale", "[", 
            RowBox[{"fticks", ",", "frange", ",", "grange"}], "]"}]}]}], 
         "}"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{"fgraph", ",", 
       RowBox[{"ggraph", "/.", 
        RowBox[{
         RowBox[{"Graphics", "[", 
          RowBox[{"graph_", ",", "s___"}], "]"}], "\[RuleDelayed]", 
         RowBox[{"Graphics", "[", 
          RowBox[{
           RowBox[{"GeometricTransformation", "[", 
            RowBox[{"graph", ",", 
             RowBox[{"RescalingTransform", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}], ",", "grange"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}], ",", "frange"}], "}"}]}], 
              "]"}]}], "]"}], ",", "s"}], "]"}]}]}], ",", 
       RowBox[{"Axes", "\[Rule]", "False"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"colors", ",", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"fticks", ",", "gticks"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Time (s)\>\"", ",", "\"\<Angle of head \[Theta] (rad)\>\"", 
          ",", "\"\<Plot of \[Theta] and x vs time\>\"", ",", 
          "\"\<Position of cylinder x (m)\>\""}], "}"}]}]}], "]"}]}]}], 
   "]"}]}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"C1", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0.368", ",", "0.507", ",", "0.710"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"C2", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0.881", ",", "0.611", ",", "0.142"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"colors", "=", 
  RowBox[{"{", 
   RowBox[{"C1", ",", "C2"}], "}"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.368, 0.507, 0.71], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.24533333333333335`, 0.338, 0.47333333333333333`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.368, 0.507, 0.71]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.368, 0.507, 0.71]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.368, 0.507, 0.71],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.881, 0.611, 0.142], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.5873333333333334, 0.4073333333333333, 0.09466666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.881, 0.611, 0.142]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.881, 0.611, 0.142]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.881, 0.611, 0.142],
    Editable->False,
    Selectable->False]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TwoAxisPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"sol", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"sol", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "120"}], "}"}], ",", "colors"}], 
  "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0.368, 0.507, 0.71], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
/me40JGBUTm1iT0niWARMPXLMiMTs3rXvp2iQIQNy5ju09oczK3icus7RSJc
HdvYevJAARYR2u1lcpoIJwq0Jnk7i7B046uqH1WIsGPhdYH89VKsTKX3m905
Imht7VWO9i3Hhj4MmHmeJ0L/s397h7Bn2Fw9WZzzIrv/hG/db97UYOvxw2/C
NNn1i+6p/5Rch+2/OKqXcpkIumHfTYubGjGT9CmFShIbX3zT1pKbbZijk+mn
s1QiyFy5mvH7dAcWpP8hq4lOhLe5/W7//59Y4e+FPT1GRDg8fMW2eew19o26
/HfBkggE3wzzxk/9mM9Ojk5xD7Zf5KrogSKjWNycj1+OFxH4d8Q8EdzzDstG
m9VP+BLhpIfquu3OMazjFnfp2SAiHGzyiny08h4bvRhi1RTC9oveDncPm3Hs
8z7eQzrhROBgOavvfT+O7ezgTyTHEIFOzt9wuGICO5gRbfAujs3H8Ta/id2T
mKLzrq0miUT4cmW9/7HjJKZ5Nb55IZkI3SGZR/b2TGJUqd3udveJMOx+YXhZ
cgqz+pOkvJZGhKXDBX9m7aYwtwGRLx4ZRPCpcuEtrZ7CIgru523JJIKH3G9r
gV9TWLqP2I2wbHY/JYirX2kaK6Oli+7KI8K5okctjZbT2Au5g0PJBez+ju3j
qkyYxoa4MiPFi4gg5bXrV0jtNDY3dlgnp4QIgjuD1469ncbWK3M2nigngorx
VJnX8jTGG36stqKSCL92+hgEbJzBxEwK7p59xl6/qhCgum0GO3lW9mRTDRE2
myuHZvHOYCBQPKddR4QnTvnf/uOcwfDzco9eIyKI2D90WPg5jZk0lDHITUQg
PWlL+jMzjTkmKgq9e0EEWuQTgkrnNBZkU/XqRisRxALD0rryprGUS2eCFtrZ
+/ez+fwn72msULTmvF0XET5rnncbJExj9d/O/vrxiu2X08lfWg5MYxldT40J
vUR44Cn3fcfCFOaXdaqjqJ8I2wTOK2cUT2E6lOPJpsNE+PFYYHeE7BQmI5ez
oXGECGNrlfLWs5MYH4+kheg7Iji17o+NSZ3EBmpETvdPEGFmXrXu5a8J7Gls
QtqJaSLkH9cOoeVMYCnWApwhs0TgewQTGgYTmJHY1kH4SIQU6U6l/anj2IL3
T/uiFSJ85dv64NHpMaybfneE5wcRXunWr322e4eVnPp63vQn20+UI7P5+aPY
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
       "]]}}, {}, {}}, 
   GeometricTransformationBox[{{{}, {}, 
      {RGBColor[0.881, 0.611, 0.142], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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

        "]]}}, {}, {}}, {{{1., 0.}, {0., 0.17453292519943292`}}, {
     0., -2.220446049250313*^-16}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->False,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{
    FormBox["\"Time (s)\"", TraditionalForm], 
    FormBox["\"Angle of head \[Theta] (rad)\"", TraditionalForm], 
    FormBox["\"Plot of \[Theta] and x vs time\"", TraditionalForm], 
    FormBox["\"Position of cylinder x (m)\"", TraditionalForm]},
  FrameStyle->{{
     RGBColor[0.368, 0.507, 0.71], 
     RGBColor[0.881, 0.611, 0.142]}, {Automatic, Automatic}},
  FrameTicks->{{{{
       NCache[Rational[-1, 3] Pi, -1.0471975511965976`], 
       FormBox[
        RowBox[{"-", 
          FractionBox["\[Pi]", "3"]}], TraditionalForm]}, {
       NCache[Rational[-1, 6] Pi, -0.5235987755982988], 
       FormBox[
        RowBox[{"-", 
          FractionBox["\[Pi]", "6"]}], TraditionalForm]}, {0, 
       FormBox["0", TraditionalForm]}, {
       NCache[Rational[1, 6] Pi, 0.5235987755982988], 
       FormBox[
        FractionBox["\[Pi]", "6"], TraditionalForm]}, {
       NCache[Rational[1, 3] Pi, 1.0471975511965976`], 
       FormBox[
        FractionBox["\[Pi]", "3"], TraditionalForm]}}, {{
       NCache[Rational[-1, 3] Pi, -1.0471975511965976`], 
       FormBox[
       "\"\\!\\(\\*TagBox[InterpretationBox[\\\"\\\\\\\"-6.\\\\\\\"\\\", \
-6.`, Rule[AutoDelete, True]], Function[NumberForm[Slot[1], 2]]]\\)\"", 
        TraditionalForm]}, {
       NCache[Rational[-1, 6] Pi, -0.5235987755982988], 
       FormBox[
       "\"\\!\\(\\*TagBox[InterpretationBox[\\\"\\\\\\\"-3.\\\\\\\"\\\", \
-3.`, Rule[AutoDelete, True]], Function[NumberForm[Slot[1], 2]]]\\)\"", 
        TraditionalForm]}, {0, 
       FormBox[
       "\"\\!\\(\\*TagBox[InterpretationBox[\\\"\\\\\\\"0.\\\\\\\"\\\", 0.`, \
Rule[AutoDelete, True]], Function[NumberForm[Slot[1], 2]]]\\)\"", 
        TraditionalForm]}, {
       NCache[Rational[1, 6] Pi, 0.5235987755982988], 
       FormBox[
       "\"\\!\\(\\*TagBox[InterpretationBox[\\\"\\\\\\\"3.\\\\\\\"\\\", 3.`, \
Rule[AutoDelete, True]], Function[NumberForm[Slot[1], 2]]]\\)\"", 
        TraditionalForm]}, {
       NCache[Rational[1, 3] Pi, 1.0471975511965976`], 
       FormBox[
       "\"\\!\\(\\*TagBox[InterpretationBox[\\\"\\\\\\\"6.\\\\\\\"\\\", 6.`, \
Rule[AutoDelete, True]], Function[NumberForm[Slot[1], 2]]]\\)\"", 
        TraditionalForm]}}}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{224.59999999999152`, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 120}, {Rational[-1, 3] Pi, Rational[1, 3] Pi}}, {{0, 
     120}, {-1.0471975511965976`, 1.0471975511965976`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    FractionBox["180", "\[Pi]"], "*", 
    RowBox[{
     RowBox[{"sol", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", "t", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {-1.15025977617318*^-13, 37.64057850139897}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotRanges", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "120"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "6"}], ",", "6"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "120"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "60"}], ",", "60"}], "}"}]}], "}"}]}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "120"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "6"}], ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "120"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "60"}], ",", "60"}], "}"}]}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotRanges", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "120"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6"}], ",", "6"}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "@", 
  FractionBox["180", "Pi"]}]], "Input"],

Cell[BoxData["57.29577951308232`"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", 
  RowBox[{"ColorData", "[", "1", "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", "4", "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"colors", "/@", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2"}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.368, 0.507, 0.71], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.24533333333333335`, 0.338, 0.47333333333333333`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0.368, 0.507, 0.71]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.368, 0.507, 0.71]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.368, 0.507, 0.71],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.881, 0.611, 0.142], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.5873333333333334, 0.4073333333333333, 0.09466666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0.881, 0.611, 0.142]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.881, 0.611, 0.142]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.881, 0.611, 0.142],
       Editable->False,
       Selectable->False]}], "}"}], "[", "1", "]"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.368, 0.507, 0.71], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.24533333333333335`, 0.338, 0.47333333333333333`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0.368, 0.507, 0.71]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.368, 0.507, 0.71]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.368, 0.507, 0.71],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.881, 0.611, 0.142], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.5873333333333334, 0.4073333333333333, 0.09466666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0.881, 0.611, 0.142]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.881, 0.611, 0.142]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.881, 0.611, 0.142],
       Editable->False,
       Selectable->False]}], "}"}], "[", "2", "]"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ColorData", "[", "5", "]"}], "/@", 
  RowBox[{"Range", "[", "20", "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.4588235294117647, 0.1411764705882353, 0.1411764705882353],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.3058823529411765, 0.09411764705882353, 0.09411764705882353],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.4588235294117647, 0.1411764705882353, 0.1411764705882353]"],
     
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.4588235294117647, 0.1411764705882353, 0.1411764705882353]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.4588235294117647, 0.1411764705882353, 0.1411764705882353],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.6274509803921569, 0.23137254901960785`, 0.23137254901960785`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.41830065359477125`, 0.1542483660130719, 0.1542483660130719],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.6274509803921569, 0.23137254901960785, \
0.23137254901960785]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.6274509803921569, 0.23137254901960785`, 0.23137254901960785`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.6274509803921569, 0.23137254901960785`, 0.23137254901960785`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.3803921568627451, 0.2784313725490196, 0.20784313725490197`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.25359477124183005`, 0.18562091503267975`, 0.13856209150326798`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.3803921568627451, 0.2784313725490196, 0.20784313725490197]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.3803921568627451, 0.2784313725490196, 0.20784313725490197`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.3803921568627451, 0.2784313725490196, 0.20784313725490197`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.5882352941176471, 0.44313725490196076`, 0.33725490196078434`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.3921568627450981, 0.2954248366013072, 0.22483660130718958`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.5882352941176471, 0.44313725490196076, \
0.33725490196078434]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.5882352941176471, 0.44313725490196076`, 0.33725490196078434`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.5882352941176471, 0.44313725490196076`, 0.33725490196078434`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.592156862745098, 0.4196078431372549, 0.2823529411764706], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.3947712418300654, 0.2797385620915033, 0.18823529411764706`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.592156862745098, 0.4196078431372549, 0.2823529411764706]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.592156862745098, 0.4196078431372549, 0.2823529411764706]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.592156862745098, 0.4196078431372549, 0.2823529411764706],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.8235294117647058, 0.5019607843137255, 0.09411764705882353], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.5490196078431373, 0.334640522875817, 0.06274509803921569],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.8235294117647058, 0.5019607843137255, 0.09411764705882353]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.8235294117647058, 0.5019607843137255, 0.09411764705882353]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.8235294117647058, 0.5019607843137255, 0.09411764705882353],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.9764705882352941, 0.6901960784313725, 0.3215686274509804],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6509803921568628, 0.4601307189542484, 0.21437908496732028`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.9764705882352941, 0.6901960784313725, 0.3215686274509804]"],
     
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.9764705882352941, 0.6901960784313725, 0.3215686274509804]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9764705882352941, 0.6901960784313725, 0.3215686274509804],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.396078431372549, 0.396078431372549, 0.17647058823529413`],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.26405228758169935`, 0.26405228758169935`, 0.11764705882352942`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.396078431372549, 0.396078431372549, 0.17647058823529413]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.396078431372549, 0.396078431372549, 0.17647058823529413`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.396078431372549, 0.396078431372549, 0.17647058823529413`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.41568627450980394`, 0.41568627450980394`, 0.3058823529411765], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.27712418300653596`, 0.27712418300653596`, 0.203921568627451],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.41568627450980394, 0.41568627450980394, \
0.3058823529411765]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.41568627450980394`, 0.41568627450980394`, 0.3058823529411765]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.41568627450980394`, 0.41568627450980394`, 0.3058823529411765],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.6313725490196078, 0.6313725490196078, 0.24705882352941178`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.42091503267973857`, 0.42091503267973857`, 0.1647058823529412],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.6313725490196078, 0.6313725490196078, 0.24705882352941178]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.6313725490196078, 0.6313725490196078, 0.24705882352941178`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.6313725490196078, 0.6313725490196078, 0.24705882352941178`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.4588235294117647, 0.1411764705882353, 0.1411764705882353],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.3058823529411765, 0.09411764705882353, 0.09411764705882353],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.4588235294117647, 0.1411764705882353, 0.1411764705882353]"],
     
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.4588235294117647, 0.1411764705882353, 0.1411764705882353]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.4588235294117647, 0.1411764705882353, 0.1411764705882353],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.6274509803921569, 0.23137254901960785`, 0.23137254901960785`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.41830065359477125`, 0.1542483660130719, 0.1542483660130719],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.6274509803921569, 0.23137254901960785, \
0.23137254901960785]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.6274509803921569, 0.23137254901960785`, 0.23137254901960785`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.6274509803921569, 0.23137254901960785`, 0.23137254901960785`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.3803921568627451, 0.2784313725490196, 0.20784313725490197`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.25359477124183005`, 0.18562091503267975`, 0.13856209150326798`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.3803921568627451, 0.2784313725490196, 0.20784313725490197]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.3803921568627451, 0.2784313725490196, 0.20784313725490197`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.3803921568627451, 0.2784313725490196, 0.20784313725490197`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.5882352941176471, 0.44313725490196076`, 0.33725490196078434`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.3921568627450981, 0.2954248366013072, 0.22483660130718958`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.5882352941176471, 0.44313725490196076, \
0.33725490196078434]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.5882352941176471, 0.44313725490196076`, 0.33725490196078434`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.5882352941176471, 0.44313725490196076`, 0.33725490196078434`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.592156862745098, 0.4196078431372549, 0.2823529411764706], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.3947712418300654, 0.2797385620915033, 0.18823529411764706`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.592156862745098, 0.4196078431372549, 0.2823529411764706]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.592156862745098, 0.4196078431372549, 0.2823529411764706]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.592156862745098, 0.4196078431372549, 0.2823529411764706],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.8235294117647058, 0.5019607843137255, 0.09411764705882353], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.5490196078431373, 0.334640522875817, 0.06274509803921569],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.8235294117647058, 0.5019607843137255, 0.09411764705882353]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.8235294117647058, 0.5019607843137255, 0.09411764705882353]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.8235294117647058, 0.5019607843137255, 0.09411764705882353],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.9764705882352941, 0.6901960784313725, 0.3215686274509804],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6509803921568628, 0.4601307189542484, 0.21437908496732028`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.9764705882352941, 0.6901960784313725, 0.3215686274509804]"],
     
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.9764705882352941, 0.6901960784313725, 0.3215686274509804]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9764705882352941, 0.6901960784313725, 0.3215686274509804],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.396078431372549, 0.396078431372549, 0.17647058823529413`],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.26405228758169935`, 0.26405228758169935`, 0.11764705882352942`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.396078431372549, 0.396078431372549, 0.17647058823529413]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.396078431372549, 0.396078431372549, 0.17647058823529413`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.396078431372549, 0.396078431372549, 0.17647058823529413`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.41568627450980394`, 0.41568627450980394`, 0.3058823529411765], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.27712418300653596`, 0.27712418300653596`, 0.203921568627451],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.41568627450980394, 0.41568627450980394, \
0.3058823529411765]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.41568627450980394`, 0.41568627450980394`, 0.3058823529411765]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.41568627450980394`, 0.41568627450980394`, 0.3058823529411765],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.6313725490196078, 0.6313725490196078, 0.24705882352941178`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.42091503267973857`, 0.42091503267973857`, 0.1647058823529412],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.6313725490196078, 0.6313725490196078, 0.24705882352941178]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.6313725490196078, 0.6313725490196078, 0.24705882352941178`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.6313725490196078, 0.6313725490196078, 0.24705882352941178`],
    Editable->False,
    Selectable->False]}], "}"}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualize results", "Section"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "getBB8", "]"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "\"\<visualization.m\>\""}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"man", "=", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"getBB8", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"sol", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{"sol", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", "t", "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "120"}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 120}}, Typeset`size$$ = {720., {43., 53.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$2975$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$2975$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> $CellContext`getBB8[
        Part[$CellContext`sol, 1][$CellContext`t$$], 
        Part[$CellContext`sol, 2][$CellContext`t$$]], 
      "Specifications" :> {{$CellContext`t$$, 0, 120}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{806., {118., 130.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"getBB8", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"sol", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", "t", "]"}], ",", 
     RowBox[{
      RowBox[{"sol", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", "t", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "120"}], "}"}], ",", 
   RowBox[{"RefreshRate", "\[Rule]", "30"}]}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 120}}, Typeset`size$$ = {720., {43., 53.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$3044$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$3044$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> $CellContext`getBB8[
        Part[$CellContext`sol, 1][$CellContext`t$$], 
        Part[$CellContext`sol, 2][$CellContext`t$$]], 
      "Specifications" :> {{$CellContext`t$$, 0, 120, RefreshRate -> 30, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{806., {110., 122.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1916, 1041},
WindowMargins->{{2, Automatic}, {2, Automatic}},
CellContext->Notebook,
TrackCellChangeTimes->False,
Magnification:>2. Inherited,
FrontEndVersion->"11.0 for Linux x86 (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 76, 0, 528, "Title"],
Cell[CellGroupData[{
Cell[681, 26, 35, 0, 129, "Section"],
Cell[CellGroupData[{
Cell[741, 30, 2953, 87, 415, "Input"],
Cell[3697, 119, 3084, 93, 210, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6830, 218, 44, 0, 129, "Section"],
Cell[6877, 220, 26, 0, 60, "Input"],
Cell[CellGroupData[{
Cell[6928, 224, 438, 14, 60, "Input"],
Cell[7369, 240, 486, 15, 60, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7904, 261, 36, 0, 129, "Section"],
Cell[CellGroupData[{
Cell[7965, 265, 302, 8, 62, "Input"],
Cell[8270, 275, 274, 7, 62, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8593, 288, 35, 0, 129, "Section"],
Cell[CellGroupData[{
Cell[8653, 292, 2423, 77, 217, "Input"],
Cell[11079, 371, 6133, 120, 475, "Output"],
Cell[17215, 493, 3337, 94, 274, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20589, 592, 57, 1, 62, "Input"],
Cell[20649, 595, 2205, 70, 274, "Output"]
}, Open  ]],
Cell[22869, 668, 26, 0, 60, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22932, 673, 28, 0, 129, "Section"],
Cell[CellGroupData[{
Cell[22985, 677, 549, 18, 62, "Input"],
Cell[23537, 697, 148, 2, 166, "Output"]
}, Open  ]],
Cell[23700, 702, 26, 0, 60, "Input"],
Cell[CellGroupData[{
Cell[23751, 706, 1184, 35, 139, "Input"],
Cell[24938, 743, 2091, 43, 304, "Output"],
Cell[27032, 788, 282, 6, 76, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27351, 799, 494, 14, 62, "Input"],
Cell[27848, 815, 277, 7, 494, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28162, 827, 2683, 74, 528, "Input"],
Cell[30848, 903, 70503, 1182, 873, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101388, 2090, 961, 28, 214, "Input"],
Cell[102352, 2120, 42319, 707, 839, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144708, 2832, 804, 23, 140, "Input"],
Cell[145515, 2857, 303, 6, 43, "Message"],
Cell[145821, 2865, 335, 7, 43, "Message"],
Cell[146159, 2874, 339, 7, 43, "Message"],
Cell[146501, 2883, 303, 6, 43, "Message"],
Cell[146807, 2891, 296, 6, 43, "Message"],
Cell[147106, 2899, 339, 7, 43, "Message"],
Cell[147448, 2908, 339, 7, 43, "Message"],
Cell[147790, 2917, 295, 6, 43, "Message"]
}, Open  ]],
Cell[148100, 2926, 26, 0, 60, "Input"],
Cell[148129, 2928, 26, 0, 60, "Input"],
Cell[CellGroupData[{
Cell[148180, 2932, 230, 8, 103, "Input"],
Cell[148413, 2942, 110, 3, 88, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148560, 2950, 189, 6, 103, "Input"],
Cell[148752, 2958, 247, 8, 117, "Output"]
}, Open  ]],
Cell[149014, 2969, 4953, 134, 751, "Input"],
Cell[CellGroupData[{
Cell[153992, 3107, 395, 12, 137, "Input"],
Cell[154390, 3121, 3130, 85, 92, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157557, 3211, 335, 11, 60, "Input"],
Cell[157895, 3224, 70674, 1183, 350, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228606, 4412, 283, 9, 112, "Input"],
Cell[228892, 4423, 9727, 172, 505, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238656, 4600, 481, 17, 62, "Input"],
Cell[239140, 4619, 435, 16, 88, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239612, 4640, 86, 2, 62, "Input"],
Cell[239701, 4644, 194, 7, 88, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239932, 4656, 73, 2, 111, "Input"],
Cell[240008, 4660, 45, 0, 88, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240090, 4665, 99, 2, 60, "Input"],
Cell[240192, 4669, 50, 1, 88, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240279, 4675, 102, 3, 60, "Input"],
Cell[240384, 4680, 6957, 184, 92, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[247378, 4869, 119, 3, 62, "Input"],
Cell[247500, 4874, 34809, 896, 92, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[282358, 5776, 36, 0, 129, "Section"],
Cell[282397, 5778, 260, 6, 139, "Input"],
Cell[CellGroupData[{
Cell[282682, 5788, 428, 13, 62, "Input"],
Cell[283113, 5803, 1612, 33, 308, "Output"]
}, Open  ]],
Cell[284740, 5839, 45, 0, 99, "Input"],
Cell[CellGroupData[{
Cell[284810, 5843, 440, 13, 62, "Input"],
Cell[285253, 5858, 1961, 39, 292, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

