Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell["Setup coordinate frames", "Section"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"xhat", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"1", ",", " ", "0", ",", " ", "0"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"yhat", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"0", ",", " ", "1", ",", " ", "0"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"zhat", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"0", ",", " ", "0", " ", ",", "1"}], "}"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", "0"}], "}"}]], "Output"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "0"}], "}"}]], "Output"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "1"}], "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]zrot", "[", "t_", "]"}], " ", ":=", " ", 
  RowBox[{"RotationMatrix", "[", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "t", "]"}], ",", " ", "zhat"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]xrot", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"RotationMatrix", "[", 
    RowBox[{
     RowBox[{"\[Phi]", "[", "t", "]"}], ",", " ", "xhat"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rhat", "[", "t_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"\[Phi]xrot", "[", "t", "]"}], ".", 
   RowBox[{"\[Theta]zrot", "[", "t", "]"}], ".", 
   "yhat"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]hat", "[", "t_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"\[Phi]xrot", "[", "t", "]"}], ".", 
   RowBox[{"\[Theta]zrot", "[", "t", "]"}], ".", 
   "xhat"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]hat", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"\[Phi]xrot", "[", "t", "]"}], ".", 
    RowBox[{"\[Theta]zrot", "[", "t", "]"}], ".", "zhat"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rvec", "[", "t_", "]"}], " ", ":=", " ", 
  RowBox[{"r", " ", 
   RowBox[{"rhat", "[", "t", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"svec", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], " ", "xhat"}], "+", " ", 
    RowBox[{
     RowBox[{"z", "[", "t", "]"}], " ", "zhat"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hvec", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{"svec", "[", "t", "]"}], "+", 
   RowBox[{"rvec", "[", "t", "]"}]}]}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"rhat", "'"}], "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], " ", 
       RowBox[{"\[Theta]hat", "[", "t", "]"}]}], "+", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Phi]", "'"}], "[", "t", "]"}], 
       RowBox[{"\[Phi]hat", "[", "t", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Theta]hat", "'"}], "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{"\[Theta]", "'"}], "[", "t", "]"}]}], " ", 
       RowBox[{"rhat", "[", "t", "]"}]}], " ", "-", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Phi]", "'"}], "[", "t", "]"}], 
       RowBox[{"rhat", "[", "t", "]"}]}]}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"xhat", "'"}], "[", "t_", "]"}], " ", ":=", " ", "0"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"yhat", "'"}], "[", "t_", "]"}], " ", ":=", " ", "0"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"zhat", "'"}], "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], 
   "*)"}], "\[IndentingNewLine]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$Assumptions", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Theta]", "[", "t", "]"}], "\[Element]", "Reals"}], ",", 
    RowBox[{
     RowBox[{"\[Phi]", "[", "t", "]"}], "\[Element]", "Reals"}]}], "}"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "telling", " ", "mathematica", " ", "that", " ", "the", " ", "vectors", 
    " ", "are", " ", "perpendicular"}], "*)"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]", "[", "t", "]"}], "\[Element]", "Reals"}], ",", 
   RowBox[{
    RowBox[{"\[Phi]", "[", "t", "]"}], "\[Element]", "Reals"}]}], 
  "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Norm", "[", 
   RowBox[{"rhat", "[", "t", "]"}], "]"}], "]"}]], "Input"],

Cell[BoxData["1"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FullSimplify", "@", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"rvec", "[", "t", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "@", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"hvec", "[", "t", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "r"}], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Theta]", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "r"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "r"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Theta]", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "+", 
    RowBox[{"r", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Phi]", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}]}], "}"}]], "Output"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "-", 
    RowBox[{"r", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Theta]", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"-", "r"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["z", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "-", 
    RowBox[{"r", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Theta]", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "+", 
    RowBox[{"r", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Phi]", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}]}], "}"}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Setup forces", "Section"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fg2vec", "=", 
   RowBox[{
    RowBox[{"-", "m2"}], " ", "g", " ", "yhat"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fn2vec", "=", 
    RowBox[{
     RowBox[{"fn2", "[", "t", "]"}], " ", 
     RowBox[{"rhat", "[", "t", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Motor", " ", "force"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mtvec", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"motor1", "[", "t", "]"}]}], " ", 
      RowBox[{"\[Theta]hat", "[", "t", "]"}]}], "-", 
     RowBox[{
      RowBox[{"motor2", "[", "t", "]"}], 
      RowBox[{"\[Phi]hat", "[", "t", "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f1vec", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"f1x", "[", "t", "]"}], " ", 
     RowBox[{"(", "xhat", ")"}]}], " ", "+", " ", 
    RowBox[{
     RowBox[{"f1z", "[", "t", "]"}], " ", 
     RowBox[{"(", "zhat", ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fg1vec", "=", 
   RowBox[{
    RowBox[{"-", "m1"}], " ", "g", " ", "yhat"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fn1vec", "=", 
   RowBox[{
    RowBox[{"fn1", "[", "t", "]"}], " ", "yhat"}]}], ";"}]}], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Newton\[CloseCurlyQuote]s Laws as vector equations", "Section"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"headeqn", "=", 
   RowBox[{"FullSimplify", "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"fn2vec", "+", "mtvec", " ", "+", " ", "fg2vec"}], "\[Equal]", 
      RowBox[{"m2", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"hvec", "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "2"}], "}"}]}], "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"headeqn", "//", "TraditionalForm"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bodyeqn", "=", 
   RowBox[{"FullSimplify", "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
      "f1vec", "+", "fn1vec", "+", "fg1vec", "-", "fn2vec", "-", "mtvec"}], 
      "\[Equal]", 
      RowBox[{"m1", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"svec", "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "2"}], "}"}]}], "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bodyeqn", "//", "TraditionalForm"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bodymomenteqn", "=", 
   RowBox[{"FullSimplify", "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Cross", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "r"}], " ", "yhat"}], ",", " ", "f1vec"}], "]"}], "+", 
       " ", 
       RowBox[{"Cross", "[", 
        RowBox[{
         RowBox[{"r", " ", 
          RowBox[{"rhat", "[", "t", "]"}]}], ",", " ", "mtvec"}], "]"}]}], 
      "\[Equal]", 
      RowBox[{"i", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Omega]1", "'"}], "[", "t", "]"}], " ", "xhat"}], " ", 
         "+", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Omega]2", "'"}], "[", "t", "]"}], " ", "yhat"}], " ", 
         "+", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Omega]3", "'"}], "[", "t", "]"}], "zhat"}]}], ")"}]}]}],
      ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"bodymomenteqn", "//", "TraditionalForm"}]}], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"motor1", "(", "t", ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"-", 
         RowBox[{"cos", "(", 
          RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"fn2", "(", "t", ")"}], " ", 
       RowBox[{"sin", "(", 
        RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"cos", "(", 
        RowBox[{"\[Phi]", "(", "t", ")"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"fn2", "(", "t", ")"}], " ", 
          RowBox[{"cos", "(", 
           RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"motor1", "(", "t", ")"}], " ", 
          RowBox[{"sin", "(", 
           RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}]}], ")"}]}], "-", 
      RowBox[{"g", " ", "m2"}], "+", 
      RowBox[{
       RowBox[{"motor2", "(", "t", ")"}], " ", 
       RowBox[{"sin", "(", 
        RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"sin", "(", 
        RowBox[{"\[Phi]", "(", "t", ")"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"fn2", "(", "t", ")"}], " ", 
          RowBox[{"cos", "(", 
           RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"motor1", "(", "t", ")"}], " ", 
          RowBox[{"sin", "(", 
           RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"motor2", "(", "t", ")"}], " ", 
       RowBox[{"cos", "(", 
        RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}]}]}], "}"}], "\[LongEqual]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"r", " ", 
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
            MultilineFunction->None], "(", "t", ")"}], " ", 
          RowBox[{"cos", "(", 
           RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}]}], "+", 
        RowBox[{"r", " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]",
            MultilineFunction->None], "(", "t", ")"}], "2"], " ", 
         RowBox[{"sin", "(", 
          RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["x", "\[Prime]\[Prime]",
          MultilineFunction->None], "(", "t", ")"}]}], ")"}]}], ",", 
     RowBox[{"m2", " ", "r", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"sin", "(", 
          RowBox[{"\[Phi]", "(", "t", ")"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{
             SuperscriptBox["\[Theta]", "\[Prime]",
              MultilineFunction->None], "(", "t", ")"}], " ", 
            RowBox[{"sin", "(", 
             RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["\[Phi]", "\[Prime]",
              MultilineFunction->None], "(", "t", ")"}]}], "-", 
           RowBox[{
            RowBox[{"cos", "(", 
             RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
              MultilineFunction->None], "(", "t", ")"}]}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"cos", "(", 
          RowBox[{"\[Phi]", "(", "t", ")"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
              MultilineFunction->None], "(", "t", ")"}], " ", 
            RowBox[{"sin", "(", 
             RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"cos", "(", 
             RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Theta]", "\[Prime]",
                 MultilineFunction->None], "(", "t", ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Phi]", "\[Prime]",
                 MultilineFunction->None], "(", "t", ")"}], "2"]}], ")"}]}]}],
           ")"}]}]}], ")"}]}], ",", 
     RowBox[{"m2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"r", " ", 
         RowBox[{"cos", "(", 
          RowBox[{"\[Phi]", "(", "t", ")"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"cos", "(", 
             RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
              MultilineFunction->None], "(", "t", ")"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{
             SuperscriptBox["\[Theta]", "\[Prime]",
              MultilineFunction->None], "(", "t", ")"}], " ", 
            RowBox[{"sin", "(", 
             RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["\[Phi]", "\[Prime]",
              MultilineFunction->None], "(", "t", ")"}]}]}], ")"}]}], "-", 
        RowBox[{"r", " ", 
         RowBox[{"sin", "(", 
          RowBox[{"\[Phi]", "(", "t", ")"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
              MultilineFunction->None], "(", "t", ")"}], " ", 
            RowBox[{"sin", "(", 
             RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"cos", "(", 
             RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Theta]", "\[Prime]",
                 MultilineFunction->None], "(", "t", ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Phi]", "\[Prime]",
                 MultilineFunction->None], "(", "t", ")"}], "2"]}], ")"}]}]}],
           ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["z", "\[Prime]\[Prime]",
          MultilineFunction->None], "(", "t", ")"}]}], ")"}]}]}], "}"}]}], 
  TraditionalForm]], "Output"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"f1x", "(", "t", ")"}], "+", 
      RowBox[{
       RowBox[{"fn2", "(", "t", ")"}], " ", 
       RowBox[{"sin", "(", 
        RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"motor1", "(", "t", ")"}], " ", 
       RowBox[{"cos", "(", 
        RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"fn1", "(", "t", ")"}], "+", 
      RowBox[{
       RowBox[{"cos", "(", 
        RowBox[{"\[Phi]", "(", "t", ")"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"motor1", "(", "t", ")"}], " ", 
          RowBox[{"sin", "(", 
           RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"fn2", "(", "t", ")"}], " ", 
          RowBox[{"cos", "(", 
           RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}]}], ")"}]}], "-", 
      RowBox[{"g", " ", "m1"}], "-", 
      RowBox[{
       RowBox[{"motor2", "(", "t", ")"}], " ", 
       RowBox[{"sin", "(", 
        RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"f1z", "(", "t", ")"}], "+", 
      RowBox[{
       RowBox[{"sin", "(", 
        RowBox[{"\[Phi]", "(", "t", ")"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"motor1", "(", "t", ")"}], " ", 
          RowBox[{"sin", "(", 
           RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"fn2", "(", "t", ")"}], " ", 
          RowBox[{"cos", "(", 
           RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"motor2", "(", "t", ")"}], " ", 
       RowBox[{"cos", "(", 
        RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}]}]}], "}"}], "\[LongEqual]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m1", " ", 
      RowBox[{
       SuperscriptBox["x", "\[Prime]\[Prime]",
        MultilineFunction->None], "(", "t", ")"}]}], ",", "0", ",", 
     RowBox[{"m1", " ", 
      RowBox[{
       SuperscriptBox["z", "\[Prime]\[Prime]",
        MultilineFunction->None], "(", "t", ")"}]}]}], "}"}]}], 
  TraditionalForm]], "Output"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "r"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"f1z", "(", "t", ")"}], "+", 
        RowBox[{
         RowBox[{"motor2", "(", "t", ")"}], " ", 
         RowBox[{"cos", "(", 
          RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"-", "r"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"motor1", "(", "t", ")"}], " ", 
         RowBox[{"sin", "(", 
          RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"motor2", "(", "t", ")"}], " ", 
         RowBox[{"sin", "(", 
          RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
         RowBox[{"cos", "(", 
          RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}]}], ")"}]}], ",", 
     RowBox[{"r", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"f1x", "(", "t", ")"}], "+", 
        RowBox[{
         RowBox[{"motor1", "(", "t", ")"}], " ", 
         RowBox[{"cos", "(", 
          RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"motor2", "(", "t", ")"}], " ", 
         RowBox[{"sin", "(", 
          RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
         RowBox[{"sin", "(", 
          RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}]}], ")"}]}]}], "}"}], 
   "\[LongEqual]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"i", " ", 
      RowBox[{
       SuperscriptBox["\[Omega]1", "\[Prime]",
        MultilineFunction->None], "(", "t", ")"}]}], ",", 
     RowBox[{"i", " ", 
      RowBox[{
       SuperscriptBox["\[Omega]2", "\[Prime]",
        MultilineFunction->None], "(", "t", ")"}]}], ",", 
     RowBox[{"i", " ", 
      RowBox[{
       SuperscriptBox["\[Omega]3", "\[Prime]",
        MultilineFunction->None], "(", "t", ")"}]}]}], "}"}]}], 
  TraditionalForm]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Extract the components of those equations into separate equations\
\>", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "fn2", ",", " ", "fn1", ",", " ", "f1x", ",", " ", "f1z", ",", " ", 
    "\[Theta]", ",", " ", "\[Phi]", ",", " ", "x", ",", " ", "z", ",", " ", 
    "\[Omega]1", ",", " ", "\[Omega]2", ",", " ", 
    RowBox[{"\[Omega]3", " ", "=", " ", 
     RowBox[{"11", " ", "unknowns"}]}], ",", " ", 
    RowBox[{"11", " ", "equations", " ", 
     RowBox[{"(", "\:ff61\:25d5\:203f\:25d5\:ff61", ")"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"eq1", "=", 
    RowBox[{"headeqn", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"eq2", "=", 
    RowBox[{"headeqn", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"eq3", " ", "=", 
    RowBox[{"headeqn", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", " ", "3"}], "]"}], "]"}]}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], " ", 
    RowBox[{"motor1", "[", "t", "]"}]}], "-", 
   RowBox[{
    RowBox[{"fn2", "[", "t", "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], "\[Equal]", 
  RowBox[{"m2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"r", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
     RowBox[{
      SuperscriptBox["x", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "-", 
     RowBox[{"r", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}]], "Output"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", "g"}], " ", "m2"}], "+", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"fn2", "[", "t", "]"}]}], "-", 
      RowBox[{
       RowBox[{"motor1", "[", "t", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}], "+", 
   RowBox[{
    RowBox[{"motor2", "[", "t", "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}]}], "\[Equal]", 
  RowBox[{"m2", " ", "r", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Theta]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Phi]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "2"]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
    ")"}]}]}]], "Output"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], " ", 
    RowBox[{"motor2", "[", "t", "]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"fn2", "[", "t", "]"}]}], "-", 
      RowBox[{
       RowBox[{"motor1", "[", "t", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}]}], "\[Equal]", 
  RowBox[{"m2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["z", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "-", 
     RowBox[{"r", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Theta]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Phi]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "2"]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
     RowBox[{"r", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
    ")"}]}]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"eq4", " ", "=", " ", 
  RowBox[{"bodyeqn", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"eq5", " ", "=", " ", 
  RowBox[{"bodyeqn", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"eq6", " ", "=", " ", 
  RowBox[{"bodyeqn", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", " ", "3"}], "]"}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f1x", "[", "t", "]"}], "+", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
    RowBox[{"motor1", "[", "t", "]"}]}], "+", 
   RowBox[{
    RowBox[{"fn2", "[", "t", "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], "\[Equal]", 
  RowBox[{"m1", " ", 
   RowBox[{
    SuperscriptBox["x", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", "g"}], " ", "m1"}], "+", 
   RowBox[{"fn1", "[", "t", "]"}], "+", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], " ", 
       RowBox[{"fn2", "[", "t", "]"}]}], "+", 
      RowBox[{
       RowBox[{"motor1", "[", "t", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}], "-", 
   RowBox[{
    RowBox[{"motor2", "[", "t", "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}]}], "\[Equal]", 
  "0"}]], "Output"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f1z", "[", "t", "]"}], "+", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
    RowBox[{"motor2", "[", "t", "]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], " ", 
       RowBox[{"fn2", "[", "t", "]"}]}], "+", 
      RowBox[{
       RowBox[{"motor1", "[", "t", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}]}], "\[Equal]", 
  RowBox[{"m1", " ", 
   RowBox[{
    SuperscriptBox["z", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"eq7", " ", "=", " ", 
  RowBox[{"bodymomenteqn", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"eq8", " ", "=", " ", 
  RowBox[{"bodymomenteqn", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"eq9", " ", "=", " ", 
  RowBox[{"bodymomenteqn", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", " ", "3"}], "]"}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "r"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"f1z", "[", "t", "]"}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"motor2", "[", "t", "]"}]}]}], ")"}]}], "\[Equal]", 
  RowBox[{"i", " ", 
   RowBox[{
    SuperscriptBox["\[Omega]1", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "r"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"motor2", "[", "t", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"motor1", "[", "t", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}]}], ")"}]}], "\[Equal]", 
  RowBox[{"i", " ", 
   RowBox[{
    SuperscriptBox["\[Omega]2", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output"],

Cell[BoxData[
 RowBox[{
  RowBox[{"r", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"f1x", "[", "t", "]"}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"motor1", "[", "t", "]"}]}], "-", 
     RowBox[{
      RowBox[{"motor2", "[", "t", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}]}], ")"}]}], "\[Equal]", 
  RowBox[{"i", " ", 
   RowBox[{
    SuperscriptBox["\[Omega]3", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"eq10", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"\[Omega]3", "[", "t", "]"}]}], " ", 
    "r"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"eq11", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
   RowBox[{
    RowBox[{"\[Omega]1", "[", "t", "]"}], " ", 
    "r"}]}]}], "\[IndentingNewLine]"}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["x", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", "r"}], " ", 
   RowBox[{"\[Omega]3", "[", "t", "]"}]}]}]], "Output"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["x", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{"r", " ", 
   RowBox[{"\[Omega]1", "[", "t", "]"}]}]}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Eliminate the constraint forces", "Section"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"eqs", "=", 
   RowBox[{"Eliminate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq1", ",", "eq2", ",", "eq3", ",", "eq4", ",", "eq5", ",", " ", "eq6", 
       ",", " ", "eq7", ",", " ", "eq8", ",", " ", "eq9", ",", " ", "eq10", 
       ",", " ", "eq11"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"fn1", "[", "t", "]"}], ",", 
       RowBox[{"fn2", "[", "t", "]"}], ",", 
       RowBox[{"f1x", "[", "t", "]"}], ",", " ", 
       RowBox[{"flz", "[", "t", "]"}], ",", " ", 
       RowBox[{"\[Omega]1", "[", "t", "]"}], ",", " ", 
       RowBox[{"\[Omega]2", "[", "t", "]"}], ",", " ", 
       RowBox[{"\[Omega]3", "[", "t", "]"}]}], "}"}]}], "]"}]}], 
  "*)"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqs", "=", 
  RowBox[{"Eliminate", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "eq1", ",", "eq2", ",", "eq3", ",", "eq4", ",", "eq5", ",", " ", "eq6", 
      ",", " ", "eq7", ",", " ", "eq8", ",", " ", "eq9", ",", " ", "eq10", 
      ",", " ", "eq11"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"fn1", "[", "t", "]"}], ",", 
      RowBox[{"fn2", "[", "t", "]"}], ",", 
      RowBox[{"f1x", "[", "t", "]"}], ",", " ", 
      RowBox[{"flz", "[", "t", "]"}]}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         TemplateBox[{"1"},
          "OutputSizeLimit`Skeleton",
          DisplayFunction->(FrameBox[
            RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
            Background -> GrayLevel[0.75], 
            BaseStyle -> {
             "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
              ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
            ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
            FrameStyle -> None, RoundingRadius -> 7]& )],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{74., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{67., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 43, 20759718782329699841, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{73., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 43, 20759718782329699841, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 43, 20759718782329699841, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{100., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[43]]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "eqs", "]"}]], "Input"],

Cell[BoxData["20"], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Params", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"params", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"m1", "\[Rule]", "28.94"}], ",", 
    RowBox[{"m2", "\[Rule]", "1"}], ",", 
    RowBox[{"g", "\[Rule]", "9.8"}], ",", 
    RowBox[{"i", "\[Rule]", "2.7425"}], ",", 
    RowBox[{"r", "\[Rule]", ".254"}]}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"m1", "\[Rule]", "28.94`"}], ",", 
   RowBox[{"m2", "\[Rule]", "1"}], ",", 
   RowBox[{"g", "\[Rule]", "9.8`"}], ",", 
   RowBox[{"i", "\[Rule]", "2.7425`"}], ",", 
   RowBox[{"r", "\[Rule]", "0.254`"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Variables", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"List", "@@", "eqs"}], "]"}], "/.", "params"}], "/.", 
   RowBox[{"Equal", "\[Rule]", "Plus"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ",", 
   RowBox[{"f1z", "[", "t", "]"}], ",", 
   RowBox[{"motor1", "[", "t", "]"}], ",", 
   RowBox[{"motor2", "[", "t", "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ",", 
   RowBox[{"\[Omega]1", "[", "t", "]"}], ",", 
   RowBox[{"\[Omega]3", "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox["x", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox["\[Theta]", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox["\[Phi]", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox["\[Omega]1", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox["\[Omega]2", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox["\[Omega]3", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox["x", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox["z", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"allEqs", "=", 
   RowBox[{"{", 
    RowBox[{
    "eq1", ",", "eq2", ",", "eq3", ",", "eq4", ",", "eq5", ",", " ", "eq6", 
     ",", " ", "eq7", ",", " ", "eq8", ",", " ", "eq9", ",", " ", "eq10", ",",
      " ", "eq11"}], "}"}]}], ";"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Motor Goal", "Section"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"goalz", "[", "t_", "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"t", "<", "5"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"t", "<", "35"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"t", "<", "65"}]}], "}"}]}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"goalz", "[", "t", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Time (s)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(x\), \(0\)]\) (m)\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<\!\(\*SubscriptBox[\(z\), \(\\\ \)]\)as a function of time\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"goalx", "[", "t_", "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"t", "<", "5"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"t", "<", "35"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"t", "<", "65"}]}], "}"}]}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"goalx", "[", "t", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Time (s)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(x\), \(0\)]\) (m)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<x as a function of time\>\""}]}], 
  "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQrdT/d/E8uYN2DFCwnUNTPjdjvj2Mf7Bi3RKNjPVw
/jGDwnS2jP1w/omeSx5f08/D+Setmne+Sb8P55+aeLvwRfp7ON9rL7vfs/T/
cL7h/6SvYh8Q/B6F+HPKNgwOMH5J0q7SkCMIvsuzgiNbrzDC+Y/e3k2s+MoM
5yv83T7nrxkHnC8yL/WDaDWCz2Ev7KK3H8F/35D3Os6dE87fx6JqdSCcC86P
5Zl0vamCB84/y2vGyRIrAOdf8haaca4Gwb/R+U5t5hwE/wnrche9Owj+n7/i
DRHRgnA+k80XPuVqBJ+j6sLct7MQfOFvHbubbiH4Wu9+flsTKQTnG+hcay2v
RPDNsjaJOM1E8J2eZRldv4Hge6i4H1z4A8H3S1IOyJEQhvMj793OZYxA8ONk
dvw5XY7gp0RN6Z42HcHPmlEglbgdwS+45rNS+zqC33Hs14WI+wg+AOr8ijU=

       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQXWHJqr9cQcSBAQw+2Hec2/skNAzBf7qu8dK/IDE4
36nf9cByfwk4n+27zDsWUxk4P1X/F68hrwKc76uZ+lHMXQXO33SltvSkhQac
by2ktZ6lXgfOT/89ae7SCAM4P//Yc+P1vkZwflcUm+rfHBM4P/l4dZphhhmc
f5BdMjA70gLONxRsmPayxArOT/hsq+OXYwPnL5x3VOZ7rx2cv7nP6valIAc4
f4rKHtEd5xH8kl22AXN9HOH8SusUqZ5YBL9uT9eTqjwEn+HvXM9PZQj+xQh5
qdfVCD4AxaZsDw==
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQrb/8wVORFkcHBjD4sJ+l7ojww3YE303O75hMD4Lf
vu96RcQEBH/CARVes00I/qxDhQuFryD4a45xnzon7gTn7z+19FNnNIIv0vn+
+s+bCH6mu+XezAhnOH/OCsOt2VkucP7Ez3sbC8pd4fxnq0rLMorc4PwjbpNm
NDW5w/mM/rce9Td4wPkMjtsYF1R6wvkd4t99L7V7wfkFUcmHvjd7w/kPG01S
7Kf6INw7eeatzoW+cP4yAa3K47P94PwtB1Xiy5X94fyDRfKu6qsR/IRl6kw1
rxD8/2+mx78QCUD45+fNvr0qCP45Npl9k0wQfI6uN5wdFgi+E+/e0FobBD9j
DX/vV1sEHwCT/Z6F
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQPSP4QxGXU4ADAxRsE457m+6C4AeHuk1OckPwP0zT
s4z1QPC1pP63BPkg+PMUFsjYhiD4fF2GJ3TDEPz6z4eK5SIQ/IRjT0/9j0bw
lXK0Kw8lI/jLtm+76l6M4K/zO9sXNAnB31vziyHjAoKv6M3+Rzk8EM7fcl6z
++YVBL/n2D8DhdggOH9y8cushDsIfo2oHL9SZDCcv1KT9VTJAwSf7Quj5MG4
EDh/ucHGunnPEXzNpFV+f3ND4fzbnjs3hb5G8C8trtK1Lw6D839sDrRR+oTg
/99RtLUtLxzO9zZwc635iuAfj9XPzC6OgPOFkjN2zy1F8OMyFvJeKEfwvxUJ
bzKpQfBVOr7/+tuC4Dds2t8zYRqCb8UesGHrTgS/jaeT6cVuBP+i4KEQqX0I
foaMyc+6Qwj+dEMJJ4/TCP6X6AeXb91B8B0SJdV47yP43WlBFfYPEXylwiMy
S54i+IFtK1Jz3yH4c7ofbp//AcF/MUGK69InJP/M7lln9h3BP7PgKEPmTwRf
fNm/oNm/Efyk1eZLz/5F8NdtKPj+/z+CDwDLU7dU
       
       "]]}, {}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Time (s)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(x\\), \\(0\\)]\\) (m)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"\\!\\(\\*SubscriptBox[\\(z\\), \\(\\\\ \\)]\\)as a function of time\"", 
    TraditionalForm],
  PlotRange->{{0, 100}, {-1., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQrdT/d/E8uYN2DFCwnUNTPjdjvj2Mf7Bi3RKNjPVw
/jGDwnS2jP1w/omeSx5f08/D+Setmne+Sb8P55+aeLvwRfp7ON9rL7vfs/T/
cL7h/6SvYh8Q/B6F+HPKNgwOMH5J0q7SkCMIvsuzgiNbrzDC+Y/e3k2s+MoM
5yv83T7nrxkHnC8yL/WDaDWCz2Ev7KK3H8F/35D3Os6dE87fx6JqdSCcC86P
5Zl0vamCB84/y2vGyRIrAOdf8haaca4Gwb/R+U5t5hwE/wnrche9Owj+n7/i
DRHRgnA+k80XPuVqBJ+j6sLct7MQfOFvHbubbiH4Wu9+flsTKQTnG+hcay2v
RPDNsjaJOM1E8J2eZRldv4Hge6i4H1z4A8H3S1IOyJEQhvMj793OZYxA8ONk
dvw5XY7gp0RN6Z42HcHPmlEglbgdwS+45rNS+zqC33Hs14WI+wg+AOr8ijU=

       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQXWHJqr9cQcSBAQw+2Hec2/skNAzBf7qu8dK/IDE4
36nf9cByfwk4n+27zDsWUxk4P1X/F68hrwKc76uZ+lHMXQXO33SltvSkhQac
by2ktZ6lXgfOT/89ae7SCAM4P//Yc+P1vkZwflcUm+rfHBM4P/l4dZphhhmc
f5BdMjA70gLONxRsmPayxArOT/hsq+OXYwPnL5x3VOZ7rx2cv7nP6valIAc4
v2SXbcBcH0c4f/+ppZ86o53g/Ex3y72ZEc5w/pwVhluzs1zg/Imf9zYWlLvC
+c9WlZZlFLnB+UfcJs1oanKH8xn9bz3qb/CA8xkctzEuqPSE8zvEv/teaveC
8wuikg99b/aG8x82mqTYT/WB80Umz7zVudAXzl8moFV5fLYfnL/loEp8ubI/
IvyK5F3VVyP4CcvUmWpeIfj/30yPfyESgPDPz5t9e1UQ/HNsMvsmmSD4HF1v
ODssEHwn3r2htTYIfsYa/t6vtgg+ALoLvGs=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQPSP4QxGXU4ADAxRsE457m+6C4AeHuk1OckPwP0zT
s4z1QPC1pP63BPkg+PMUFsjYhiD4fF2GJ3TDEPz6z4eK5SIQ/IRjT0/9j0bw
lXK0Kw8lI/jLtm+76l6M4K/zO9sXNAnB31vziyHjAoKv6M3+Rzk8EM7fcl6z
++YVBL/n2D8DhdggOH9y8cushDsIfo2oHL9SZDCcv1KT9VTJAwSf7Quj5MG4
EDh/ucHGunnPEXzNpFV+f3ND4fzbnjs3hb5G8C8trtK1Lw6D839sDrRR+oTg
/99RtLUtLxzO9zZwc635iuAfj9XPzC6OgPOFkjN2zy1F8OMyFvJeKEfwvxUJ
bzKpQfBVOr7/+tuC4Dds2t8zYRqCb8UesGHrTgS/jaeT6cVuBP+i4KEQqX0I
foaMyc+6Qwj+dEMJJ4/TCP6X6AeXb91B8B0SJdV47yP43WlBFfYPEXylwiMy
S54i+IFtK1Jz3yH4c7ofbp//AcF/MUGK69InJP/M7lln9h3BP7PgKEPmTwRf
fNm/oNm/Efyk1eZLz/5F8NdtKPj+/z+CDwDLU7dU
       
       "]]}, {}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Time (s)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(x\\), \\(0\\)]\\) (m)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"x as a function of time\"", TraditionalForm],
  PlotRange->{{0, 100}, {0., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerically approximate the solution", "Section"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"motorPD", "=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"kp\[Theta]", "\[Rule]", "12"}], ",", 
    RowBox[{"kd\[Theta]", "\[Rule]", 
     RowBox[{"-", "2"}]}], ",", 
    RowBox[{"kp\[Phi]", "\[Rule]", "12"}], ",", 
    RowBox[{"kd\[Phi]", "\[Rule]", 
     RowBox[{"-", "2"}]}], ",", 
    RowBox[{"kpx", "\[Rule]", 
     RowBox[{"-", "1"}]}], ",", 
    RowBox[{"kdx", "\[Rule]", 
     RowBox[{"-", "10"}]}], ",", 
    RowBox[{"kpz", "\[Rule]", 
     RowBox[{"-", "1"}]}], ",", 
    RowBox[{"kdz", "\[Rule]", 
     RowBox[{"-", "10"}]}]}], "|>"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"control", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"motor1", "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "kp\[Theta]"}], " ", 
         RowBox[{"\[Theta]", "[", "t", "]"}]}], "+", 
        RowBox[{"kd\[Theta]", " ", 
         RowBox[{
          RowBox[{"\[Theta]", "'"}], "[", "t", "]"}]}], "+", 
        RowBox[{"kpx", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], "-", 
           RowBox[{"goalx", "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{"kdx", " ", 
         RowBox[{
          RowBox[{"x", "'"}], "[", "t", "]"}]}]}]}], ",", 
      RowBox[{
       RowBox[{"motor2", "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"kp\[Phi]", " ", 
         RowBox[{"\[Phi]", "[", "t", "]"}]}], "-", 
        RowBox[{"kd\[Phi]", " ", 
         RowBox[{
          RowBox[{"\[Phi]", "'"}], "[", "t", "]"}]}], "+", 
        RowBox[{"kpz", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"z", "[", "t", "]"}], "-", 
           RowBox[{"goalz", "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{"kdz", " ", 
         RowBox[{
          RowBox[{"z", "'"}], "[", "t", "]"}]}]}]}]}], "}"}], "/.", 
    "motorPD"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initialConds", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"z", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", ".01"}], ",", 
     RowBox[{
      RowBox[{"\[Phi]", "[", "0", "]"}], "\[Equal]", ".01"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"z", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Phi]", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"sol", "=", 
  RowBox[{"NDSolveValue", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{"allEqs", ",", "control", ",", "initialConds"}], "}"}], "]"}], 
     "/.", "params"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], ",", 
      RowBox[{"z", "[", "t", "]"}], ",", 
      RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
      RowBox[{"\[Phi]", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<IndexReduction\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Pantelides\>\"", ",", " ", 
         RowBox[{
         "\"\<ConstraintMethod\>\"", "\[Rule]", "\"\<Projection\>\""}]}], 
        "}"}]}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], ",", 
      RowBox[{"z", "[", "t", "]"}], ",", 
      RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
      RowBox[{"\[Phi]", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{"n", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "sol"}], "}"}]}], "]"}]}], "}"}], "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"kp\[Theta]", "\[Rule]", "12"}], ",", 
   RowBox[{"kd\[Theta]", "\[Rule]", 
    RowBox[{"-", "2"}]}], ",", 
   RowBox[{"kp\[Phi]", "\[Rule]", "12"}], ",", 
   RowBox[{"kd\[Phi]", "\[Rule]", 
    RowBox[{"-", "2"}]}], ",", 
   RowBox[{"kpx", "\[Rule]", 
    RowBox[{"-", "1"}]}], ",", 
   RowBox[{"kdx", "\[Rule]", 
    RowBox[{"-", "10"}]}], ",", 
   RowBox[{"kpz", "\[Rule]", 
    RowBox[{"-", "1"}]}], ",", 
   RowBox[{"kdz", "\[Rule]", 
    RowBox[{"-", "10"}]}]}], "\[RightAssociation]"}]], "Output"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4AAADQvb7hPEXRMWw0
Ffo/YsVZlap6UT8FZS60Bi4LQNpmZ1qGJ2A/aslGZ8wwFECQQ3qMnf2QP8qC
eNpvqRpAEEKqlRv0wz8VebNxPtcgQAC8HrA7GNE/IB09Xc4dJEApE3J01GfZ
PykcpROTqidANOZRrgms4D9wLA79xCYrQA+2QFk7qOM/EKmJTQBnLkDPECHw
zNLlP1jAcTS49jBAW5Vh/4e55z9V4qf19JsyQLXJexcOMOk/8YxeUOg4NEB+
Bn5asWDqPwxlhBD2+DVAzg87YZRv6z9VczOECJs3QOE37tvaPew/Hq9RXTVg
OUCpHiNMWPTsP4Vz8M8YHTtAwDELFMaF7T8Zbhj2ALw8QHkWEYbf9O0/LZav
gQN+PkCLfC/RflfuPzj6Z2AFEUBAkwIM8rGi7j8ZwK8ylvRAQMa5tSs35e4/
Scq3UQLUQUAaSZhvjhrvP49vhMpwpEJAYBeyk/lC7z+Vqwh2bIZDQFsbNEu9
Zu8/soJRe2pZREDFkZmqCoLvPx6eWs1DKEVAntMTGxWY7z9KUBtSqghGQLR4
N1ejq+8/jZ2gMBPaRkB2gxYWjLrvP4+B3UEJvUdAWoyNfb7H7z/hqdqf2ptI
QKjLe+pB0u8/SW2cV65rSUAu5C3jSNrvP3HHFUIPTUpAPicB12fh7z+wvFOG
ch9LQCHm0oDV5u8/PvZRF7HtS0Dcj/olOOvvP4zGB9t8zUxAPSC+Jh7v7z/w
MYL4Sp5NQKj8FbgX8u8/FDS0SKaATkANYmZ8uvTvP0/RqvIDVE9An4U8l7z2
7z9t2bB0nhFQQNqOYKhZ+O8/khVoiQGCUECtUovBl1frP0KfAcvl6lBAWAXB
6KRD6D9S9PalkFxRQGAe0RfczuM/imtMJynMUUBMfA6ExaDfP00whNVCNFJA
U1pZdn3N2T9wwBcdI6VSQNST8ZUY6tQ/H56NkYQOU0C8iubQwT7RP/WdY6zT
dVNAVkOmW5eCzD8raZVg6eVTQKbzu6JpJsc/7IGpQYBOVEDqsO708g3DPw1m
Gbzdv1RAS1ubFWvevj9WbOncKC9VQJIDdb1+G7k/KsCbKvWWVUC8R2p/PrW0
P17fqRGIB1ZAWxDTR3HNsD8dTJolnHBWQPiupnT5pas/PITm0nbiVkD9ZMSm
QGGmP4PekiY/UldAnAxjSnYvoj9VhiGniLpXQIcYGy3p950/h/kLwZgrWEBg
oslHP0uYP0W62AcqlVhAGDUYNkn4kz8+GeT4//9YQHBsl5V3YJA/MFG+aQ==

                    "]]}}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 100.}, {0., 0.9990661896340172}}, 
                   PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4AAADQvb7hPEXRMWw0
Ffo/YsVZlap6UT8FZS60Bi4LQNpmZ1qGJ2A/aslGZ8wwFECQQ3qMnf2QP8qC
eNpvqRpAEEKqlRv0wz8VebNxPtcgQAC8HrA7GNE/IB09Xc4dJEApE3J01GfZ
PykcpROTqidANOZRrgms4D9wLA79xCYrQA+2QFk7qOM/EKmJTQBnLkDPECHw
zNLlP1jAcTS49jBAW5Vh/4e55z9V4qf19JsyQLXJexcOMOk/8YxeUOg4NEB+
Bn5asWDqPwxlhBD2+DVAzg87YZRv6z9VczOECJs3QOE37tvaPew/Hq9RXTVg
OUCpHiNMWPTsP4Vz8M8YHTtAwDELFMaF7T8Zbhj2ALw8QHkWEYbf9O0/LZav
gQN+PkCLfC/RflfuPzj6Z2AFEUBAkwIM8rGi7j8ZwK8ylvRAQMa5tSs35e4/
Scq3UQLUQUAaSZhvjhrvP49vhMpwpEJAYBeyk/lC7z+Vqwh2bIZDQFsbNEu9
Zu8/soJRe2pZREDFkZmqCoLvPx6eWs1DKEVAntMTGxWY7z9KUBtSqghGQLR4
N1ejq+8/jZ2gMBPaRkB2gxYWjLrvP4+B3UEJvUdAWoyNfb7H7z/hqdqf2ptI
QKjLe+pB0u8/SW2cV65rSUAu5C3jSNrvP3HHFUIPTUpAPicB12fh7z+wvFOG
ch9LQCHm0oDV5u8/PvZRF7HtS0Dcj/olOOvvP4zGB9t8zUxAPSC+Jh7v7z/w
MYL4Sp5NQKj8FbgX8u8/FDS0SKaATkANYmZ8uvTvP0/RqvIDVE9An4U8l7z2
7z9t2bB0nhFQQNqOYKhZ+O8/khVoiQGCUECtUovBl1frP0KfAcvl6lBAWAXB
6KRD6D9S9PalkFxRQGAe0RfczuM/imtMJynMUUBMfA6ExaDfP00whNVCNFJA
U1pZdn3N2T9wwBcdI6VSQNST8ZUY6tQ/H56NkYQOU0C8iubQwT7RP/WdY6zT
dVNAVkOmW5eCzD8raZVg6eVTQKbzu6JpJsc/7IGpQYBOVEDqsO708g3DPw1m
Gbzdv1RAS1ubFWvevj9WbOncKC9VQJIDdb1+G7k/KsCbKvWWVUC8R2p/PrW0
P17fqRGIB1ZAWxDTR3HNsD8dTJolnHBWQPiupnT5pas/PITm0nbiVkD9ZMSm
QGGmP4PekiY/UldAnAxjSnYvoj9VhiGniLpXQIcYGy3p950/h/kLwZgrWEBg
oslHP0uYP0W62AcqlVhAGDUYNkn4kz8+GeT4//9YQHBsl5V3YJA/MFG+aQ==

                    "]]}}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 100.}, {0., 0.9990661896340172}}, 
                   PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "[", "t", "]"}], ",", 
   RowBox[{
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4AAABo73cBvUXRMWw0
Ffo/J/Gd4VB7bL8FZS60Bi4LQARiwWIsRl2/aslGZ8wwFEDiQwTFVnFzv8qC
eNpvqRpAA017T/7stD8VebNxPtcgQPjQHs/Spck/IB09Xc4dJEAcjvm5O/7U
PykcpROTqidAIphS6eRe3j9wLA79xCYrQAzt73K5TuI/EKmJTQBnLkDAPmsx
9qPkP1jAcTS49jBAqWgOcn3O5j9V4qf19JsyQFEBg0F7Y+g/8YxeUOg4NEDf
ibseBLPpPwxlhBD2+DVAhzVcexTi6j9VczOECJs3QFvCq4g6xes/Hq9RXTVg
OUD3rtr6TpDsP4Vz8M8YHTtAtyIeMOUy7T8Zbhj2ALw8QHZ9qS2zru0/LZav
gQN+PkAhSkuiQx3uPzj6Z2AFEUBAtv+M+cNx7j8ZwK8ylvRAQJ7GDIKWvO4/
Scq3UQLUQUDv4HJlWvnrP49vhMpwpEJAFYWFsrBN4j+Vqwh2bIZDQJJ2+Ofq
MtM/soJRe2pZREA8wbi1bjW5Px6eWs1DKEVA6EDDSBFBs79KUBtSqghGQBfD
xHWtp82/jZ2gMBPaRkA/FnhXyorWv4+B3UEJvUdAkngyuYmh3b/hqdqf2ptI
QJ47xG05seG/SW2cV65rSUCntDEbcO/jv3HHFUIPTUpAmoNpNdX65b+wvFOG
ch9LQIn4r5k+kue/PvZRF7HtS0DKJyCstOLov4zGB9t8zUxAkYLECBEV6r/w
MYL4Sp5NQLdCpkwVBOu/FDS0SKaATkDhgQsRz9zrv0/RqvIDVE9AtN6gQ96F
7L9t2bB0nhFQQH9fxCpcEe2/khVoiQGCUEAI6z/jJmXrv0KfAcvl6lBA3s1H
j6iu5b9S9PalkFxRQA5GFCBwmOG/imtMJynMUUCdJg2wJZjfv00whNVCNFJA
mK8/T3Yz279wwBcdI6VSQMixmrPI7da/H56NkYQOU0CEUismw8rTv/WdY6zT
dVNAm5IzI8rr0L8raZVg6eVTQJPhV7uPpsy/7IGpQYBOVEDrzCjuBJ3Ivw1m
Gbzdv1RAnFUWThvDxL9WbOncKC9VQEMIjHSvlMG/KsCbKvWWVUCX1f2MsRu+
v17fqRGIB1ZAcaFvAvRlub8dTJolnHBWQEDpmxn4q7W/PITm0nbiVkBAAhzK
CD2yv4PekiY/UldAeEY4p4HErr9VhiGniLpXQMW2aPJjPqq/h/kLwZgrWEBM
BJbJTROmv0W62AcqlVhA8i2KSibGor8+GeT4//9YQLE4hWMx3J+/2C3RVw==

                    "]]}}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 100.}, {-0.9083691439909528, 
                    0.9605209865605564}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4AAABo73cBvUXRMWw0
Ffo/J/Gd4VB7bL8FZS60Bi4LQARiwWIsRl2/aslGZ8wwFEDiQwTFVnFzv8qC
eNpvqRpAA017T/7stD8VebNxPtcgQPjQHs/Spck/IB09Xc4dJEAcjvm5O/7U
PykcpROTqidAIphS6eRe3j9wLA79xCYrQAzt73K5TuI/EKmJTQBnLkDAPmsx
9qPkP1jAcTS49jBAqWgOcn3O5j9V4qf19JsyQFEBg0F7Y+g/8YxeUOg4NEDf
ibseBLPpPwxlhBD2+DVAhzVcexTi6j9VczOECJs3QFvCq4g6xes/Hq9RXTVg
OUD3rtr6TpDsP4Vz8M8YHTtAtyIeMOUy7T8Zbhj2ALw8QHZ9qS2zru0/LZav
gQN+PkAhSkuiQx3uPzj6Z2AFEUBAtv+M+cNx7j8ZwK8ylvRAQJ7GDIKWvO4/
Scq3UQLUQUDv4HJlWvnrP49vhMpwpEJAFYWFsrBN4j+Vqwh2bIZDQJJ2+Ofq
MtM/soJRe2pZREA8wbi1bjW5Px6eWs1DKEVA6EDDSBFBs79KUBtSqghGQBfD
xHWtp82/jZ2gMBPaRkA/FnhXyorWv4+B3UEJvUdAkngyuYmh3b/hqdqf2ptI
QJ47xG05seG/SW2cV65rSUCntDEbcO/jv3HHFUIPTUpAmoNpNdX65b+wvFOG
ch9LQIn4r5k+kue/PvZRF7HtS0DKJyCstOLov4zGB9t8zUxAkYLECBEV6r/w
MYL4Sp5NQLdCpkwVBOu/FDS0SKaATkDhgQsRz9zrv0/RqvIDVE9AtN6gQ96F
7L9t2bB0nhFQQH9fxCpcEe2/khVoiQGCUEAI6z/jJmXrv0KfAcvl6lBA3s1H
j6iu5b9S9PalkFxRQA5GFCBwmOG/imtMJynMUUCdJg2wJZjfv00whNVCNFJA
mK8/T3Yz279wwBcdI6VSQMixmrPI7da/H56NkYQOU0CEUismw8rTv/WdY6zT
dVNAm5IzI8rr0L8raZVg6eVTQJPhV7uPpsy/7IGpQYBOVEDrzCjuBJ3Ivw1m
Gbzdv1RAnFUWThvDxL9WbOncKC9VQEMIjHSvlMG/KsCbKvWWVUCX1f2MsRu+
v17fqRGIB1ZAcaFvAvRlub8dTJolnHBWQEDpmxn4q7W/PITm0nbiVkBAAhzK
CD2yv4PekiY/UldAeEY4p4HErr9VhiGniLpXQMW2aPJjPqq/h/kLwZgrWEBM
BJbJTROmv0W62AcqlVhA8i2KSibGor8+GeT4//9YQLE4hWMx3J+/2C3RVw==

                    "]]}}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 100.}, {-0.9083691439909528, 
                    0.9605209865605564}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "[", "t", "]"}], ",", 
   RowBox[{
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{1.694915254237288*^-6, 0.009999999999883307}, {
                    1.6301769472457448`, -0.0015252527683570893`}, {
                    3.397473724046565, -0.00283296346299865}, {
                    5.047654737182123, -0.013619210860840156`}, {
                    5.709187089410502, 0.048214306487080485`}}], 
                    
                    LineBox[{{8.693749935203627, 0.048214306487080485`}, {
                    10.058215059003999`, -0.04702286022555212}, {
                    10.37788248811561, -0.05139058818515334}}], 
                    LineBox[CompressedData["
1:eJwBIQLe/SFib1JlAgAAACEAAAACAAAALJ7kBlAHK0DmpSf/3U+qv3AsDv3E
JitAbIIahp7wqb8QqYlNAGcuQJtaTdjQQqG/WMBxNLj2MEC5BfkEl3GZv1Xi
p/X0mzJA0Arj0DSdlb/xjF5Q6Dg0QPcfcFInkJK/DGWEEPb4NUARPg1NiXeO
v1VzM4QImzdA70Pbiz7riL8er1FdNWA5QNhP+uuqDYS/hXPwzxgdO0BlilpL
QkuAvxluGPYAvDxAcY3InsDper8tlq+BA34+QHFlzZj023W/OPpnYAURQEAp
GrwSk/xxvxnArzKW9EBAcxbcayEdbb9JyrdRAtRBQGQxDs/IdGi/j2+EynCk
QkAP5iYjfqVjv5WrCHZshkNAC1dn3EsxX7+yglF7allEQGRtnjaBDlq/Hp5a
zUMoRUCIvYPZN5BVv0pQG1KqCEZAE+cLlt5qUb+NnaAwE9pGQBksbZ6Aoky/
j4HdQQm9R0BW8Yd2qSxHv+Gp2p/am0hA9NZuH4TXQr9JbZxXrmtJQHjL9VSp
Ez+/cccVQg9NSkBjvRw+rzQ5v7C8U4ZyH0tAARuuA+W6NL8+9lEXse1LQPr+
OJGyHTG/jMYH23zNTED67NYVKM8rv/AxgvhKnk1AnJqY/23oJr8UNLRIpoBO
QJlCAFfikCK/T9Gq8gNUT0B0o1F+BIQev23ZsHSeEVBAwDdxkJjxGL9IKlkh
I0NQQOalJ//dT6q/cW/3Og==
                    "]], 
                    LineBox[{{68.24896011144509, -0.05139058818515334}, {
                    69.44632863155974, 0.037585012464939505`}, {
                    69.98927694950112, 0.048214306487080485`}}], 
                    
                    LineBox[{{73.42020273175447, 0.048214306487080485`}, {
                    74.58026816672805, 0.03509396735398967}, {
                    76.2268413432107, 0.025818291698360453`}, {
                    77.84104451873993, 0.021820496767987075`}, {
                    79.5923692187395, 0.018594809774872104`}, {
                    81.22657815507381, 0.015528609111859722`}, {
                    82.99790861587844, 0.012497576258441724`}, {
                    84.73686907572969, 0.01008965031004233}, {
                    86.35871377191566, 0.008308989513088562}, {
                    88.11767999257196, 0.006751427425539964}, {
                    89.759530449563, 0.005560564326762319}, {
                    91.53850243102437, 0.004501420842674163}, {
                    93.28510441153234, 0.003656699048551433}, {
                    94.91459062837505, 0.003012525202878315}, {
                    96.68119836968809, 0.0024421199438927755`}, {
                    98.33069034733587, 0.0020075399092665423`}, {
                    99.99999830508474, 
                    0.0016463750134817436`}}]}}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 100.}, {-0.05139058818515334, 
                    0.048214306487080485`}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{1.694915254237288*^-6, 0.009999999999883307}, {
                    1.6301769472457448`, -0.0015252527683570893`}, {
                    3.397473724046565, -0.00283296346299865}, {
                    5.047654737182123, -0.013619210860840156`}, {
                    5.709187089410502, 0.048214306487080485`}}], 
                    
                    LineBox[{{8.693749935203627, 0.048214306487080485`}, {
                    10.058215059003999`, -0.04702286022555212}, {
                    10.37788248811561, -0.05139058818515334}}], 
                    LineBox[CompressedData["
1:eJwBIQLe/SFib1JlAgAAACEAAAACAAAALJ7kBlAHK0DmpSf/3U+qv3AsDv3E
JitAbIIahp7wqb8QqYlNAGcuQJtaTdjQQqG/WMBxNLj2MEC5BfkEl3GZv1Xi
p/X0mzJA0Arj0DSdlb/xjF5Q6Dg0QPcfcFInkJK/DGWEEPb4NUARPg1NiXeO
v1VzM4QImzdA70Pbiz7riL8er1FdNWA5QNhP+uuqDYS/hXPwzxgdO0BlilpL
QkuAvxluGPYAvDxAcY3InsDper8tlq+BA34+QHFlzZj023W/OPpnYAURQEAp
GrwSk/xxvxnArzKW9EBAcxbcayEdbb9JyrdRAtRBQGQxDs/IdGi/j2+EynCk
QkAP5iYjfqVjv5WrCHZshkNAC1dn3EsxX7+yglF7allEQGRtnjaBDlq/Hp5a
zUMoRUCIvYPZN5BVv0pQG1KqCEZAE+cLlt5qUb+NnaAwE9pGQBksbZ6Aoky/
j4HdQQm9R0BW8Yd2qSxHv+Gp2p/am0hA9NZuH4TXQr9JbZxXrmtJQHjL9VSp
Ez+/cccVQg9NSkBjvRw+rzQ5v7C8U4ZyH0tAARuuA+W6NL8+9lEXse1LQPr+
OJGyHTG/jMYH23zNTED67NYVKM8rv/AxgvhKnk1AnJqY/23oJr8UNLRIpoBO
QJlCAFfikCK/T9Gq8gNUT0B0o1F+BIQev23ZsHSeEVBAwDdxkJjxGL9IKlkh
I0NQQOalJ//dT6q/cW/3Og==
                    "]], 
                    
                    LineBox[{{68.24896011144509, -0.05139058818515334}, {
                    69.44632863155974, 0.037585012464939505`}, {
                    69.98927694950112, 0.048214306487080485`}}], 
                    
                    LineBox[{{73.42020273175447, 0.048214306487080485`}, {
                    74.58026816672805, 0.03509396735398967}, {
                    76.2268413432107, 0.025818291698360453`}, {
                    77.84104451873993, 0.021820496767987075`}, {
                    79.5923692187395, 0.018594809774872104`}, {
                    81.22657815507381, 0.015528609111859722`}, {
                    82.99790861587844, 0.012497576258441724`}, {
                    84.73686907572969, 0.01008965031004233}, {
                    86.35871377191566, 0.008308989513088562}, {
                    88.11767999257196, 0.006751427425539964}, {
                    89.759530449563, 0.005560564326762319}, {
                    91.53850243102437, 0.004501420842674163}, {
                    93.28510441153234, 0.003656699048551433}, {
                    94.91459062837505, 0.003012525202878315}, {
                    96.68119836968809, 0.0024421199438927755`}, {
                    98.33069034733587, 0.0020075399092665423`}, {
                    99.99999830508474, 
                    0.0016463750134817436`}}]}}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 100.}, {-0.05139058818515334, 
                    0.048214306487080485`}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "[", "t", "]"}], ",", 
   RowBox[{
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{1.694915254237288*^-6, 0.009999999999906117}, {
                    1.6301769472457448`, -0.008505211957996563}, {
                    3.397473724046565, 0.002847849719137867}, {
                    5.047654737182123, 0.004899527605002573}, {
                    6.665465749364282, -0.011852459796766291`}, {
                    8.420398286016772, -0.07624063925584593}, {
                    10.058215059003999`, 0.014290352431863638`}, {
                    10.904257964115452`, 0.054377243733296374`}}], 
                    LineBox[CompressedData["
1:eJwBMQLO/SFib1JlAgAAACIAAAACAAAAtR+bS3OGKkCGVvaGVderP3AsDv3E
JitAgEqOT6nnpj8QqYlNAGcuQJuFRFLvPp8/WMBxNLj2MEC0fukTBkGfP1Xi
p/X0mzJALPPNSMCPlD/xjF5Q6Dg0QJESH9Peu5I/DGWEEPb4NUCuGveaRa+Q
P1VzM4QImzdAnEWn1dAPiT8er1FdNWA5QK2l36+E5oQ/hXPwzxgdO0CEBIAQ
JTqBPxluGPYAvDxAmtNLn22xez8tlq+BA34+QDez+r/p5HY/OPpnYAURQEB7
X1/Uu91yPxnArzKW9EBAiP/uartObj9JyrdRAtRBQAEKVNsUZIo/j2+EynCk
QkDh8PLeR/6vv5WrCHZshkNASg17Ge7Gq7+yglF7allEQOhMGadx6JW/Hp5a
zUMoRUCRdUyP7Aihv0pQG1KqCEZA0UVkgr6/mr+NnaAwE9pGQPO3PXwnl5K/
j4HdQQm9R0AztpKlpa2Sv+Gp2p/am0hA+aYCqZNEjb9JbZxXrmtJQGkQWJO8
3Ye/cccVQg9NSkBuXB8lmQGFv7C8U4ZyH0tAcu9ZhQQ0gb8+9lEXse1LQB17
8p4M5Xy/jMYH23zNTEBG+NY0Ynd4v/AxgvhKnk1A0/YGNAtpdL8UNLRIpoBO
QMsFPhU49XC/T9Gq8gNUT0CJT6JL/aNsv23ZsHSeEVBAxA/CqtYTaL+SFWiJ
AYJQQED+VikDO22/29iWeNasUECGVvaGVderP7rpATw=
                    "]], 
                    LineBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAA+JV7+ypYUUCGVvaGVderP1L09qWQ
XFFAV5ep8X8cqj+Ka0wnKcxRQJ1zR/z0S7O/TTCE1UI0UkD2q4Dpj0WVv3DA
Fx0jpVJAWAM0N2UYer8fno2RhA5TQFguZ2X9Toy/9Z1jrNN1U0DuY807f7du
vytplWDp5VNAWoGwgMeQcr/sgalBgE5UQNELxGs1Ene/DWYZvN2/VEBegUxX
fJFlv1Zs6dwoL1VAMeIgvDRoY78qwJsq9ZZVQN+mR+qCYWC/Xt+pEYgHVkBH
4m6fiOJTvx1MmiWccFZARyPCQRXSUL88hObSduJWQOORRowirki/g96SJj9S
V0C27u0hWDRAv1WGIaeIuldAn+ivYAm8OL+H+QvBmCtYQOC5PECjZTC/RbrY
ByqVWECU2wc0Iewkvz4Z5Pj//1hADF+JtYnLGr8SDpuH
                    
                    "]]}}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 100.}, {-0.07624063925584593, 
                    0.054377243733296374`}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{1.694915254237288*^-6, 0.009999999999906117}, {
                    1.6301769472457448`, -0.008505211957996563}, {
                    3.397473724046565, 0.002847849719137867}, {
                    5.047654737182123, 0.004899527605002573}, {
                    6.665465749364282, -0.011852459796766291`}, {
                    8.420398286016772, -0.07624063925584593}, {
                    10.058215059003999`, 0.014290352431863638`}, {
                    10.904257964115452`, 0.054377243733296374`}}], 
                    LineBox[CompressedData["
1:eJwBMQLO/SFib1JlAgAAACIAAAACAAAAtR+bS3OGKkCGVvaGVderP3AsDv3E
JitAgEqOT6nnpj8QqYlNAGcuQJuFRFLvPp8/WMBxNLj2MEC0fukTBkGfP1Xi
p/X0mzJALPPNSMCPlD/xjF5Q6Dg0QJESH9Peu5I/DGWEEPb4NUCuGveaRa+Q
P1VzM4QImzdAnEWn1dAPiT8er1FdNWA5QK2l36+E5oQ/hXPwzxgdO0CEBIAQ
JTqBPxluGPYAvDxAmtNLn22xez8tlq+BA34+QDez+r/p5HY/OPpnYAURQEB7
X1/Uu91yPxnArzKW9EBAiP/uartObj9JyrdRAtRBQAEKVNsUZIo/j2+EynCk
QkDh8PLeR/6vv5WrCHZshkNASg17Ge7Gq7+yglF7allEQOhMGadx6JW/Hp5a
zUMoRUCRdUyP7Aihv0pQG1KqCEZA0UVkgr6/mr+NnaAwE9pGQPO3PXwnl5K/
j4HdQQm9R0AztpKlpa2Sv+Gp2p/am0hA+aYCqZNEjb9JbZxXrmtJQGkQWJO8
3Ye/cccVQg9NSkBuXB8lmQGFv7C8U4ZyH0tAcu9ZhQQ0gb8+9lEXse1LQB17
8p4M5Xy/jMYH23zNTEBG+NY0Ynd4v/AxgvhKnk1A0/YGNAtpdL8UNLRIpoBO
QMsFPhU49XC/T9Gq8gNUT0CJT6JL/aNsv23ZsHSeEVBAxA/CqtYTaL+SFWiJ
AYJQQED+VikDO22/29iWeNasUECGVvaGVderP7rpATw=
                    "]], 
                    LineBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAA+JV7+ypYUUCGVvaGVderP1L09qWQ
XFFAV5ep8X8cqj+Ka0wnKcxRQJ1zR/z0S7O/TTCE1UI0UkD2q4Dpj0WVv3DA
Fx0jpVJAWAM0N2UYer8fno2RhA5TQFguZ2X9Toy/9Z1jrNN1U0DuY807f7du
vytplWDp5VNAWoGwgMeQcr/sgalBgE5UQNELxGs1Ene/DWYZvN2/VEBegUxX
fJFlv1Zs6dwoL1VAMeIgvDRoY78qwJsq9ZZVQN+mR+qCYWC/Xt+pEYgHVkBH
4m6fiOJTvx1MmiWccFZARyPCQRXSUL88hObSduJWQOORRowirki/g96SJj9S
V0C27u0hWDRAv1WGIaeIuldAn+ivYAm8OL+H+QvBmCtYQOC5PECjZTC/RbrY
ByqVWECU2wc0Iewkvz4Z5Pj//1hADF+JtYnLGr8SDpuH
                    
                    "]]}}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 100.}, {-0.07624063925584593, 
                    0.054377243733296374`}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "[", "t", "]"}]}], "}"}]], "Output"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"x", "[", "t", "]"}], 
     RowBox[{"z", "[", "t", "]"}], 
     RowBox[{"\[Theta]", "[", "t", "]"}], 
     RowBox[{"\[Phi]", "[", "t", "]"}]},
    {
     GraphicsBox[{{{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJwV13k8VF8bAHBkq5A9SYXKlqQsyfY89p2xD5I9spTsW1krJZJEZKsoSWWv
FNlJUSRkF9nNoEL9lPe+/8zM93PPnPucc557nnuEnM+ZudHR0NBUEh///xa+
8fdBzt56VeJniHj1rPILZvF9Ph65wNzq/jj/foFqfcizfDGP57CHZExTfqdZ
9Zb85EnWpBdQYbuyv1mxX7VF+rw7o8dboNO3rX0b+F01gmfz5WZeI2xb2JKt
XrqkmpaipbqR2Aqj8eENZ+bWVJ/vuN64HvYeVsOkw5iP0EDb9W7dX+4fweNR
4dAjWgZYimOZDinqggHxukhHj21wofG5+FreZ9jKGP5O7Ag7bKMz9w5M/wIt
nNMJyue4IA1Xn/1I7IOx5mPGo8u8sD8yY/l83FdoYBf5faGCH0pqlGWXwgbB
9vrFPTEVe+GdYuyrBfdRCOTMj5cu3Q9PlLkuyj0fA0+2vL5rDCKwPOiaG1A0
Dn/fXTvv7y8GF/mZv63kTQDftmaJ2bTDkJ5u7E5NnIakA4zHuH1kYUQ+L17q
6gwkDYp8MVmQgwO9y4994maB+SIXbbz/cSjhvr0wHzYPQ4YnparTFaH95uD5
GXcqRO+lOyaVihB/J+3draNLcJlvKsPEWw0kPcBW5vkS+P6iOeSkrQ5+TDfD
/YqWgf66c8qZTQ34pyVbu5T3A8565/5buagDfI1hGouJa/B3tqL57RVjeJ2y
v+f69nVwaDjx1fS0CZxy/uAqeXUdnDh9q6eESJBPu/eyV9xvmOd2Hg7+S4Kj
WN82G/YfrNRZV/M+MQP9GibjKfdNeHnWS/XiZ0s4uun8i3dpE9hEDzW+U7SC
64IOnfuVabDFNTvOJ88KApyrAy2aaNBu4tJI8mlr0JzybarsocWPfyl7ZIbJ
oHBlL18nHx12/bl1T1TeBiTFPnhNnaRD6928G4cSbYDLU5Rr53c63P++5oeB
nC18Wxx2Cvm1BfmeDayf8rGD3qSEyuQT9Nho1rSqUWUH7UdObH18gR6tpzwf
8P61g7LzqSVfGRhQwvn5qwtxJ+Ehpzr9ih4DnjrSl7+j+SRkllOttyUxYE9r
s+K1LfYQ/Ut/U5GXESnqX0+cCLOHgLR1M3NbRtz9/EPK2TJ78Dj+8KFXDiM6
ulifS5qxB1IorXGWCBPquEl9uGV8CjT5n9+r8GRC2iaqyoWLp0Dh9clfH54x
YfmP0ztsik+B4N8XWX/lmVE+8L79D1oH4M5xW+IJZ8Ysdhm3l+IOwAxcmlJv
mdGl/s9ghIkDbIzWpWtv2YoiP51qNf0dgBp1dv6UzlY88SXDkPu2A3wTEoDg
hK2oDk+YliocoLfhXcqNj1vxnO7NZ0PdDlBLf1CxznobNloq+l6kd4Sygu7E
/rvbsIZ2KCab3REeakeNL41uQzrSyv2Pux0hc/qw3NYD23Fjy1LlThFHSIof
jBfy2I5GM2wvQ444Qoz41aETxdvx1hem17+OO0JQu7y02dJ2LKXtmrwJjuDp
NRnrKcuCktnOZ0najmDPktIXE8KCdE3R92UNHYH0FA7dfcOCIa03h9RMHUHT
ePFiOQ0rOvd6XQm3dAQFamb3e01WNNmqIvCd7AiSyboik/GsKNjvKRRj5wiC
R1dDNz6wYsi/C+JW9o7A3f2gg5uDDS/1cHW7nnIEZn9TocOWbHhbqLehlPAG
12aAVgYb/vEJLUbCSxXFbfbDbFjwtV6Hh/j/pKWtQJDQDtyMSLKQIfrvX2Xy
TXLbgRvy83dyiPu/T69sfPh4B/6SFxuzJeKrVXDZ+XaRaP9p7bcXEf9X7/jK
eT52nFpJefWFGJ+5isPomiI7Xpic+HlXxxE6WOW30tuz42l8Edug5gjdBpx3
OiPYUe5D0fW3SsT9rlJEMrLYkXWYdui4nCOMtLZXurxhR17Da7ekpIj4GB5p
Sg2x49BNg56HxHrMacR+Xv+PHcvuMtc+2EuMJ9rBuXE3B8rGN58V4yXG+3dn
FNmOA9so3Te/bHEEOuWfbPvDOZCdXHWa+SeRX2GfshczOXCYb2UlcdQBuFbj
X8cMcKDT/ThzCSJ/JCi/V4ttOHGDtkjY1MIBpCV7LwWHcmJsrdDHDEUHkPcs
41bP4MRKId80RUEHUC5MesDyihOj9NpUTjA4gPqU57G+fk7E+chX/5ZOge4B
nfp765xIQ7kbXHXcAYyd95O8+biQRqq+f5jkCBZ5myPyClwYNU9Vdt3vDDYj
gz60ZC7EiPhimQo3OCXwcuN9MHE9xe7hocde4GqbmpCWzoXJe38MCJL8wPOO
L7/TCy5kzxAeSkgJAd9ew8eH+rhQ+pOUEXhGQRC3uMLqKhcuSdrzG+Regggz
htY6Xm58aW843/QjAWKSxy0T5Llxaf1jyMeKmxDfWTNpacWN0mIi4U82bkMS
S6a/YBA3tsVYnT/4LhNS9YPo5m9z48UHo9DPmAe5LVKCUV+4MdO5eFRzuADy
6bc/1//Fjc7F/6aebhRCkfq0Cg8PD9Z+tkyzPVIMVbW5dkUWPPiPzXDsinEp
vNkInwsI4MFPusVmXaNl0KBIDoVUHuwcpNF77lwBbSGyzNsqeNBD6D4vS3cl
dFaxp/d85sEi2TvKN8RfQM/PhYO5P3gwUXq5t9HtJQwce1dxhosXtyVw1RyP
ewVjvgUasjK8GDbIMXAzthq+P4vu/mfGiwm2DOo5Lq9hbsHe6Z0fL4Z7Blw1
PvgGliQUl26l8GJOYPtEcfsbWPXgjTxVxotL56cS66xqYOPhCqt4Ny/uJDdv
de6oAbrvnVk/lnlx15BRyd9jtcC8/8mhWo6daFelvlfjei2wOV2pjj+6E4+/
d6StG64F7lwXPXPTnVgZ+azd9dBb4B+G/j3nd+LZmG0floPfguBuAfeZ5J3o
yciqHNz0Fg6l98Rd+LQTnYol1ylSdaB+Q6vukQkffhsoZ115VwdR+hWPu8/y
4cOGkmLfpTqoZdh/628iH9ZazW+T3lkPihE0p80/8KHXQ3XRBLd6kDnzevum
7i4UlGhdtWNsgAMaR62t1PmRzihh29DJRnD+l4vRTvwIlz9/X77aCHmv2CSK
o/jRvKt1Z+qLRhCQXtigfcuP3jF5W+K5m4Bnz6P7T5V243w+01OvL03AuCZA
oZcTwMIdbJc8A1pAsyyh74iFAJo6rFJ5n7RAjM+fOlt/Afz0iMPA5VsL/Jvo
u1VSKoDxL4+PDpi1wtqnlBMnpfZgSaGSzXGlNpgpYr5ULroX+ZZ+3Pso1g5u
R/6wHmUVxKtMJkI9Xp1gOHilgG+vID78LCB9sLoTZK/wqNAcEUT+ruj0ZeaP
QD8q7f2RJIisNKM5lEcf4X6Se7tPqiDGnSOlJAR+gtHFnstFu4WQhsnKMrK+
C2yKn2/ulxDGudeMJHrfHjASd1vm1TmAuk969Mc7vsKfhMDXw1YHsLV3ae75
z69QSLl0Kf/0AVSoFPF13j0A9BUPdx27fABdN5uLfD0GoFp1Rs2o+QDK04SG
C9EOgoiFV0qsxkG8k62i5yQ5BDSR52WWQATVjA6GlrqPwLPx6L9VJiI40tG7
V/DaCNhpprRecBDB2J9B3u7FI1C1tdxueyRhpuv5kUsj4J36M1akVgQ5Je1r
eoJG4evj4J6TyqKYX6/uzag6BmU9FwLfKYjhtznXmiuy41B4ydX5m54Y/v6a
nByvOQ458gYm/9mKYSP7upu/xThcu8MnfviCGLIeNbrCFDAOLifLh5LrxXCX
xYs+ybJx4J6c0SDri6PEjYidVyS+QdAPc85pOwnkGm8P8GCZAO98xc1Nbwlc
N3vsOLNrApwthRb4Lkqg8mXRa1aiE2D8gtKsnyeBhYkvRf6pTYBo+NXQZ5MS
GL5DPvhi0AT0070dC/Q5hIIN4Q+chyZAiVPiOX2kJCop3Kp6nDUJnbS27zpu
SKKVgeeOzUeT4Lh8dSItTxIVQi7a6JRPQtyn2Z3iDZKYHh11tPQd0T7pcZQR
w2Fc2V+3vPCLaL9d3Cwt4TB+pK2o3234HeLoxX6J3pFCruvlezep38H9v5Ts
ArI0KrWpmBzkn4ZU44XGUEdpVFS/8d5IeBrq7mnNGXlIoz7dMvM5iWng012X
Xw2WxiwO79m7itPQlmr/STtdGo+p8h3Ks50GcSmxLTNfpDFmSuemTcY0zDvW
eEiYH8UB5YzOOo4ZONcyLfPc6BgGN67251BnoA6LvSStjmFBvHzzi9UZYH/t
++DxqWP4azRr4N3fGSh5/psz/9wxvJN14fbX7bOwcmf7yp2bx3DjfvnAI9FZ
CPI6UhLz5Rhm+RxgpT81CxHswZJW9jKoQEftHm6ehQ/XlFw/u8mgvzL17sEP
s7CHgSaLdFYGL2fbHXbvnoXa3/HbDSJlsO6NdE3fyCzQTGTOwT0ZFGGl331u
bRZiK2sLxb/LoPk5xwPhonNwzZbx4F9vWfytTW96KHYOVKVZVmcDZFH3kVqF
dfwcLDNwtvZGyOL1EwbHIxPngFy650zJdVk8nnrk6dv0OTjILPfUpVgWbRzU
3zMWz0FdpYtc+7wsTj1Y8ij9PAer7PVa6Z5yyGH6aSR13zy4tIafPuohj0rs
syLBRfPgqixivHpOHnvSSGtBz+bhdOknudfB8iheA2z+ZfPgcfcgg9YVefwr
ObTHsXoezp77+ID8UB51tJNE2NrnIWzn/vHISXkUKKWffTMzDynu7XadjsfR
k7/nV8T+BUgdCtC45XEc5f4OqLCILsBt032HyL7Hcf2uusIdiQW4oxTwZzzy
OPolTpMeHl2AnB17M37lHEeT6MYzd2EBil6c7xUYPo78u/yW520XoJ5pl6mX
jQJeCjrrr3RjAaYeSOl/dVLAa/d7PjxJWQAW1NTQ8VRAL+nScr60BSCHnJPb
H66Ae8tYFWayFoA607xrMEsBu4akLp4qWoA97X7f9McU0LQ1euuTpgUIvf7B
X8L9BLKNDqUNrhLxiH3zvnPuBCZE8ylO/l6ApqY1N8aQE5j8S+7L7MYCsP8V
Jn+LP4EVWW6b83SL8MgnVDmz6AR2Cf0L+cC2CF+MRRi2UU6gyZm+PBqRRTjK
EZU2G6CIlRECHPpmi1DN3CfWGqGIT4VWc99ZLII6jdTr/DhFNIjeNahtvQgW
1MFRh1RFfCe9eErx5CIEdRwX7y1XxDqh3V8ZTi/Cm6vU1w0ritgWu8NfOnQR
dOkcxu/6KmHdk8kn37IXoet3pX9oiBKypdJ07c5bBNtlFkbrKCV8tTwzYXZ/
EbzGqiU4k5UQKe8Hqh8uQlItb0D8cyUMN5JS93u+CD1hnYyBFCWMst6bFVW3
CI4/VCSNvZXxpSi3jtj4IrBy0nzqCVBGkmW7pNEEMR7pBn+7C8oonkydPvd9
EbjPar/2SFJG5/Xj089mF6Ftxlg/tkQZ04r3aHOtLIL0iIPHy5/KyPbmqFMw
HQVo3kXnC19QwZn7vyNfC1Hg6bSG7uNLKvhcqUYodz8FbBkZF44kqeCHjssD
UQcpUKFxTUYlVwUPPRq4oypOAY/alAbrehU892ziwgNpCnwqfzB2nUEVQw/b
JnEDBe7lNAusJari2tiD5DxbCmSdlOyzTFPFepGz39RPUuAO/62bFTmq+HTr
l9QJewokpTky+j1XxcsMU0KCThQIS/qPuvBJFcPparZedqeA2cWjjd+4AMXp
En0ZAyhAfyr7TGcGoIinivFkAgXKkxQHu80QgcNT0O0FBZzvsjFUWyHuuNfj
dPslBTgLv0nds0WkEQm62vSKAr7112LOOSPGmPjd2PeGApI/B8RZ/BD9uApT
2uookG8THqJ1E7G9rt5y+h0FUg+84Xn5EbH4SGzWqUEKBFSrkLIN1dDYbqzF
5z8KVNq20n0lqSFFaf+doA0KrP4hVXJbquFBcpN45F8KhCq58l+3V0MfWy/b
G5sUuPjm2mTYWTU09fJyKtxChSu1fSHkZDUcmMjXuLudCpkN5+9x9ajhfhq+
/Sn8VBh0/s/cpF8Ny/If2YbupoLAlkuMCUNq+PZPx30HASrkaNzxovuuhqfk
Vj3E91LhQVOt3PIvNTwSKz9bKkSF4pbt7Z071THnVszddDEqvG0vWLlqp46X
bD+VvZGjQhnfp/MXHNTx2DYrjzB5KuSf/rPk66KO4aaZHsePU+EanQnV2ksd
l+w8DJ8rUMFCcX3+YLg6utOpV6UpUWHusf73+kx1PDcVV62pRgXuq9S+31/V
0Vf9WoGwIRUY+3ZZLw6ro19AlNB7wr8PaPaOjavjzTfem35GVBipu9PTOquO
nlaDE3XGVHi8rtZ1+7c6OlBqnCxNqaDqkdp+dJcGiswfbHSyosIZnRM1Z8ga
GLk878riSAWK2K7m0pMa+Hba9Oszwn7bfn/47aiB5ZNNRSQnKkR0vBy6ekYD
KRJn3VOcqZBsrrDxOEwDSWJVNmxuVKhyOK40l6WBc2x6xTNnqEAXIvfKc1wD
xT+P8x7yJ9bHhqe+7LsGymaNWVYTZlH61fZnVgNpo8zo9QKowPOvov/aigbm
OdwrdQ2kglic7HrRFk0UajA6eTuYCibJMsfnD2piqMZDl6FwKmQVHq308tTE
q+e+vqSPo0LbV5e23LOaGOltfjuK8M9taYOf/TQxm9rz6z/CBj5/aJXDNbEq
u1Fz+RIV/hxtNGa5rolTWbtEe69Qwea1xUzxU028ZezqcjWBCrydwbspS5qo
waA4cieFCuqbj6WEf2mi/Qfr3Yy3qHBWekjN6rcmxhW0zPkRbklBj1paLdy3
xVTdIJUKgdZbK5M4tZBqyT+2epsKPWOZxkdktfDKtetyihlUuPmjJto3WAs/
CjyRCsgl+utOdjoZroVGdyc5Ogkblrqo6UZq4c8C3nuiecT6n9tKK3hFC19N
FDR9JRwxZxH1MU0Le1QkxBXvU+H0+PxFqSot7Fu9XjyfTwXlj7siFn5q4UF1
UhlXERV2PVuw61/XQpEenyIXwqvEqbxpQwsHn65ZlxMu1Xf77y69Nq5LevaY
PqGCSEtJmAG3Nt5sOmebUEwFjhqd0CIZbXSTOtG39IwKU0WBQR5+2ugtou5+
pZwKVnv+jRQGaaPNvSMJPYSbb1zWmQ3TxqG/8k5CFcTzEJDO5xmrjX+dPx6o
Juys+qraK1Ubz86+5JypJPK3a+Pf2SptbLn/44PcSyp8WY+9EvhHG31n2Fsz
31BB04tlqfKfNi7cPF0/QrhiOJW8SqeD5jyCwcI1VEhpKBAP3q6Du717eB4T
Jl1vfR8ioIP82u9Fy2up8GHfdvYIVR2sFbb8Wl1HhSbtlDsxMTooaLQVM5uo
8P30646wyzroITAg3U2Y8coknf81Hdxmu76wtZkKuq3yPi4pOiguO9kaQviD
zqCa5n0dPB88xmrRQoXPugfmGRp00EyYmYG2jQrf9KtUrtLqYqxs6LzceyrQ
mgx8uxGli9uXzrjwdBH5Wmu5PyBOF60S1CuRcLJUlws5Xhd3lO0e9SIsyNY2
KZisi6dYXV7XE8aOyqnSXF1ig9XO9OqmQpTBzbnPtbr4iOEX+8vPVKDR1V3Z
+VcXg7KH+2R7if5fNB7boNFDFv3XZ+0IJ4uC/xi9HpaJr45HExZkkv9ZyKKH
PgOMpzoJY8v+1RMCekgaPlDi1kf0r7n5206JuH4gtD+xn+hfrYo2L1QPFan1
3M0DVLDVnG7vv6CHR3rW7OcIV+jwpXLE6OFcwefoHYNU8DAOE4m9poeyiZy2
NoS77FQNTt/Vw4nG16R5wveDWlIla4h4PlYFMQ8T61vcK/qKRh+bg79ki40S
+/FzpuVlen00pomP1iO8XqZQLbFVHzfVdDU9CRe/yjTM4tBH/rlA9yeEeVpP
nY8U1sd93vxikmNEfo5PVWtp6mNLfsMz0XEqxO9cM+q+oo+7c8eKmSaokNrW
NtGQoI8bJzPrhAnnhmaGlt/Qx4ss9K9VCFcNqhSkpuuj6qSWqz/h77lxG1aP
9HFUgCdhmLC6GOeTwRZ91GsWUX06SYUNhcPM3xkMMPHotz7FKSowz/3L/rLV
APdlfF00I8x195NMC6sBjpkYLXoSlvjr7/CIxwCdOv4WZhK2qa+uOnPQABfz
3vP8Jlylp+tG0TTAmW/7+kqnqeBr69KwFmuAtKf/xHHNUoEtd25MOd4A3dRz
30gQLp44vxl93QBtO98OqRGe9o5SZrltgF2HP/eeI3wqMrtK8KEBspv3V7QT
NszvK9JrM8Do0y8lI+aI/ZZicOsuiyFeEqU+7pwn9rNjn0vH2A1RrtdnzwRh
12DbTwd5DDGyTC5ijXAuzRnWkj2G2Pbx53/7Foj9kuvylSYpQ1T8L4jRlzC9
Ql34IskQtfVDbVgWqTAeLesKtw2Rh1IZI08h9hdetiTfDEN0kvI6pkvYs2j6
xb1sQ3Q8du2TDeGf3Znb6R8aop2vQX8EYeYDtOVtVYboala3s4GwVEsHrVk/
0X/CaTc9KhXCtrnnuu42wpvM758bLBH1OQff3d5nhDYnzY3sCNPL8P9o2W+E
d59YDHoSTrTr0BaXNELV5c22q4TzimUoi8pGaFpSsNBCuNWYRiX4lBFOsTk5
qy4T9fhWxsDVe0YoYSp+VniFCtu+cHX5FRhhiWqq/hHCNDuTWu0eG6GxFMdu
ZcKLmTEVh0uNUEXG544l4Zb7XklddUZ46ME4QzzhkDIV9V1jRjgRIVc5R3i4
a/xx4V5jzN1u/PzRD6JecJ3MuylsjEukQuFywu2WvWlhIsZId8UloZZw1df2
WEMpYyQdPKDyhXDyeLn9kooxin4YFab7SeTn8iUOBXtj9NAp2bQh/JBdIrT1
rjGaM7ki3S9i/qZs1unzjDEK1YxZCb94fTVYPd8Yn5vTmPIRbjs9G1hTbIy3
XpDkpAjPvSn0K68xxp5O3zAbwofPiHrnjhojvlGmeUa4ov6AQ/B+E+QeBk2T
VaL+pFuMVIiaoMQXqS02hJu94+xXDpngUhLppTPh3p2Tdj6yJjjYZc4QRHjN
5wHZRcsEF908D2URVuQXNjNxN8F3hpolU4Tr/fZpiT4xwQjfvSMBa0T9/kVN
FnhugmcUqyciCMuG1g1xlJtg7tuO8TjChZFOARvVJvgNQlpTCSdff/Cgq90E
daJzT1QQbt8RQG3pNMGempotbwjT39JUetNtgt4pCS2NhEMyvnc/HDBBxSBT
+c+EHR+K0kXMmeDquObbZcKZ4utG5ykmuNycY/KbcE9xW8bpFRO8FTXST7NO
1IvyM0dN/5hgvqBE7w7CMfKKF7T/EePV09DfSXjk5KXJPbQkNO86+WIvYb4x
S2kuBhLKqj6JOEy4Uki1l5WJhO/lFntkCZu5iEQwbyUhU4meiDJhaj6b8Jbt
JCwRafXVIHx9arX1LwsJg1m9K/QJi4uN+qyzkZC2W3XZlHDLmVauH+wk/Bxd
NUIm7Pzk+atFThJqvu9dMCa8uZDuMMNN/P88jFGI8WRJRTFM8JLw6Yv8W03E
/Cv4ejwZ5iOhBIX2BhD59KWUZNrPT0KjltR/DcTz5/dDYa1bgIQ5tq9Yymeo
sENOKLtjLwk3c3rbIkeI/Sloq0abIAldFq81P/1EBb2XyzMNwiTUcNG9M0TU
56nfX5NqDpBQpinZ9X0hFWKVGmRfipCw9TZNtl0SUa8uFA2UiRHzI25zIOUc
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
mDE=
          "]]}}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 2.8562924539908758`*^-15},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100}, {2.8562924539908758`*^-15, 0.9990658140050591}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
r3M9A78qdl/f3iaB/c13PpKDGfh/ydgPYA==
          "]]}}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100}, {-0.9334836374010975, 0.988843133360053}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
LZUtF+8gLjW2mcCd3XpNF7eNm91B4l8Ulmz3mkJp8xxNB+sdZCB1mVb0gCk8
a307klWQjeIe7lXp4TAFdELH7cpQFjqckabRzGkKXaEnzXIbslCGu6B+Gbcp
bLU+O34sKwuVHtKxvM5nCnUdLUtq7lnoETnhgpWYKdjnyyj0HMxCexYPl/5Q
MIU9QKdb5pKJEnBh9SclU6CzfiD8gZiJGFJlmsZUTCH45txRC9VMxHParLtT
zRSk38fobB7JRCgiYzxezxQ60qlCpp5moDAW7v/4rEwh+26YWbJ6BnrasN8a
2ZiCs0a1na9UBuI2Xiu2tTMFNfN251DuDIRjhhUzHE1BRybyH9VWOtqzEXKO
3sMUWhOO8967l45ix8c610NMgbrnYTufVDpKzb/p9SRnl4+UtIKU1G1UIUo9
dHHaFGJfu9GKyt5CNL8o2XvszSDHYkXu9Hgy2qjPTP7kYAaf2O8fjWxLRgve
klS0zmYgJbXKP52djEbmbJeNXc3gTdtVgzGbZJQ9cf/R+/Nm8H1cUL5z6jqS
6PP22wg3AzKrPbFtPglZpL57InnXDPy1ao3S/ktEuia+aqYlZlAsok0/v5qA
lOj33Q8sM4MTG4ffWb5JQDwxskWdVWbQxTYhlJSbgL4F3wgyaDaDI+tC8gYn
EtAVRy1B10dm0NBN2lIhxaMyqYYreXNmYFvUou3bGIt8WH5s3v9qBhKH/v74
mBWLZP9IBbxYMANnfLLLPyIWdffVe1KtmIHR33GTOULs7v+mnuyxYQbHvis8
OvojBtFerpOR228O055uDlVyMcjtcc2Xp2LmkHG9Zr33dTSSqF10nBM3h3dT
x24ld0ejX6knJikkzUHe7Dejf1U0CreteXnypDk8UDeRjomIRpnL1d1ZSubQ
Xql06IVENBpkqc52MTSHrvftcuPXo5CoU6XxX29zECxokce2kWgwV7F+9bw5
BAWEWOQaRKJz74YY5i+Yw9etFZXripGomLDwajTAHF7s6flTyBaJeJC4Tfll
c4i9VCKS8zoCsXLWuppeN4f3Rr4d7aQItOdNQ3hFtTlwOMmk/iKHo0IG9dm8
WnMgiluJvdMLR2A0qpFWbw5RksFuw4rh6PLDVZqrzeaw34khfIozHG00nrxu
1mEOQ+Grt+36rqKlG/eydp6YQ8wX4fWJiStoQq+10XzBHN443Zzv57mM1E2K
yQGL5iBV+bS8au9lVGl241/asjm0TftcqPkShkLOuOi/+mkOl/1movbVhCGO
AIZZ0vZuvkxUw6AUhsgF7gyEgxag21efdsY2FL1ZZ/fVl7SAHDp4uN0YjEbv
hpxA/hbALfhfsVZlIGKkaGlVDLCA+t/HnChvByJT2x9acpcs4Psmf9LI1UD0
itnN/kSoBdAI0n8qNw9EY9fMbxyNsoAbti3zaE8geu8q9eN3qgVQD8eVb9oH
oM/HvzTXN1oAnbqQrozQRbTRRFTmW93FRq1pN+cvIHp5uWdMvyzgeUg5O+3b
C4ing8OBet0CpvUejVwfuIB0H36Mmt+0gOEax+L+0gso61XAk1pKS2innYv5
7nIBKa5lWSsxWIJNXYzBzhdfFCY3G2QmZQn0ixdr5ufOo5S2fjptGUsQMyvn
9R86j4pVq3JOy1rCeyFXD7aa82hY+2I3h7wlkNXn/zT6nUdcljS0M8gStnWS
7AV3fFDXJbEMbxNLuP67N+MXpw/aeeB3L8Zndz9lH17w9ELvaRoTi3wtIas1
4kCgiRdqM/vh2OVnCbR1qnu4TnqhiyvnD60HWoLlUcbQ7j+eaF7Y29XlqiXY
k5+4Wid6otF0V3bNFEv4sKbY093ggUou2l6mbLQEn8fEwduM7iiy944pV7Ml
rDl8ab+y6YYcDk+IKrRYQrOv/ffwaTfEUW31xrfNEkz2ZeeM1Lqh5I8WktO9
lvDR9ZRttqEbCiIRZ7peWsKPY70J3Umuu/e5tlbYmiWcURHRq+Y+hyhev6a8
+NsSPiVtq9PQnUMtwS5dnpuWcPkPTvZfc0F8fdGnbf5awu7kjsYOu6A/5n2i
itRkiBNroLsd6oIqQ+HQBjMZioSuXZaZPIv2DyiO+cuSIUDC5N+/GmfU5Tl0
y1OODJp1X8cL7jiji4etCc7yZHC5qD5lGu+Mpq2CH5OUyVBj6cC2eNYZPfh+
v11akwwDYUKZ3zidkRvjqYJlUzLMXm2a25vihAbsJN09/cnws6goXjPSETE6
u7XnBpBh7b+5pH2+jsjerfDgyCUyvI+JvD5p54jW/ZgaZcPIkNs2Kdur4IgE
4n7/+RtNBtacpVnPVQcU3oiTUtLJoGBL5S3p6oAU9xHq77WSYaQ4S2K53R7F
0MfvmW8nw3bZ4X3f79ijFwy9ZhxdZDDpo6qnC7NHbpyym1d6ySCo9e5ntbI9
ypBmU9d9Qgb3aQ7fcGyHftlMvxx/TwbGw3S3JJ7YInBkFzr4gQzDH1MEpWps
UeI5UhCaIcOKJhcr4YYt4rvwkLP4MxnsolxjvpnaImJMuYv3EhnqiG15sVM2
KCdx5n7+ym49u2qmgnts0HwKB93o6m798oYkEoptUPidpFq532S4i64rUXva
oOGCRxTum2T4WH2PwdfYBh0p/Ue6s0UGadsN/k1pG+RUdbrk6V8y7P8a717A
YoNq631/7+yQIdLTZtBl0xr9D3HmG2E=
          "]]}}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100}, {-0.1501884221155763, 0.15067193464619347`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
          
          "]]}}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100}, {-0.07797780943909155, 0.1542945052198126}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualize", "Section"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]zrot2", "[", "t_", "]"}], " ", ":=", " ", 
  RowBox[{"RotationMatrix", "[", 
   RowBox[{
    RowBox[{"\[Theta]2", "[", "t", "]"}], ",", " ", "zhat"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]xrot2", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"RotationMatrix", "[", 
    RowBox[{
     RowBox[{"\[Phi]2", "[", "t", "]"}], ",", " ", "xhat"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rhat2", "[", "t_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"\[Phi]xrot2", "[", "t", "]"}], ".", 
   RowBox[{"\[Theta]zrot2", "[", "t", "]"}], ".", 
   "yhat"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]hat2", "[", "t_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"\[Phi]xrot2", "[", "t", "]"}], ".", 
   RowBox[{"\[Theta]zrot2", "[", "t", "]"}], ".", 
   "xhat"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]hat2", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"\[Phi]xrot2", "[", "t", "]"}], ".", 
    RowBox[{"\[Theta]zrot2", "[", "t", "]"}], ".", "zhat"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rvec2", "[", "t_", "]"}], " ", ":=", " ", 
  RowBox[{"r", " ", 
   RowBox[{"rhat2", "[", "t", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"svec2", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"x2", "[", "t", "]"}], " ", "xhat"}], "+", " ", 
    RowBox[{
     RowBox[{"z2", "[", "t", "]"}], " ", "zhat"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hvec2", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{"svec2", "[", "t", "]"}], "+", 
   RowBox[{"rvec2", "[", "t", "]"}]}]}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x2", "[", "t_", "]"}], ":=", 
  RowBox[{"sol", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z2", "[", "t_", "]"}], ":=", 
  RowBox[{"sol", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]2", "[", "t_", "]"}], ":=", 
  RowBox[{"sol", "[", 
   RowBox[{"[", "3", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]2", "[", "t_", "]"}], ":=", 
  RowBox[{"sol", "[", 
   RowBox[{"[", "4", "]"}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"salt", "[", 
   RowBox[{"{", 
    RowBox[{"x_", ",", "y_", ",", "z_"}], "}"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{"Return", "[", 
     RowBox[{"{", 
      RowBox[{"z", ",", "x", ",", "y"}], "}"}], "]"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sphereCenter", "[", "t_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{"salt", "[", 
    RowBox[{"svec2", "[", "t", "]"}], "]"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"headCenter", "[", "t_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{"salt", "[", 
    RowBox[{
     RowBox[{"svec2", "[", "t", "]"}], "+", 
     RowBox[{"rvec2", "[", "t", "]"}]}], "]"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", ".5"}], ",", "1"}], "}"}]}], "}"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Sphere", "[", 
         RowBox[{
          RowBox[{"sphereCenter", "[", "t", "]"}], ",", "r"}], "]"}], ",", 
        RowBox[{"Sphere", "[", 
         RowBox[{
          RowBox[{"headCenter", "[", "t", "]"}], ",", 
          FractionBox["r", "2"]}], "]"}]}], "}"}], "/.", "params"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", ".5"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
     ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "100", ",", ".001"}], "}"}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 3.456, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 100, 0.001}}, Typeset`size$$ = {
    576., {281., 286.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`t$15063$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$15063$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics3D[
        ReplaceAll[{
          Sphere[
           $CellContext`sphereCenter[$CellContext`t$$], $CellContext`r], 
          Sphere[
           $CellContext`headCenter[$CellContext`t$$], $CellContext`r/
           2]}, $CellContext`params], 
        PlotRange -> {{-2, 2}, {-2, 2}, {-0.5, 1}}, ImageSize -> Large, Axes -> 
        True, AxesLabel -> {"x", "y", "z"}, AspectRatio -> 1], 
      "Specifications" :> {{$CellContext`t$$, 0, 100, 0.001}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{623., {334., 341.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{960, 1029},
WindowMargins->{{0, Automatic}, {Automatic, -3}},
PrivateNotebookOptions->{"FileOutlineCache"->False},
TrackCellChangeTimes->False,
FrontEndVersion->"11.0 for Linux x86 (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]

